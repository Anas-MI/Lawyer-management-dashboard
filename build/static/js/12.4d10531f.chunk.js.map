{"version":3,"sources":["../node_modules/d3/d3.js","../node_modules/nvd3/build/nv.d3.js","../node_modules/react-bootstrap/es/CardContext.js","../node_modules/react-bootstrap/es/utils/divWithClassName.js","../node_modules/react-bootstrap/es/CardImg.js","../node_modules/react-bootstrap/es/Card.js","../node_modules/react-bootstrap/es/Col.js","../node_modules/react-bootstrap/es/Row.js","../node_modules/react-nvd3/dist/react-nvd3.min.js"],"names":["__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3","version","d3_arraySlice","slice","d3_array","list","call","d3_document","this","document","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","e","i","length","array","Array","Date","now","createElement","style","setProperty","error","d3_element_prototype","Element","prototype","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","name","value","space","local","priority","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","ascending","descending","min","f","n","max","extent","c","sum","s","mean","j","quantile","values","p","H","h","Math","floor","v","median","numbers","push","sort","variance","d","m","deviation","apply","sqrt","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","t","random","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","keys","map","key","entries","merge","arrays","merged","abs","d3_class","ctor","properties","Object","defineProperty","enumerable","d3_Map","_","create","range","start","stop","step","Infinity","Error","k","d3_range_integerScale","object","forEach","set","isArray","o","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","has","get","remove","empty","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","order","add","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","listeners","listenerByName","event","l","z","on","listener","indexOf","concat","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","hasOwnProperty","requote","replace","d3_requote_re","d3_subclass","__proto__","property","d3_selection","groups","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","_d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","selection","select","d3_selection_selector","selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","parentNode","__data__","selectAll","d3_nsXhtml","d3_nsPrefix","svg","xhtml","xlink","xml","xmlns","d3_selection_attr","ns","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","split","d3_selection_classed","d3_selection_classedName","re","classList","getAttribute","lastIndex","test","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","parent","removeChild","d3_selection_dataNode","data","d3_selection_filter","d3_selection_each","callback","d3_selection_enter","d3_selection_enterPrototype","prefix","attr","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","textContent","html","innerHTML","append","appendChild","insert","before","insertBefore","bind","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","update","enter","exit","datum","filter","next","nextSibling","comparator","args","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","removeEventListener","$","d3_selection_onFilter","addEventListener","match","upgroup","j0","d3_selection_enterInsertBefore","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","w","suppressClick","off","setTimeout","mouse","container","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","changedTouches","ownerSVGElement","createSVGPoint","point","window","scrollX","scrollY","ctm","position","top","margin","padding","border","getScreenCTM","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","origin","mousedown","dragstart","touchstart","id","subject","move","end","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","dx","dy","position1","position0","dragRestore","ε","ε2","π","PI","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","S","ux0","uy0","w0","ux1","uy1","w1","d2","log","d1","b0","b1","r0","r1","coshr0","u","d3_sinh","duration","zoom","translate0","center0","center","mousewheelTimer","touchtime","x0","x1","y0","y1","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","g","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","that","__chart__","pow","transition","rescale","domain","invert","zoomstarted","zoomed","scale","translate","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","moved","ended","changed","LN2","q","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","ceil","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","cx","cy","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","color","toString","rgb","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","r","brighter","darker","hcl","d3_hclPrototype","d3_hcl_lab","cos","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","format","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","result","status","responseText","d3_xhrHasResponse","load","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","charCodeAt","typedResponse","parse","formatRow","formatValue","join","parseRows","Function","JSON","stringify","eol","EOL","EOF","rows","N","I","token","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","delay","then","timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","time","d3_format_precision","LN10","flush","d3_formatPrefixes","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","after","lastIndexOf","String","fromCharCode","_x","X","toPrecision","toExponential","toFixed","d3_time","d3_date","d3_date_utc","UTC","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","number","date","d0","offset","dt","times","utc","d3_time_interval_utc","d3_locale_timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","string","d3_time_formatPads","d3_time_formats","M","L","Z","d3_time_parse","localZ","W","U","d3_time_parsers","multi","d3_time_formatMulti","d3_time_periodLookup","d3_time_dayRe","d3_time_formatRe","d3_time_dayLookup","d3_time_formatLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","A","B","_d","d3_time_formatPad","dayOfYear","sundayOfYear","mondayOfYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","year","day","years","interval","week","sunday","weeks","weekOfYear","-","0","d3_time_numberRe","d3_time_percentRe","names","zs","zh","zm","formats","numberFormat","timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","reset","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","angle","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","line","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","arc","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","shift","d3_geo_clipSegmentLength1","lines","rejoin","d3_geo_clipAntimeridian","_clean","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","C","ρ0","forward","ρ0_y","clipExtent","_stream","output","valid","conicEqualArea","raw","albers","albersUsa","_point","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBuffer","pointCircle","d3_geo_pathBufferCircle","pointLineStart","lineEndPolygon","pointRadius","radius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","_pointRadius","moveTo","lineTo","closePath","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","x2","y2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","_clean2","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","path","projectStream","contextStream","cacheStream","d3_geo_pathProjectStream","transform","methods","_stream2","projectionMutator","equirectangular","circle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_interpolate","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","F","d3_geo_mercator","d3_geo_conicEquidistant","G","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","P","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","splice","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","root","visit","d3_geom_quadtreeVisit","sx","sy","children","find","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","linear","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","skew","ease","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","as","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","layout","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","pie","Number","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","bottom","tops","bottoms","default","silhouette","wiggle","s2","s3","o0","expand","zero","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","mode","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","span","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","ticks","tickFormat","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","identity","d3_scale_identity","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","curve","self","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","count","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","attrTween","styleNull","styleTween","inheritId","id0","id1","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","resize","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","json","responseXML","undefined","exports","__webpack_require__","module","nv","dev","tooltip","utils","models","charts","logs","dom","oThis","TypeError","aArgs","fToBind","fNOP","fBound","startTime","endTime","totalTime","console","deprecated","info","warn","render","render_start","renderLoop","chart","graph","generate","render_end","addGraph","obj","write","fastdom","mutate","read","measure","interactiveGuideline","height","xScale","showGuideLine","svgContainer","isMSIE","ActiveXObject","layer","availableWidth","availableHeight","mouseHandler","mouseX","mouseY","subtractMargin","mouseOutAnyReason","offsetX","offsetY","tagName","className","nvPointerEventsClass","elementMouseout","renderGuideLine","hidden","pointXValue","elementIndex","elementMousemove","elementDblclick","elementClick","elementMouseDown","elementMouseUp","guideLine","NaNtoZero","hideDelay","interactiveBisect","searchVal","xAccessor","_xAccessor","currentValue","nextIndex","nextValue","nearestValueIndex","yDistMax","indexToHighlight","delta","snapDistance","classes","lastPosition","enabled","headerEnabled","valueFormatter","headerFormatter","keyFormatter","contentGenerator","elem","table","trowEnter","highlight","total","percent","opacityScale","outerHTML","footer","pos","client","dataSeriesExists","isObject","positionTooltip","gravityOffset","tmp","offsetHeight","offsetWidth","clientWidth","clientHeight","calcGravityOffset","old_translate","new_translate","translateInterpolator","is_hidden","nvtooltip","newContent","options","optionsFunc","_options","chartContainer","fixedTop","initOptions","windowSize","innerWidth","innerHeight","compatMode","isFunction","isDate","isNumber","windowResize","handler","getColor","defaultColor","color_scale","customTheme","dictionary","getKey","defaultColors","defIndex","pjax","content","href","fragment","replaceChild","history","pushState","state","calcApproxTextWidth","svgTextElem","fontSize","textLength","watchTransition","renderWatch","_duration","renderStack","model","__rendered","arg","renderEnd","every","deepExtend","dst","srcObj","_setState","_getState","init","getter","fn","settings","calcTicksX","numTicks","numValues","stream_len","calcTicksY","initOption","_calls","_overrides","ops","getOwnPropertyNames","calls","inheritOptionsD3","oplist","_d3options","item","arrayUnique","symbolMap","inheritOptions","inherited","_inherited","d3ops","initSVG","nvd3-svg","sanitizeHeight","sanitizeWidth","noData","opt","noDataText","wrapTicks","word","words","lineNumber","tspan","getComputedTextLength","arrayEquals","array1","array2","pointIsInArc","pt","ptData","d3Arc","r2","theta1","dist","tickFormatMaxMin","axisLabelText","showMaxMin","rotateLabels","rotateYLabel","staggerLabels","isOrdinal","axisLabelDistance","fmt","xLabelMargin","axisMaxMin","axisLabel","maxTextWidth","textHeight","xTicks","rotateLabelsRule","box","maxMinRange","boxPlot","xDomain","xRange","yDomain","yRange","xScale0","yScale0","yScale","getX","label","getQ1","Q1","getQ2","Q2","getQ3","Q3","getWl","whisker_low","getWh","whisker_high","getOlItems","outliers","getOlValue","getOlLabel","getOlColor","maxBoxWidth","yData","q3","wl","wh","olItems","boxplots","boxEnter","hover","box_width","box_left","box_right","endpoint","elementMouseover","q2","itemColor","outlierValue","outlierLabel","outlierColor","boxPlotChart","boxplot","xAxis","yAxis","showXAxis","showYAxis","rightAlignYAxis","beforeUpdate","gEnter","defsEnter","disabled","evt","tooltipContent","bullet","markers","markerLines","measures","rangeLabels","markerLabels","markerLineLabels","measureLabels","forceX","defaultRangeLabels","legacyRangeClassNames","sortLabels","labels","lz","iA","iB","rangez","markerz","markerLinez","measurez","rangeLabelz","markerLabelz","markerLineLabelz","measureLabelz","il","rangeClassNames","xp1","h3","markerData","marker","markerLinesData","bulletChart","title","subtitle","bulletWrap","candlestickBar","getY","getOpen","getClose","close","getHigh","high","getLow","low","forceY","padData","clipEdge","interactive","barWidth","wrapEnter","chartClick","tickGroups","highlightPoint","pointIndex","isHoverOver","clearHighlights","cumulativeLineChart","legend","controls","interactiveLayer","marginTop","showLegend","showControls","useInteractiveGuideline","rescaleY","defaultState","average","noErrorCheck","updateState","currentYDomain","stateGetter","stateSetter","indexDrag","updateZero","stateChange","idx","indexifyYGetter","indexValue","tempDisabled","display","indexify","getCurrentYDomain","interactivePointerEvents","controlsData","rightAlign","linesWrap","seriesIndex","avgLineData","avgLines","getAvgLineY","yVal","indexLine","oldDuration","_ticks","newState","singlePoint","pointXLocation","allData","yValue","xValue","seriesDomains","useVoronoi","discreteBar","showValues","valueFormat","rectClass","seriesData","bars","barsEnter","element","stopPropagation","elementDblClick","discreteBarChart","discretebar","wrapLabels","distribution","getData","naxis","distWrap","focus","brushExtent","syncBrushing","pointActive","contentWrap","onBrush","brushBG","brushBGenter","gBrush","shouldDispatch","leftWidth","rightWidth","xTickFormat","yTickFormat","forceDirectedGraph","linkDist","nodeExtras","linkExtras","nodeFieldSet","Set","nodeColor","furiousLegend","maxKeyLength","radioButtonMode","expanded","vers","setTextColor","disengaged","setBGColor","seriesShape","seriesEnter","versPadding","seriesText","legendMouseover","legendMouseout","legendClick","userDisabled","legendDblclick","seriesWidths","legendText","nodeTextLength","trimmedKey","seriesPerRow","legendWidth","columnWidths","prev","cur","xPositions","curX","xpos","ypos","newxpos","maxwidth","historicalBar","rval","historicalBarChart","bar_model","transitionDuration","tooltipHide","ohlcBarChart","ohlcBar","candlestickBarChart","enableDoubleClick","setBGOpacity","scatter","strokeWidth","isArea","pointSize","pointDomain","scatterWrap","fillOpacity","areaPaths","linePaths","lineChart","legendPosition","focusEnable","focusEnter","updateXAxis","updateYAxis","disableTooltip","currentValues","pointYValue","yPos","x2Axis","y2Axis","focusHeight","focusShowAxisX","focusShowAxisY","focusMargin","lineWithFocusChart","linePlusBarChart","y4","lines2","bars2","y1Axis","y3Axis","y4Axis","margin2","legendLeftAxisHint","legendRightAxisHint","switchYAxisOrder","allDisabled","availableHeight1","availableHeight2","dataBars","bar","dataLines","series1","series2","contextEnter","legendXPosition","originalKey","bars2Wrap","lines2Wrap","dataLine","focusBarsWrap","focusLinesWrap","barsOpacity","linesOpacity","y1Opacity","y2Opacity","main","getLinesAxis","getBarsAxis","multiBar","stacked","stackOffset","hideable","barColor","groupSpacing","last_datalength","nonStackableCount","parsed","nonStackable","nonStackableSeries","posBase","negBase","exitTransition","barSelection","multiBarChart","multibar","controlLabels","reduceXTicks","controlWidth","grouped","getTranslate","totalInBetweenTicks","multiBarHorizontal","getYerr","yErr","showBarLabels","valuePadding","xerr","yerr","multiBarHorizontalChart","controlsPosition","multiChart","yDomain1","yDomain2","yScale1","yScale2","lines1","scatters1","scatters2","bars1","stack1","stackedArea","stack2","yAxis1","yAxis2","dataLines1","dataLines2","dataScatters1","dataScatters2","dataBars1","dataBars2","dataStack1","dataStack2","color_array","lines1Wrap","scatters1Wrap","bars1Wrap","stack1Wrap","scatters2Wrap","stack2Wrap","extraValue1BarStacked","aVal","extraValue2BarStacked","mouseover_line","yaxis","mouseover_scatter","mouseover_stack","mouseover_bar","serieIndex","parallelCoordinates","foreground","dimensions","undefinedValuesLabel","dimensionData","enabledDimensions","dimensionNames","displayBrush","filters","axisWithUndefinedValues","lineTension","newData","val","dataValues","currentPosition","oldDomainMaxValue","displayMissingValuesline","currentTicks","onlyUndefinedValues","hasOnlyNaN","hasNaN","missingValuesline","missingValueslineText","axisDrag","__origin__","dimensionPosition","dimensionsOrder","lineData","dimensionsEnter","restoreBrush","actives","extents","formerActive","newscale","brushDomain","updateTicks","isActive","hasActiveBrush","brushEnd","activeChanged","dimensionFormats","parallelCoordinatesChart","nanValue","originalPosition","isSorted","str","tp","dim","dd","showLabels","labelsOutside","labelType","labelThreshold","hideOverlapLabels","donut","growOnHover","titleOffset","labelSunbeamLayout","donutRatio","arcsRadius","arcsOver","arcsRadiusOuter","arcsRadiusInner","outer","inner","g_pie","arcOver","slices","pieLabels","ae","_current","labelsArc","rotateAngle","labelLocationHash","createHashKey","getSlicePercentage","hashKey","getBBox","topLeft","topRight","bottomLeft","bottomRight","pieLabelsOutside","donutLabelsOutside","labelFormat","pieChart","showTooltipPercent","pieWrap","sankey","nodeWidth","nodePadding","sinksRight","iterations","sourceLinks","targetLinks","nextNodes","remainingNodes","moveSinksRight","computeNodeBreadths","nodesByBreadth","initializeNodeDepth","resolveCollisions","computeLinkDepths","relaxRightToLeft","relaxLeftToRight","weightedSource","breadth","weightedTarget","ty","ascendingDepth","computeNodeDepths","curvature","ascendingSourceDepth","ascendingTargetDepth","sankeyChart","units","formatNumber","linkTitle","nodeFillColor","nodeStrokeColor","nodeTitle","showError","message","testData","isDataValid","dataAvailable","nodeStyle","fillColor","strokeColor","xDom","yDom","width0","height0","timeoutID","pointBorderColor","getSize","getShape","shape","forceSize","notActive","padDataOuter","clipVoronoi","showVoronoi","clipRadius","sizeDomain","sizeRange","interactiveUpdateDelay","needsUpdate","_sizeRange_def","_cache","delCache","getDiffs","cache","getCache","diffs","logScale","scaleDiff","sizeDiff","domainDiff","updateInteractiveLayer","pX","pY","pointArray","pointPaths","vPointPaths","mouseEventCallback","el","mDispatch","scrollTop","pageYOffset","scrollLeft","pageXOffset","relativePos","titles","pointScale","pointRange","forcePoint","pointShape","scatterChart","distX","distY","showDistX","showDistY","regWrap","regLine","intercept","slope","sparkline","animate","showMinMaxPoints","showCurrentPoint","yValues","maxPoint","minPoint","currentPoint","sparklinePlus","paused","showLastValue","alignValue","rightAlignValue","sparklineWrap","updateValueLine","hoverValue","hoverEnter","closestIndex","getClosestIndex","dataRaw","aseries","dataFiltered","zeroArea","areaMouseover","areaMouseout","areaClick","d3_stackedOffset_stackPercent","stackData","stackedAreaChart","showTotalInTooltip","totalLabel","controlOptions","oldYTickFormat","oldValueFormatter","percentFormatter","xAxisHeight","legendTop","metaKey","stack_percent","requiredTop","stackedWrap","currentFormat","valueSum","allNullValues","atleastOnePoint","tooltipValue","stackedY0","stackedY","stackedAreaWithFocusChart","sunburst","modes","groupColorByParent","prevPositions","rotationToAvoidUpsideDown","computeCenterAngle","computeNodePercentage","labelThresholdMatched","arcTweenZoom","xd","yd","yr","arcTweenUpdate","ipo","storeRetrievePrevPositions","pP","updatePrevPosition","zoomClick","centerAngle","cG","sunburstChart","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","__webpack_exports__","createContext","divWithClassName","react_default","forwardRef","ref","esm_extends","classnames_default","CardImg_CardImg","_React$Component","CardImg","inheritsLoose","_this$props","props","bsPrefix","variant","Component","objectWithoutPropertiesLoose","baseClass","defaultProps","es_CardImg","ThemeProvider","CardBody","createWithBsPrefix","Card_Card","Card","_this","_len","_key","getDerivedStateFromProps","_ref","cardContext","cardHeaderBsPrefix","CardContext","Provider","DivStyledAsH5","DivStyledAsH6","DecoratedCard","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_3__","classnames__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_5__","DEVICE_SIZES","Col","spans","brkPoint","propValue","_propValue$span","infix","Row","noGutters","loaded","__esModule","O","renderChart","isCallable","ready","resizeHandler","rendering","renderStart","parsedProps","bindFunctions","getValueFunction","pick","propsByPrefix","configureComponents","without","configure","refs","isPlainObject","chartOptions","containerStyle","assign","_e","__g","__e","Symbol","getKeys","getSymbols","isEnum","getProto","getPrototypeOf","propertyIsEnumerable","getDesc","getOwnPropertyDescriptor","setDesc","setDescs","defineProperties","getNames","getOwnPropertySymbols","configurable","writable","ReferenceError","constructor","E","T","_k","V","J","for","keyFor","useSetter","useSimple","_e2","setPrototypeOf","check","includes","negate","filterObject","substr"],"mappings":"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","file":"static/js/12.4d10531f.chunk.js","sourcesContent":["!function () {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n\n  var d3_arraySlice = [].slice,\n      d3_array = function d3_array(list) {\n    return d3_arraySlice.call(list);\n  };\n\n  var d3_document = this.document;\n\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function d3_array(list) {\n        var i = list.length,\n            array = new Array(i);\n\n        while (i--) {\n          array[i] = list[i];\n        }\n\n        return array;\n      };\n    }\n  }\n\n  if (!Date.now) Date.now = function () {\n    return +new Date();\n  };\n\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype,\n          d3_element_setAttribute = d3_element_prototype.setAttribute,\n          d3_element_setAttributeNS = d3_element_prototype.setAttributeNS,\n          d3_style_prototype = this.CSSStyleDeclaration.prototype,\n          d3_style_setProperty = d3_style_prototype.setProperty;\n\n      d3_element_prototype.setAttribute = function (name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n\n      d3_element_prototype.setAttributeNS = function (space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n\n      d3_style_prototype.setProperty = function (name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n\n  d3.ascending = d3_ascending;\n\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  d3.descending = function (a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n\n  d3.min = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && a > b) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.max = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null && b > a) a = b;\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n      }\n    }\n\n    return a;\n  };\n\n  d3.extent = function (array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if ((b = array[i]) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = array[i]) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    } else {\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null && b >= b) {\n          a = c = b;\n          break;\n        }\n      }\n\n      while (++i < n) {\n        if ((b = f.call(array, array[i], i)) != null) {\n          if (a > b) a = b;\n          if (c < b) c = b;\n        }\n      }\n    }\n\n    return [a, c];\n  };\n\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n\n  d3.sum = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = +array[i])) s += a;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n      }\n    }\n\n    return s;\n  };\n\n  d3.mean = function (array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) s += a;else --j;\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a;else --j;\n      }\n    }\n\n    if (j) return s / j;\n  };\n\n  d3.quantile = function (values, p) {\n    var H = (values.length - 1) * p + 1,\n        h = Math.floor(H),\n        v = +values[h - 1],\n        e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n\n  d3.median = function (array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n      }\n    }\n\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n\n  d3.variance = function (array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  };\n\n  d3.deviation = function () {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n\n  function d3_bisector(compare) {\n    return {\n      left: function left(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n        }\n\n        return lo;\n      },\n      right: function right(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n        }\n\n        return lo;\n      }\n    };\n  }\n\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n\n  d3.bisector = function (f) {\n    return d3_bisector(f.length === 1 ? function (d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n\n  d3.shuffle = function (array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n\n    var m = i1 - i0,\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n\n    return array;\n  };\n\n  d3.permute = function (array, indexes) {\n    var i = indexes.length,\n        permutes = new Array(i);\n\n    while (i--) {\n      permutes[i] = array[indexes[i]];\n    }\n\n    return permutes;\n  };\n\n  d3.pairs = function (array) {\n    var i = 0,\n        n = array.length - 1,\n        p0,\n        p1 = array[0],\n        pairs = new Array(n < 0 ? 0 : n);\n\n    while (i < n) {\n      pairs[i] = [p0 = p1, p1 = array[++i]];\n    }\n\n    return pairs;\n  };\n\n  d3.transpose = function (matrix) {\n    if (!(n = matrix.length)) return [];\n\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n\n    return transpose;\n  };\n\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n\n  d3.zip = function () {\n    return d3.transpose(arguments);\n  };\n\n  d3.keys = function (map) {\n    var keys = [];\n\n    for (var key in map) {\n      keys.push(key);\n    }\n\n    return keys;\n  };\n\n  d3.values = function (map) {\n    var values = [];\n\n    for (var key in map) {\n      values.push(map[key]);\n    }\n\n    return values;\n  };\n\n  d3.entries = function (map) {\n    var entries = [];\n\n    for (var key in map) {\n      entries.push({\n        key: key,\n        value: map[key]\n      });\n    }\n\n    return entries;\n  };\n\n  d3.merge = function (arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) {\n      j += arrays[i].length;\n    }\n\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  };\n\n  var abs = Math.abs;\n\n  d3.range = function (start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [],\n        k = d3_range_integerScale(abs(step)),\n        i = -1,\n        j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) {\n      range.push(j / k);\n    } else while ((j = start + step * ++i) < stop) {\n      range.push(j / k);\n    }\n    return range;\n  };\n\n  function d3_range_integerScale(x) {\n    var k = 1;\n\n    while (x * k % 1) {\n      k *= 10;\n    }\n\n    return k;\n  }\n\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n\n  d3.map = function (object, f) {\n    var map = new d3_Map();\n\n    if (object instanceof d3_Map) {\n      object.forEach(function (key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n      if (arguments.length === 1) while (++i < n) {\n        map.set(i, object[i]);\n      } else while (++i < n) {\n        map.set(f.call(object, o = object[i], i), o);\n      }\n    } else {\n      for (var key in object) {\n        map.set(key, object[key]);\n      }\n    }\n\n    return map;\n  };\n\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n\n  var d3_map_proto = \"__proto__\",\n      d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function get(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function set(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function values() {\n      var values = [];\n\n      for (var key in this._) {\n        values.push(this._[key]);\n      }\n\n      return values;\n    },\n    entries: function entries() {\n      var entries = [];\n\n      for (var key in this._) {\n        entries.push({\n          key: d3_map_unescape(key),\n          value: this._[key]\n        });\n      }\n\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key), this._[key]);\n      }\n    }\n  });\n\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n\n  function d3_map_keys() {\n    var keys = [];\n\n    for (var key in this._) {\n      keys.push(d3_map_unescape(key));\n    }\n\n    return keys;\n  }\n\n  function d3_map_size() {\n    var size = 0;\n\n    for (var key in this._) {\n      ++size;\n    }\n\n    return size;\n  }\n\n  function d3_map_empty() {\n    for (var key in this._) {\n      return false;\n    }\n\n    return true;\n  }\n\n  d3.nest = function () {\n    var nest = {},\n        keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup;\n\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          object,\n          setter,\n          valuesByKey = new d3_Map(),\n          values;\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [object]);\n        }\n      }\n\n      if (mapType) {\n        object = mapType();\n\n        setter = function setter(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n\n        setter = function setter(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n\n      valuesByKey.forEach(setter);\n      return object;\n    }\n\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [],\n          sortKey = sortKeys[depth++];\n      map.forEach(function (key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function (a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n\n    nest.map = function (array, mapType) {\n      return map(mapType, array, 0);\n    };\n\n    nest.entries = function (array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n\n    nest.key = function (d) {\n      keys.push(d);\n      return nest;\n    };\n\n    nest.sortKeys = function (order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n\n    nest.sortValues = function (order) {\n      sortValues = order;\n      return nest;\n    };\n\n    nest.rollup = function (f) {\n      rollup = f;\n      return nest;\n    };\n\n    return nest;\n  };\n\n  d3.set = function (array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) {\n      set.add(array[i]);\n    }\n    return set;\n  };\n\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function add(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function forEach(f) {\n      for (var key in this._) {\n        f.call(this, d3_map_unescape(key));\n      }\n    }\n  });\n  d3.behavior = {};\n\n  function d3_identity(d) {\n    return d;\n  }\n\n  d3.rebind = function (target, source) {\n    var i = 1,\n        n = arguments.length,\n        method;\n\n    while (++i < n) {\n      target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    }\n\n    return target;\n  };\n\n  function d3_rebind(target, source, method) {\n    return function () {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n\n  var d3_vendorPrefixes = [\"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\"];\n\n  function d3_noop() {}\n\n  d3.dispatch = function () {\n    var dispatch = new d3_dispatch(),\n        i = -1,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    return dispatch;\n  };\n\n  function d3_dispatch() {}\n\n  d3_dispatch.prototype.on = function (type, listener) {\n    var i = type.indexOf(\".\"),\n        name = \"\";\n\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n\n  function d3_dispatch_event(dispatch) {\n    var listeners = [],\n        listenerByName = new d3_Map();\n\n    function event() {\n      var z = listeners,\n          i = -1,\n          n = z.length,\n          l;\n\n      while (++i < n) {\n        if (l = z[i].on) l.apply(this, arguments);\n      }\n\n      return dispatch;\n    }\n\n    event.on = function (name, listener) {\n      var l = listenerByName.get(name),\n          i;\n      if (arguments.length < 2) return l && l.on;\n\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n\n    return event;\n  }\n\n  d3.event = null;\n\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n\n  function d3_eventSource() {\n    var e = d3.event,\n        s;\n\n    while (s = e.sourceEvent) {\n      e = s;\n    }\n\n    return e;\n  }\n\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(),\n        i = 0,\n        n = arguments.length;\n\n    while (++i < n) {\n      dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    }\n\n    dispatch.of = function (thiz, argumentz) {\n      return function (e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n\n    return dispatch;\n  }\n\n  d3.requote = function (s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function (object, prototype) {\n    object.__proto__ = prototype;\n  } : function (object, prototype) {\n    for (var property in prototype) {\n      object[property] = prototype[property];\n    }\n  };\n\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n\n  var d3_select = function d3_select(s, n) {\n    return n.querySelector(s);\n  },\n      d3_selectAll = function d3_selectAll(s, n) {\n    return n.querySelectorAll(s);\n  },\n      _d3_selectMatches = function d3_selectMatches(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\n    _d3_selectMatches = function d3_selectMatches(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n\n    return _d3_selectMatches(n, s);\n  };\n\n  if (typeof Sizzle === \"function\") {\n    d3_select = function d3_select(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n\n    d3_selectAll = Sizzle;\n    _d3_selectMatches = Sizzle.matchesSelector;\n  }\n\n  d3.selection = function () {\n    return d3.select(d3_document.documentElement);\n  };\n\n  var d3_selectionPrototype = d3.selection.prototype = [];\n\n  d3_selectionPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        group,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_select(selector, this);\n    };\n  }\n\n  d3_selectionPrototype.selectAll = function (selector) {\n    var subgroups = [],\n        subgroup,\n        node;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function () {\n      return d3_selectAll(selector, this);\n    };\n  }\n\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function qualify(name) {\n      var i = name.indexOf(\":\"),\n          prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n\n  d3_selectionPrototype.attr = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n\n      for (value in name) {\n        this.each(d3_selection_attr(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_attr(name, value));\n  };\n\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name);else this.setAttribute(name, x);\n    }\n\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local);else this.setAttributeNS(name.space, name.local, x);\n    }\n\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n\n  d3_selectionPrototype.classed = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(),\n            n = (name = d3_selection_classes(name)).length,\n            i = -1;\n\n        if (value = node.classList) {\n          while (++i < n) {\n            if (!value.contains(name[i])) return false;\n          }\n        } else {\n          value = node.getAttribute(\"class\");\n\n          while (++i < n) {\n            if (!d3_selection_classedRe(name[i]).test(value)) return false;\n          }\n        }\n\n        return true;\n      }\n\n      for (value in name) {\n        this.each(d3_selection_classed(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_classed(name, value));\n  };\n\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n\n    function classedConstant() {\n      var i = -1;\n\n      while (++i < n) {\n        name[i](this, value);\n      }\n    }\n\n    function classedFunction() {\n      var i = -1,\n          x = value.apply(this, arguments);\n\n      while (++i < n) {\n        name[i](this, x);\n      }\n    }\n\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function (node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n\n  d3_selectionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.each(d3_selection_style(priority, name[priority], value));\n        }\n\n        return this;\n      }\n\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n\n      priority = \"\";\n    }\n\n    return this.each(d3_selection_style(name, value, priority));\n  };\n\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name);else this.style.setProperty(name, x, priority);\n    }\n\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n\n  d3_selectionPrototype.property = function (name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n\n      for (value in name) {\n        this.each(d3_selection_property(value, name[value]));\n      }\n\n      return this;\n    }\n\n    return this.each(d3_selection_property(name, value));\n  };\n\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n\n    function propertyConstant() {\n      this[name] = value;\n    }\n\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name];else this[name] = x;\n    }\n\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n\n  d3_selectionPrototype.text = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.textContent = \"\";\n    } : function () {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n\n  d3_selectionPrototype.html = function (value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function () {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function () {\n      this.innerHTML = \"\";\n    } : function () {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n\n  d3_selectionPrototype.append = function (name) {\n    name = d3_selection_creator(name);\n    return this.select(function () {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument,\n          namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n\n  d3_selectionPrototype.insert = function (name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function () {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n\n  d3_selectionPrototype.remove = function () {\n    return this.each(d3_selectionRemove);\n  };\n\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  d3_selectionPrototype.data = function (value, key) {\n    var i = -1,\n        n = this.length,\n        group,\n        node;\n\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n\n      return value;\n    }\n\n    function bind(group, groupData) {\n      var i,\n          n = group.length,\n          m = groupData.length,\n          n0 = Math.min(n, m),\n          updateNodes = new Array(m),\n          enterNodes = new Array(m),\n          exitNodes = new Array(n),\n          node,\n          nodeData;\n\n      if (key) {\n        var nodeByKeyValue = new d3_Map(),\n            keyValues = new Array(n),\n            keyValue;\n\n        for (i = -1; ++i < n;) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n\n            keyValues[i] = keyValue;\n          }\n        }\n\n        for (i = -1; ++i < m;) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n\n          nodeByKeyValue.set(keyValue, true);\n        }\n\n        for (i = -1; ++i < n;) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0;) {\n          node = group[i];\n          nodeData = groupData[i];\n\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n\n        for (; i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n\n        for (; i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n\n    var enter = d3_selection_enter([]),\n        update = d3_selection([]),\n        exit = d3_selection([]);\n\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n\n    update.enter = function () {\n      return enter;\n    };\n\n    update.exit = function () {\n      return exit;\n    };\n\n    return update;\n  };\n\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n\n  d3_selectionPrototype.datum = function (value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n\n  d3_selectionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  function d3_selection_filter(selector) {\n    return function () {\n      return _d3_selectMatches(this, selector);\n    };\n  }\n\n  d3_selectionPrototype.order = function () {\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  };\n\n  d3_selectionPrototype.sort = function (comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      this[j].sort(comparator);\n    }\n\n    return this.order();\n  };\n\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function (a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n\n  d3_selectionPrototype.each = function (callback) {\n    return d3_selection_each(this, function (node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n\n    return groups;\n  }\n\n  d3_selectionPrototype.call = function (callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n\n  d3_selectionPrototype.empty = function () {\n    return !this.node();\n  };\n\n  d3_selectionPrototype.node = function () {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  };\n\n  d3_selectionPrototype.size = function () {\n    var n = 0;\n    d3_selection_each(this, function () {\n      ++n;\n    });\n    return n;\n  };\n\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\n  d3_selection_enterPrototype.select = function (selector) {\n    var subgroups = [],\n        subgroup,\n        subnode,\n        upgroup,\n        group,\n        node;\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n\n      for (var i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_selection(subgroups);\n  };\n\n  d3_selection_enterPrototype.insert = function (name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function (d, i, j) {\n      var group = enter[j].update,\n          n = group.length,\n          node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n\n      while (!(node = group[i0]) && ++i0 < n) {\n        ;\n      }\n\n      return node;\n    };\n  }\n\n  d3.select = function (node) {\n    var group;\n\n    if (typeof node === \"string\") {\n      group = [d3_select(node, d3_document)];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [node];\n      group.parentNode = d3_documentElement(node);\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3.selectAll = function (nodes) {\n    var group;\n\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n\n    return d3_selection([group]);\n  };\n\n  d3_selectionPrototype.on = function (type, listener, capture) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n\n        for (capture in type) {\n          this.each(d3_selection_on(capture, type[capture], listener));\n        }\n\n        return this;\n      }\n\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type,\n        i = type.indexOf(\".\"),\n        wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n\n    function onRemove() {\n      var l = this[name];\n\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"),\n          match;\n\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function (k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n\n  function d3_selection_onListener(listener, argumentz) {\n    return function (e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function (e) {\n      var target = this,\n          related = e.relatedTarget;\n\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n\n  var d3_event_dragSelect,\n      d3_event_dragId = 0;\n\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId,\n        click = \"click\" + name,\n        w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style,\n          select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n\n    return function (suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\n      if (suppressClick) {\n        var off = function off() {\n          w.on(click, null);\n        };\n\n        w.on(click, function () {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n\n  d3.mouse = function (container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY;else point.x = e.clientX, point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = container.getBoundingClientRect();\n    return [e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop];\n  }\n\n  d3.touch = function (container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n\n  d3.behavior.drag = function () {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"),\n        origin = null,\n        mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"),\n        touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n\n    function dragstart(id, position, subject, move, end) {\n      return function () {\n        var that = this,\n            target = d3.event.target.correspondingElement || d3.event.target,\n            parent = that.parentNode,\n            dispatch = event.of(that, arguments),\n            dragged = 0,\n            dragId = id(),\n            dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId),\n            dragOffset,\n            dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended),\n            dragRestore = d3_event_dragSuppress(target),\n            position0 = position(parent, dragId);\n\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [dragOffset.x - position0[0], dragOffset.y - position0[1]];\n        } else {\n          dragOffset = [0, 0];\n        }\n\n        dispatch({\n          type: \"dragstart\"\n        });\n\n        function moved() {\n          var position1 = position(parent, dragId),\n              dx,\n              dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n\n    drag.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n\n    return d3.rebind(drag, event, \"on\");\n  };\n\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n\n  d3.touches = function (container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function (touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n\n  var ε = 1e-6,\n      ε2 = ε * ε,\n      π = Math.PI,\n      τ = 2 * π,\n      τε = τ - ε,\n      halfπ = π / 2,\n      d3_radians = π / 180,\n      d3_degrees = 180 / π;\n\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n\n  var ρ = Math.SQRT2,\n      ρ2 = 2,\n      ρ4 = 4;\n\n  d3.interpolateZoom = function (p0, p1) {\n    var ux0 = p0[0],\n        uy0 = p0[1],\n        w0 = p0[2],\n        ux1 = p1[0],\n        uy1 = p1[1],\n        w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n\n      i = function i(t) {\n        return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S)];\n      };\n    } else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n\n      i = function i(t) {\n        var s = t * S,\n            coshr0 = d3_cosh(r0),\n            u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0)];\n      };\n    }\n\n    i.duration = S * 1e3;\n    return i;\n  };\n\n  d3.behavior.zoom = function () {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    },\n        translate0,\n        center0,\n        center,\n        size = [960, 500],\n        scaleExtent = d3_behavior_zoomInfinity,\n        duration = 250,\n        zooming = 0,\n        mousedown = \"mousedown.zoom\",\n        mousemove = \"mousemove.zoom\",\n        mouseup = \"mouseup.zoom\",\n        mousewheelTimer,\n        touchstart = \"touchstart.zoom\",\n        touchtime,\n        event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"),\n        x0,\n        x1,\n        y0,\n        y1;\n\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function d3_behavior_zoomDelta() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n\n    zoom.event = function (g) {\n      g.each(function () {\n        var dispatch = event.of(this, arguments),\n            view1 = view;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function () {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function () {\n            var dx = size[0],\n                dy = size[1],\n                cx = center0 ? center0[0] : dx / 2,\n                cy = center0 ? center0[1] : dy / 2,\n                i = d3.interpolateZoom([(cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k], [(cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k]);\n            return function (t) {\n              var l = i(t),\n                  k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function () {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function () {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n\n    zoom.translate = function (_) {\n      if (!arguments.length) return [view.x, view.y];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n\n    zoom.scale = function (_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n\n    zoom.scaleExtent = function (_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.center = function (_) {\n      if (!arguments.length) return center;\n      center = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.size = function (_) {\n      if (!arguments.length) return size;\n      size = _ && [+_[0], +_[1]];\n      return zoom;\n    };\n\n    zoom.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n\n    zoom.x = function (z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    zoom.y = function (z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n\n    function location(p) {\n      return [(p[0] - view.x) / view.k, (p[1] - view.y) / view.k];\n    }\n\n    function point(l) {\n      return [l[0] * view.k + view.x, l[1] * view.k + view.y];\n    }\n\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function (x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function (y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [view.x, view.y]\n      });\n    }\n\n    function zoomended(dispatch) {\n      if (! --zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n\n    function mousedowned() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          dragged = 0,\n          subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended),\n          location0 = location(d3.mouse(that)),\n          dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n\n    function touchstarted() {\n      var that = this,\n          dispatch = event.of(that, arguments),\n          locations0 = {},\n          distance0 = 0,\n          scale0,\n          zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier,\n          touchmove = \"touchmove\" + zoomName,\n          touchend = \"touchend\" + zoomName,\n          targets = [],\n          subject = d3.select(that),\n          dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function (t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n\n        var touches = relocate(),\n            now = Date.now();\n\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0],\n              q = touches[1],\n              dx = p[0] - q[0],\n              dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n\n      function moved() {\n        var touches = d3.touches(that),\n            p0,\n            l0,\n            p1,\n            l1;\n        d3_selection_interrupt.call(that);\n\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1,\n              scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n          l0 = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n          scaleTo(scale1 * scale0);\n        }\n\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer);else d3_selection_interrupt.call(this), translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function () {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n\n    function dblclicked() {\n      var p = d3.mouse(this),\n          k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n\n    return d3.rebind(zoom, event, \"on\");\n  };\n\n  var d3_behavior_zoomInfinity = [0, Infinity],\n      d3_behavior_zoomDelta,\n      d3_behavior_zoomWheel;\n  d3.color = d3_color;\n\n  function d3_color() {}\n\n  d3_color.prototype.toString = function () {\n    return this.rgb() + \"\";\n  };\n\n  d3.hsl = d3_hsl;\n\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\n  d3_hslPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n\n  d3_hslPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n\n  d3_hslPrototype.rgb = function () {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n\n    function v(h) {\n      if (h > 360) h -= 360;else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n\n  d3.hcl = d3_hcl;\n\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\n  d3_hclPrototype.brighter = function (k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.darker = function (k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n\n  d3_hclPrototype.rgb = function () {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n\n  d3.lab = d3_lab;\n\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047,\n      d3_lab_Y = 1,\n      d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\n  d3_labPrototype.brighter = function (k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.darker = function (k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n\n  d3_labPrototype.rgb = function () {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116,\n        x = y + a / 500,\n        z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n\n  d3.rgb = d3_rgb;\n\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\n  d3_rgbPrototype.brighter = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r,\n        g = this.g,\n        b = this.b,\n        i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n\n  d3_rgbPrototype.darker = function (k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n\n  d3_rgbPrototype.hsl = function () {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n\n  d3_rgbPrototype.toString = function () {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0,\n        g = 0,\n        b = 0,\n        m1,\n        m2,\n        color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\n    if (m1) {\n      m2 = m1[2].split(\",\");\n\n      switch (m1[1]) {\n        case \"hsl\":\n          {\n            return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n          }\n\n        case \"rgb\":\n          {\n            return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n          }\n      }\n    }\n\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n\n    return rgb(r, g, b);\n  }\n\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255),\n        max = Math.max(r, g, b),\n        d = max - min,\n        h,\n        s,\n        l = (max + min) / 2;\n\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0);else if (g == max) h = (b - r) / d + 2;else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n\n    return new d3_hsl(h, s, l);\n  }\n\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X),\n        y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y),\n        z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function (key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function () {\n      return v;\n    };\n  }\n\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n\n  function d3_xhrType(response) {\n    return function (url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {},\n        dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n        headers = {},\n        request = new XMLHttpRequest(),\n        responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function () {\n      request.readyState > 3 && respond();\n    };\n\n    function respond() {\n      var status = request.status,\n          result;\n\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n\n    request.onprogress = function (event) {\n      var o = d3.event;\n      d3.event = event;\n\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n\n    xhr.header = function (name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name];else headers[name] = value + \"\";\n      return xhr;\n    };\n\n    xhr.mimeType = function (value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n\n    xhr.responseType = function (value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n\n    xhr.response = function (value) {\n      response = value;\n      return xhr;\n    };\n\n    [\"get\", \"post\"].forEach(function (method) {\n      xhr[method] = function () {\n        return xhr.send.apply(xhr, [method].concat(d3_array(arguments)));\n      };\n    });\n\n    xhr.send = function (method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) {\n        request.setRequestHeader(name, headers[name]);\n      }\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function (request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n\n    xhr.abort = function () {\n      request.abort();\n      return xhr;\n    };\n\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function (error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n\n  d3.dsv = function (delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\n      xhr.row = function (_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n\n      return xhr;\n    }\n\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n\n    function typedResponse(f) {\n      return function (request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n\n    dsv.parse = function (text, f) {\n      var o;\n      return dsv.parseRows(text, function (row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function (name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function (row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n\n    dsv.parseRows = function (text, f) {\n      var EOL = {},\n          EOF = {},\n          rows = [],\n          N = text.length,\n          I = 0,\n          n = 0,\n          t,\n          eol;\n\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n\n        while (I < N) {\n          var c = text.charCodeAt(I++),\n              k = 1;\n          if (c === 10) eol = true;else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    };\n\n    dsv.format = function (rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(),\n          fields = [];\n      rows.forEach(function (row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [fields.map(formatValue).join(delimiter)].concat(rows.map(function (row) {\n        return fields.map(function (field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n\n    dsv.formatRows = function (rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n\n    return dsv;\n  };\n\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\n  var d3_timer_queueHead,\n      d3_timer_queueTail,\n      d3_timer_interval,\n      d3_timer_timeout,\n      d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function (callback) {\n    setTimeout(callback, 17);\n  };\n\n  d3.timer = function () {\n    d3_timer.apply(this, arguments);\n  };\n\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay,\n        timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer;else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n\n    return timer;\n  }\n\n  function d3_timer_step() {\n    var now = d3_timer_mark(),\n        delay = d3_timer_sweep() - now;\n\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n\n  d3.timer.flush = function () {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n\n  function d3_timer_mark() {\n    var now = Date.now(),\n        timer = d3_timer_queueHead;\n\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n\n    return now;\n  }\n\n  function d3_timer_sweep() {\n    var t0,\n        t1 = d3_timer_queueHead,\n        time = Infinity;\n\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n\n    d3_timer_queueTail = t0;\n    return time;\n  }\n\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n\n  d3.round = function (x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n\n  var d3_formatPrefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"].map(d3_formatPrefix);\n\n  d3.formatPrefix = function (value, precision) {\n    var i = 0;\n\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n\n    return d3_formatPrefixes[8 + i / 3];\n  };\n\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function (d) {\n        return d / k;\n      } : function (d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal,\n        locale_thousands = locale.thousands,\n        locale_grouping = locale.grouping,\n        locale_currency = locale.currency,\n        formatGroup = locale_grouping && locale_thousands ? function (value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = locale_grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function (specifier) {\n      var match = d3_format_re.exec(specifier),\n          fill = match[1] || \" \",\n          align = match[2] || \">\",\n          sign = match[3] || \"-\",\n          symbol = match[4] || \"\",\n          zfill = match[5],\n          width = +match[6],\n          comma = match[7],\n          precision = match[8],\n          type = match[9],\n          scale = 1,\n          prefix = \"\",\n          suffix = \"\",\n          integer = false,\n          exponent = true;\n      if (precision) precision = +precision.substring(1);\n\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n\n      switch (type) {\n        case \"n\":\n          comma = true;\n          type = \"g\";\n          break;\n\n        case \"%\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"f\";\n          break;\n\n        case \"p\":\n          scale = 100;\n          suffix = \"%\";\n          type = \"r\";\n          break;\n\n        case \"b\":\n        case \"o\":\n        case \"x\":\n        case \"X\":\n          if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n        case \"c\":\n          exponent = false;\n\n        case \"d\":\n          integer = true;\n          precision = 0;\n          break;\n\n        case \"s\":\n          scale = -1;\n          type = \"r\";\n          break;\n      }\n\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision));else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function (value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"),\n            before,\n            after;\n\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\";else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length),\n            padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function b(x) {\n      return x.toString(2);\n    },\n    c: function c(x) {\n      return String.fromCharCode(x);\n    },\n    o: function o(x) {\n      return x.toString(8);\n    },\n    x: function x(_x) {\n      return _x.toString(16);\n    },\n    X: function X(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function g(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function e(x, p) {\n      return x.toExponential(p);\n    },\n    f: function f(x, p) {\n      return x.toFixed(p);\n    },\n    r: function r(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n\n  var d3_time = d3.time = {},\n      d3_date = Date;\n\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n\n  d3_date_utc.prototype = {\n    getDate: function getDate() {\n      return this._.getUTCDate();\n    },\n    getDay: function getDay() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function getFullYear() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function getHours() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function getMilliseconds() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function getMinutes() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function getMonth() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function getSeconds() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function getTime() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function getTimezoneOffset() {\n      return 0;\n    },\n    valueOf: function valueOf() {\n      return this._.valueOf();\n    },\n    setDate: function setDate() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function setDay() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function setFullYear() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function setHours() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function setMilliseconds() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function setMinutes() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function setMonth() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function setSeconds() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function setTime() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date),\n          d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n\n    function range(t0, t1, dt) {\n      var time = ceil(t0),\n          times = [];\n\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) {\n          times.push(new Date(+time)), step(time, 1);\n        }\n      }\n\n      return times;\n    }\n\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n\n  function d3_time_interval_utc(method) {\n    return function (date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n\n  d3_time.year = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function (date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function (date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function (date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function (date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function (date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n\n  d3_time.dayOfYear = function (date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n\n  [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"].forEach(function (day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function (date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function (date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n\n    d3_time[day + \"OfYear\"] = function (date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_days = locale.days,\n        locale_shortDays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    function d3_time_format(template) {\n      var n = template.length;\n\n      function format(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            c,\n            p,\n            f;\n\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n\n      format.parse = function (string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        },\n            i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc,\n            date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j);else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n\n      format.toString = function () {\n        return template;\n      };\n\n      return format;\n    }\n\n    function d3_time_parse(date, template, string, j) {\n      var c,\n          p,\n          t,\n          i = 0,\n          n = template.length,\n          m = string.length;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    d3_time_format.utc = function (template) {\n      var local = d3_time_format(template);\n\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n\n      format.parse = function (string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n\n      format.toString = local.toString;\n      return format;\n    };\n\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(),\n        d3_time_dayRe = d3_time_formatRe(locale_days),\n        d3_time_dayLookup = d3_time_formatLookup(locale_days),\n        d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays),\n        d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays),\n        d3_time_monthRe = d3_time_formatRe(locale_months),\n        d3_time_monthLookup = d3_time_formatLookup(locale_months),\n        d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths),\n        d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function (p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function a(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function A(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function b(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function B(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function d(_d, p) {\n        return d3_time_formatPad(_d.getDate(), p, 2);\n      },\n      e: function e(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function H(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function I(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function j(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function L(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function m(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function M(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function p(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function S(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function U(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function w(d) {\n        return d.getDay();\n      },\n      W: function W(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function Y(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function _() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n\n    return d3_time_format;\n  }\n\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  },\n      d3_time_numberRe = /^\\s*\\d+/,\n      d3_time_percentRe = /^%/;\n\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      map.set(names[i].toLowerCase(), i);\n    }\n\n    return map;\n  }\n\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, i + 5) : -1;\n  }\n\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(),\n        zs = z > 0 ? \"-\" : \"+\",\n        zh = abs(z) / 60 | 0,\n        zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function d3_time_formatMulti(formats) {\n    var n = formats.length,\n        i = -1;\n\n    while (++i < n) {\n      formats[i][0] = this(formats[i][0]);\n    }\n\n    return function (date) {\n      var i = 0,\n          f = formats[i];\n\n      while (!f[1](date)) {\n        f = formats[++i];\n      }\n\n      return f[0](date);\n    };\n  }\n\n  d3.locale = function (locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n\n  function d3_adder() {}\n\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function add(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t;else this.s = d3_adderTemp.t;\n    },\n    reset: function reset() {\n      this.s = this.t = 0;\n    },\n    valueOf: function valueOf() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b,\n        bv = x - a,\n        av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n\n  d3.geo.stream = function (object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n\n  var d3_geo_streamObjectType = {\n    Feature: function Feature(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function FeatureCollection(object, listener) {\n      var features = object.features,\n          i = -1,\n          n = features.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(features[i].geometry, listener);\n      }\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function Sphere(object, listener) {\n      listener.sphere();\n    },\n    Point: function Point(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function MultiPoint(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        object = coordinates[i], listener.point(object[0], object[1], object[2]);\n      }\n    },\n    LineString: function LineString(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function MultiLineString(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamLine(coordinates[i], listener, 0);\n      }\n    },\n    Polygon: function Polygon(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function MultiPolygon(object, listener) {\n      var coordinates = object.coordinates,\n          i = -1,\n          n = coordinates.length;\n\n      while (++i < n) {\n        d3_geo_streamPolygon(coordinates[i], listener);\n      }\n    },\n    GeometryCollection: function GeometryCollection(object, listener) {\n      var geometries = object.geometries,\n          i = -1,\n          n = geometries.length;\n\n      while (++i < n) {\n        d3_geo_streamGeometry(geometries[i], listener);\n      }\n    }\n  };\n\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1,\n        n = coordinates.length - closed,\n        coordinate;\n    listener.lineStart();\n\n    while (++i < n) {\n      coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    }\n\n    listener.lineEnd();\n  }\n\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1,\n        n = coordinates.length;\n    listener.polygonStart();\n\n    while (++i < n) {\n      d3_geo_streamLine(coordinates[i], listener, 1);\n    }\n\n    listener.polygonEnd();\n  }\n\n  d3.geo.area = function (object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n\n  var d3_geo_areaSum,\n      d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function sphere() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n\n    d3_geo_area.point = function (λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), sinφ0 = Math.sin(φ);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0,\n          sdλ = dλ >= 0 ? 1 : -1,\n          adλ = sdλ * dλ,\n          cosφ = Math.cos(φ),\n          sinφ = Math.sin(φ),\n          k = sinφ0 * sinφ,\n          u = cosφ0 * cosφ + k * Math.cos(adλ),\n          v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n\n    d3_geo_area.lineEnd = function () {\n      nextPoint(λ00, φ00);\n    };\n  }\n\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0],\n        φ = spherical[1],\n        cosφ = Math.cos(φ);\n    return [cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ)];\n  }\n\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n\n  function d3_geo_cartesianCross(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  }\n\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n\n  function d3_geo_cartesianScale(vector, k) {\n    return [vector[0] * k, vector[1] * k, vector[2] * k];\n  }\n\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n\n  function d3_geo_spherical(cartesian) {\n    return [Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2])];\n  }\n\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n\n  d3.geo.bounds = function () {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90);else if (dλSum > ε) φ1 = 90;else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n\n    function point(λ, φ) {\n      ranges.push(range = [λ0 = λ, λ1 = λ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([λ * d3_radians, φ * d3_radians]);\n\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p),\n            equatorial = [normal[1], -normal[0], 0],\n            inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_,\n            s = dλ > 0 ? 1 : -1,\n            λi = inflection[0] * d3_degrees * s,\n            antimeridian = abs(dλ) > 180;\n\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n\n      p0 = p, λ_ = λ;\n    }\n\n    function lineStart() {\n      bound.point = linePoint;\n    }\n\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n\n    return function (feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n\n      if (n) {\n        ranges.sort(compareRanges);\n\n        for (var i = 1, a = ranges[0], b, merged = [a]; i < n; ++i) {\n          b = ranges[i];\n\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n\n        var best = -Infinity,\n            dλ;\n\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[λ0, φ0], [λ1, φ1]];\n    };\n  }();\n\n  d3.geo.centroid = function (object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2,\n        y = d3_geo_centroidY2,\n        z = d3_geo_centroidZ2,\n        m = x * x + y * y + z * z;\n\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [NaN, NaN];\n    }\n\n    return [Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees];\n  };\n\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n\n    d3_geo_centroid.point = function (λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n\n    d3_geo_centroid.lineEnd = function () {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians),\n          x = cosφ * Math.cos(λ),\n          y = cosφ * Math.sin(λ),\n          z = Math.sin(φ),\n          cx = y0 * z - z0 * y,\n          cy = z0 * x - x0 * z,\n          cz = x0 * y - y0 * x,\n          m = Math.sqrt(cx * cx + cy * cy + cz * cz),\n          u = x0 * x + y0 * y + z0 * z,\n          v = m && -d3_acos(u) / m,\n          w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n\n    if (a.invert && b.invert) compose.invert = function (x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n\n  function d3_true() {\n    return true;\n  }\n\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [],\n        clip = [];\n    segments.forEach(function (segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n,\n          p0 = segment[0],\n          p1 = segment[n];\n\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n\n        for (var i = 0; i < n; ++i) {\n          listener.point((p0 = segment[i])[0], p0[1]);\n        }\n\n        listener.lineEnd();\n        return;\n      }\n\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true),\n          b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n\n    var start = subject[0],\n        points,\n        point;\n\n    while (1) {\n      var current = start,\n          isSubject = true;\n\n      while (current.v) {\n        if ((current = current.n) === start) return;\n      }\n\n      points = current.z;\n      listener.lineStart();\n\n      do {\n        current.v = current.o.v = true;\n\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n\n            for (var i = points.length - 1; i >= 0; --i) {\n              listener.point((point = points[i])[0], point[1]);\n            }\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n\n          current = current.p;\n        }\n\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n\n      listener.lineEnd();\n    }\n  }\n\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n,\n        i = 0,\n        a = array[0],\n        b;\n\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n\n    a.n = b = array[0];\n    b.p = a;\n  }\n\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function (rotate, listener) {\n      var line = clipLine(listener),\n          rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function polygonEnd() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function sphere() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n\n      var segments;\n      var buffer = d3_geo_clipBufferListener(),\n          ringListener = clipLine(buffer),\n          polygonStarted = false,\n          polygon,\n          ring;\n\n      function pointRing(λ, φ) {\n        ring.push([λ, φ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(),\n            ringSegments = buffer.buffer(),\n            segment,\n            n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1,\n              i = -1,\n              point;\n\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n\n            while (++i < n) {\n              listener.point((point = segment[i])[0], point[1]);\n            }\n\n            listener.lineEnd();\n          }\n\n          return;\n        }\n\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n\n      return clip;\n    };\n  }\n\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n\n  function d3_geo_clipBufferListener() {\n    var lines = [],\n        line;\n    return {\n      lineStart: function lineStart() {\n        lines.push(line = []);\n      },\n      point: function point(λ, φ) {\n        line.push([λ, φ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function buffer() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function rejoin() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [-π, -π / 2]);\n\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN,\n        φ0 = NaN,\n        sλ0 = NaN,\n        _clean;\n\n    return {\n      lineStart: function lineStart() {\n        listener.lineStart();\n        _clean = 1;\n      },\n      point: function point(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π,\n            dλ = abs(λ1 - λ0);\n\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          _clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          _clean = 0;\n        }\n\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function lineEnd() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function clean() {\n        return 2 - _clean;\n      }\n    };\n  }\n\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0,\n        cosφ1,\n        sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0],\n        parallel = point[1],\n        meridianNormal = [Math.sin(meridian), -Math.cos(meridian), 0],\n        polarAngle = 0,\n        winding = 0;\n    d3_geo_areaRingSum.reset();\n\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i],\n          m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0],\n          λ0 = point0[0],\n          φ0 = point0[1] / 2 + π / 4,\n          sinφ0 = Math.sin(φ0),\n          cosφ0 = Math.cos(φ0),\n          j = 1;\n\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0],\n            φ = point[1] / 2 + π / 4,\n            sinφ = Math.sin(φ),\n            cosφ = Math.cos(φ),\n            dλ = λ - λ0,\n            sdλ = dλ >= 0 ? 1 : -1,\n            adλ = sdλ * dλ,\n            antimeridian = adλ > π,\n            k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius),\n        smallRadius = cr > 0,\n        notHemisphere = abs(cr) > ε,\n        interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-π, radius - π]);\n\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n\n    function clipLine(listener) {\n      var point0, c0, v0, v00, _clean2;\n\n      return {\n        lineStart: function lineStart() {\n          v00 = v0 = false;\n          _clean2 = 1;\n        },\n        point: function point(λ, φ) {\n          var point1 = [λ, φ],\n              point2,\n              v = visible(λ, φ),\n              c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n\n          if (v !== v0) {\n            _clean2 = 0;\n\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              _clean2 = 0;\n\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function lineEnd() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function clean() {\n          return _clean2 | (v00 && v0) << 1;\n        }\n      };\n    }\n\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a),\n          pb = d3_geo_cartesian(b);\n      var n1 = [1, 0, 0],\n          n2 = d3_geo_cartesianCross(pa, pb),\n          n2n2 = d3_geo_cartesianDot(n2, n2),\n          n1n2 = n2[0],\n          determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant,\n          c2 = -cr * n1n2 / determinant,\n          n1xn2 = d3_geo_cartesianCross(n1, n2),\n          A = d3_geo_cartesianScale(n1, c1),\n          B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2,\n          w = d3_geo_cartesianDot(A, u),\n          uu = d3_geo_cartesianDot(u, u),\n          t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2),\n          q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0],\n          λ1 = b[0],\n          φ0 = a[1],\n          φ1 = b[1],\n          z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0,\n          polar = abs(δλ - π) < ε,\n          meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [q, d3_geo_spherical(q1)];\n      }\n    }\n\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius,\n          code = 0;\n      if (λ < -r) code |= 1;else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4;else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function (line) {\n      var a = line.a,\n          b = line.b,\n          ax = a.x,\n          ay = a.y,\n          bx = b.x,\n          by = b.y,\n          t0 = 0,\n          t1 = 1,\n          dx = bx - ax,\n          dy = by - ay,\n          r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n\n  var d3_geo_clipExtentMAX = 1e9;\n\n  d3.geo.clipExtent = function () {\n    var x0,\n        y0,\n        x1,\n        y1,\n        _stream,\n        clip,\n        clipExtent = {\n      stream: function stream(output) {\n        if (_stream) _stream.valid = false;\n        _stream = clip(output);\n        _stream.valid = true;\n        return _stream;\n      },\n      extent: function extent(_) {\n        if (!arguments.length) return [[x0, y0], [x1, y1]];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (_stream) _stream.valid = false, _stream = null;\n        return clipExtent;\n      }\n    };\n\n    return clipExtent.extent([[0, 0], [960, 500]]);\n  };\n\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function (listener) {\n      var listener_ = listener,\n          bufferListener = d3_geo_clipBufferListener(),\n          clipLine = d3_geom_clipLine(x0, y0, x1, y1),\n          segments,\n          polygon,\n          ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function polygonEnd() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([x0, y1]),\n              inside = clean && clipStartInside,\n              visible = segments.length;\n\n          if (inside || visible) {\n            listener.polygonStart();\n\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n\n            listener.polygonEnd();\n          }\n\n          segments = polygon = ring = null;\n        }\n      };\n\n      function insidePolygon(p) {\n        var wn = 0,\n            n = polygon.length,\n            y = p[1];\n\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n\n            a = b;\n          }\n        }\n\n        return wn !== 0;\n      }\n\n      function interpolate(from, to, direction, listener) {\n        var a = 0,\n            a1 = 0;\n\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n\n      var x__, y__, v__, x_, y_, v_, first, clean;\n\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([x, y]);\n\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y);else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n\n        x_ = x, y_ = y, v_ = v;\n      }\n\n      return clip;\n    };\n\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n\n    function comparePoints(a, b) {\n      var ca = corner(a, 1),\n          cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0,\n        φ1 = π / 3,\n        m = d3_geo_projectionMutator(projectAt),\n        p = m(φ0, φ1);\n\n    p.parallels = function (_) {\n      if (!arguments.length) return [φ0 / π * 180, φ1 / π * 180];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n\n    return p;\n  }\n\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0),\n        n = (sinφ0 + Math.sin(φ1)) / 2,\n        C = 1 + sinφ0 * (2 * n - sinφ0),\n        ρ0 = Math.sqrt(C) / n;\n\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = ρ0 - y;\n      return [Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n))];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEqualArea = function () {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n\n  d3.geo.albers = function () {\n    return d3.geo.conicEqualArea().rotate([96, 0]).center([-.6, 38.7]).parallels([29.5, 45.5]).scale(1070);\n  };\n\n  d3.geo.albersUsa = function () {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]);\n    var hawaii = d3.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]);\n\n    var _point,\n        pointStream = {\n      point: function point(x, y) {\n        _point = [x, y];\n      }\n    },\n        lower48Point,\n        alaskaPoint,\n        hawaiiPoint;\n\n    function albersUsa(coordinates) {\n      var x = coordinates[0],\n          y = coordinates[1];\n      _point = null;\n      (lower48Point(x, y), _point) || (alaskaPoint(x, y), _point) || hawaiiPoint(x, y);\n      return _point;\n    }\n\n    albersUsa.invert = function (coordinates) {\n      var k = lower48.scale(),\n          t = lower48.translate(),\n          x = (coordinates[0] - t[0]) / k,\n          y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n\n    albersUsa.stream = function (stream) {\n      var lower48Stream = lower48.stream(stream),\n          alaskaStream = alaska.stream(stream),\n          hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function point(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function sphere() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function lineStart() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function lineEnd() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function polygonStart() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function polygonEnd() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n\n    albersUsa.precision = function (_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n\n    albersUsa.scale = function (_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n\n    albersUsa.translate = function (_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(),\n          x = +_[0],\n          y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([[x - .455 * k, y - .238 * k], [x + .455 * k, y + .238 * k]]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([x - .307 * k, y + .201 * k]).clipExtent([[x - .425 * k + ε, y + .12 * k + ε], [x - .214 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([x - .205 * k, y + .212 * k]).clipExtent([[x - .214 * k + ε, y + .166 * k + ε], [x - .115 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n      return albersUsa;\n    };\n\n    return albersUsa.scale(1070);\n  };\n\n  var d3_geo_pathAreaSum,\n      d3_geo_pathAreaPolygon,\n      d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function polygonStart() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathArea.point = function (x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n\n    d3_geo_pathArea.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5),\n        buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function result() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n\n    return stream;\n  }\n\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function polygonStart() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function polygonEnd() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n\n    d3_geo_pathCentroid.point = function (x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n\n    function nextPoint(x, y) {\n      var dx = x - x0,\n          dy = y - y0,\n          z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n\n    d3_geo_pathCentroid.lineEnd = function () {\n      nextPoint(x00, y00);\n    };\n  }\n\n  function d3_geo_pathContext(context) {\n    var _pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function lineStart() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function pointRadius(_) {\n        _pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n\n    function point(x, y) {\n      context.moveTo(x + _pointRadius, y);\n      context.arc(x, y, _pointRadius, 0, τ);\n    }\n\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      context.closePath();\n    }\n\n    return stream;\n  }\n\n  function d3_geo_resample(project) {\n    var δ2 = .5,\n        cosMinDistance = Math.cos(30 * d3_radians),\n        maxDepth = 16;\n\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function (x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function polygonStart() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function polygonEnd() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([λ, φ]),\n            p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n\n      return resample;\n    }\n\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0,\n          dy = y1 - y0,\n          d2 = dx * dx + dy * dy;\n\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1,\n            b = b0 + b1,\n            c = c0 + c1,\n            m = Math.sqrt(a * a + b * b + c * c),\n            φ2 = Math.asin(c /= m),\n            λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a),\n            p = project(λ2, φ2),\n            x2 = p[0],\n            y2 = p[1],\n            dx2 = x2 - x0,\n            dy2 = y2 - y0,\n            dz = dy * dx2 - dx * dy2;\n\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n\n    resample.precision = function (_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n\n    return resample;\n  }\n\n  d3.geo.path = function () {\n    var pointRadius = 4.5,\n        projection,\n        context,\n        projectStream,\n        contextStream,\n        cacheStream;\n\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n\n      return contextStream.result();\n    }\n\n    path.area = function (object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n\n    path.centroid = function (object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2] : d3_geo_centroidZ1 ? [d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1] : d3_geo_centroidZ0 ? [d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0] : [NaN, NaN];\n    };\n\n    path.bounds = function (object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [[d3_geo_pathBoundsX0, d3_geo_pathBoundsY0], [d3_geo_pathBoundsX1, d3_geo_pathBoundsY1]];\n    };\n\n    path.projection = function (_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n\n    path.context = function (_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n\n    path.pointRadius = function (_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function (x, y) {\n      return project([x * d3_degrees, y * d3_degrees]);\n    });\n    return function (stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n\n  d3.geo.transform = function (methods) {\n    return {\n      stream: function stream(_stream2) {\n        var transform = new d3_geo_transform(_stream2);\n\n        for (var k in methods) {\n          transform[k] = methods[k];\n        }\n\n        return transform;\n      }\n    };\n  };\n\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n\n  d3_geo_transform.prototype = {\n    point: function point(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function sphere() {\n      this.stream.sphere();\n    },\n    lineStart: function lineStart() {\n      this.stream.lineStart();\n    },\n    lineEnd: function lineEnd() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function polygonStart() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function polygonEnd() {\n      this.stream.polygonEnd();\n    }\n  };\n\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function sphere() {\n        stream.sphere();\n      },\n      lineStart: function lineStart() {\n        stream.lineStart();\n      },\n      lineEnd: function lineEnd() {\n        stream.lineEnd();\n      },\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n      }\n    };\n  }\n\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function () {\n      return project;\n    })();\n  }\n\n  function d3_geo_projectionMutator(projectAt) {\n    var project,\n        rotate,\n        projectRotate,\n        projectResample = d3_geo_resample(function (x, y) {\n      x = project(x, y);\n      return [x[0] * k + δx, δy - x[1] * k];\n    }),\n        k = 150,\n        x = 480,\n        y = 250,\n        λ = 0,\n        φ = 0,\n        δλ = 0,\n        δφ = 0,\n        δγ = 0,\n        δx,\n        δy,\n        preclip = d3_geo_clipAntimeridian,\n        postclip = d3_identity,\n        clipAngle = null,\n        clipExtent = null,\n        stream;\n\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [point[0] * k + δx, δy - point[1] * k];\n    }\n\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [point[0] * d3_degrees, point[1] * d3_degrees];\n    }\n\n    projection.stream = function (output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n\n    projection.clipAngle = function (_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n\n    projection.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n\n    projection.scale = function (_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n\n    projection.translate = function (_) {\n      if (!arguments.length) return [x, y];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n\n    projection.center = function (_) {\n      if (!arguments.length) return [λ * d3_degrees, φ * d3_degrees];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n\n    projection.rotate = function (_) {\n      if (!arguments.length) return [δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n\n    d3.rebind(projection, projectResample, \"precision\");\n\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n\n    return function () {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function (x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n\n  function d3_geo_equirectangular(λ, φ) {\n    return [λ, φ];\n  }\n\n  (d3.geo.equirectangular = function () {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\n  d3.geo.rotation = function (rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n\n    forward.invert = function (coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n\n    return forward;\n  };\n\n  function d3_geo_identityRotation(λ, φ) {\n    return [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n  }\n\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n\n  function d3_geo_forwardRotationλ(δλ) {\n    return function (λ, φ) {\n      return λ += δλ, [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n    };\n  }\n\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ),\n        sinδφ = Math.sin(δφ),\n        cosδγ = Math.cos(δγ),\n        sinδγ = Math.sin(δγ);\n\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδφ + x * sinδφ;\n      return [Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ)];\n    }\n\n    rotation.invert = function (λ, φ) {\n      var cosφ = Math.cos(φ),\n          x = Math.cos(λ) * cosφ,\n          y = Math.sin(λ) * cosφ,\n          z = Math.sin(φ),\n          k = z * cosδγ - y * sinδγ;\n      return [Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ)];\n    };\n\n    return rotation;\n  }\n\n  d3.geo.circle = function () {\n    var origin = [0, 0],\n        angle,\n        precision = 6,\n        interpolate;\n\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin,\n          rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert,\n          ring = [];\n      interpolate(null, null, 1, {\n        point: function point(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ring]\n      };\n    }\n\n    circle.origin = function (x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n\n    circle.angle = function (x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n\n    circle.precision = function (_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n\n    return circle.angle(90);\n  };\n\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius),\n        sr = Math.sin(radius);\n    return function (from, to, direction, listener) {\n      var step = direction * precision;\n\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([cr, -sr * Math.cos(t), -sr * Math.sin(t)]))[0], point[1]);\n      }\n    };\n  }\n\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n\n  d3.geo.distance = function (a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians,\n        φ0 = a[1] * d3_radians,\n        φ1 = b[1] * d3_radians,\n        sinΔλ = Math.sin(Δλ),\n        cosΔλ = Math.cos(Δλ),\n        sinφ0 = Math.sin(φ0),\n        cosφ0 = Math.cos(φ0),\n        sinφ1 = Math.sin(φ1),\n        cosφ1 = Math.cos(φ1),\n        t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n\n  d3.geo.graticule = function () {\n    var x1,\n        x0,\n        X1,\n        X0,\n        y1,\n        y0,\n        Y1,\n        Y0,\n        dx = 10,\n        dy = dx,\n        DX = 90,\n        DY = 360,\n        x,\n        y,\n        X,\n        Y,\n        precision = 2.5;\n\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n\n    graticule.lines = function () {\n      return lines().map(function (coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n\n    graticule.outline = function () {\n      return {\n        type: \"Polygon\",\n        coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n      };\n    };\n\n    graticule.extent = function (_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n\n    graticule.majorExtent = function (_) {\n      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.minorExtent = function (_) {\n      if (!arguments.length) return [[x0, y0], [x1, y1]];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.step = function (_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n\n    graticule.majorStep = function (_) {\n      if (!arguments.length) return [DX, DY];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n\n    graticule.minorStep = function (_) {\n      if (!arguments.length) return [dx, dy];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n\n    graticule.precision = function (_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n\n    return graticule.majorExtent([[-180, -90 + ε], [180, 90 - ε]]).minorExtent([[-180, -80 - ε], [180, 80 + ε]]);\n  };\n\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function (x) {\n      return y.map(function (y) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function (y) {\n      return x.map(function (x) {\n        return [x, y];\n      });\n    };\n  }\n\n  function d3_source(d) {\n    return d.source;\n  }\n\n  function d3_target(d) {\n    return d.target;\n  }\n\n  d3.geo.greatArc = function () {\n    var source = d3_source,\n        source_,\n        target = d3_target,\n        target_;\n\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [source_ || source.apply(this, arguments), target_ || target.apply(this, arguments)]\n      };\n    }\n\n    greatArc.distance = function () {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n\n    greatArc.source = function (_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.target = function (_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n\n    greatArc.precision = function () {\n      return arguments.length ? greatArc : 0;\n    };\n\n    return greatArc;\n  };\n\n  d3.geo.interpolate = function (source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0),\n        sy0 = Math.sin(y0),\n        cy1 = Math.cos(y1),\n        sy1 = Math.sin(y1),\n        kx0 = cy0 * Math.cos(x0),\n        ky0 = cy0 * Math.sin(x0),\n        kx1 = cy1 * Math.cos(x1),\n        ky1 = cy1 * Math.sin(x1),\n        d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))),\n        k = 1 / Math.sin(d);\n    var interpolate = d ? function (t) {\n      var B = Math.sin(t *= d) * k,\n          A = Math.sin(d - t) * k,\n          x = A * kx0 + B * kx1,\n          y = A * ky0 + B * ky1,\n          z = A * sy0 + B * sy1;\n      return [Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees];\n    } : function () {\n      return [x0 * d3_degrees, y0 * d3_degrees];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n\n  d3.geo.length = function (object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n\n    d3_geo_length.point = function (λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n\n    d3_geo_length.lineEnd = function () {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians),\n          cosφ = Math.cos(φ),\n          t = abs((λ *= d3_radians) - λ0),\n          cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ),\n          cosφ = Math.cos(φ),\n          k = scale(cosλ * cosφ);\n      return [k * cosφ * Math.sin(λ), k * Math.sin(φ)];\n    }\n\n    azimuthal.invert = function (x, y) {\n      var ρ = Math.sqrt(x * x + y * y),\n          c = angle(ρ),\n          sinc = Math.sin(c),\n          cosc = Math.cos(c);\n      return [Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ)];\n    };\n\n    return azimuthal;\n  }\n\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function (cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function (ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function () {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function (cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function () {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        t = function t(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    },\n        n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)),\n        F = cosφ0 * Math.pow(t(φ0), n) / n;\n\n    if (!n) return d3_geo_mercator;\n\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n\n      var ρ = F / Math.pow(t(φ), n);\n      return [ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = F - y,\n          ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicConformal = function () {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0),\n        n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0),\n        G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ)];\n    }\n\n    forward.invert = function (x, y) {\n      var ρ0_y = G - y;\n      return [Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y)];\n    };\n\n    return forward;\n  }\n\n  (d3.geo.conicEquidistant = function () {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function () {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n\n  function d3_geo_mercator(λ, φ) {\n    return [λ, Math.log(Math.tan(π / 4 + φ / 2))];\n  }\n\n  d3_geo_mercator.invert = function (x, y) {\n    return [x, 2 * Math.atan(Math.exp(y)) - halfπ];\n  };\n\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project),\n        scale = m.scale,\n        translate = m.translate,\n        clipExtent = m.clipExtent,\n        clipAuto;\n\n    m.scale = function () {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.translate = function () {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n\n    m.clipExtent = function (_) {\n      var v = clipExtent.apply(m, arguments);\n\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(),\n              t = translate();\n          clipExtent([[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n\n      return v;\n    };\n\n    return m.clipExtent(null);\n  }\n\n  (d3.geo.mercator = function () {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function () {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function () {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function (cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function (ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function () {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n\n  function d3_geo_transverseMercator(λ, φ) {\n    return [Math.log(Math.tan(π / 4 + φ / 2)), -λ];\n  }\n\n  d3_geo_transverseMercator.invert = function (x, y) {\n    return [-y, 2 * Math.atan(Math.exp(x)) - halfπ];\n  };\n\n  (d3.geo.transverseMercator = function () {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator),\n        center = projection.center,\n        rotate = projection.rotate;\n\n    projection.center = function (_) {\n      return _ ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n    };\n\n    projection.rotate = function (_) {\n      return _ ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n    };\n\n    return rotate([0, 0, 90]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n\n  d3.geom.hull = function (vertices) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x),\n          fy = d3_functor(y),\n          i,\n          n = data.length,\n          points = [],\n          flippedPoints = [];\n\n      for (i = 0; i < n; i++) {\n        points.push([+fx.call(this, data[i], i), +fy.call(this, data[i], i), i]);\n      }\n\n      points.sort(d3_geom_hullOrder);\n\n      for (i = 0; i < n; i++) {\n        flippedPoints.push([points[i][0], -points[i][1]]);\n      }\n\n      var upper = d3_geom_hullUpper(points),\n          lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0],\n          skipRight = lower[lower.length - 1] === upper[upper.length - 1],\n          polygon = [];\n\n      for (i = upper.length - 1; i >= 0; --i) {\n        polygon.push(data[points[upper[i]][2]]);\n      }\n\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) {\n        polygon.push(data[points[lower[i]][2]]);\n      }\n\n      return polygon;\n    }\n\n    hull.x = function (_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n\n    hull.y = function (_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n\n    return hull;\n  };\n\n  function d3_geom_hullUpper(points) {\n    var n = points.length,\n        hull = [0, 1],\n        hs = 2;\n\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) {\n        --hs;\n      }\n\n      hull[hs++] = i;\n    }\n\n    return hull.slice(0, hs);\n  }\n\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n\n  d3.geom.polygon = function (coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\n  d3_geom_polygonPrototype.area = function () {\n    var i = -1,\n        n = this.length,\n        a,\n        b = this[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n\n    return area * .5;\n  };\n\n  d3_geom_polygonPrototype.centroid = function (k) {\n    var i = -1,\n        n = this.length,\n        x = 0,\n        y = 0,\n        a,\n        b = this[n - 1],\n        c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n\n    return [x * k, y * k];\n  };\n\n  d3_geom_polygonPrototype.clip = function (subject) {\n    var input,\n        closed = d3_geom_polygonClosed(subject),\n        i = -1,\n        n = this.length - d3_geom_polygonClosed(this),\n        j,\n        m,\n        a = this[n - 1],\n        b,\n        c,\n        d;\n\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n\n      while (++j < m) {\n        d = input[j];\n\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n\n        c = d;\n      }\n\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n\n    return subject;\n  };\n\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0],\n        x3 = a[0],\n        x21 = d[0] - x1,\n        x43 = b[0] - x3,\n        y1 = c[1],\n        y3 = a[1],\n        y21 = d[1] - y1,\n        y43 = b[1] - y3,\n        ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [x1 + ua * x21, y1 + ua * y21];\n  }\n\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0],\n        b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n\n  var d3_geom_voronoiEdges,\n      d3_geom_voronoiCells,\n      d3_geom_voronoiBeaches,\n      d3_geom_voronoiBeachPool = [],\n      d3_geom_voronoiFirstCircle,\n      d3_geom_voronoiCircles,\n      d3_geom_voronoiCirclePool = [];\n\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle,\n        x = circle.x,\n        y = circle.cy,\n        vertex = {\n      x: x,\n      y: y\n    },\n        previous = beach.P,\n        next = beach.N,\n        disappearing = [beach];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length,\n        iArc;\n\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x,\n        directrix = site.y,\n        lArc,\n        rArc,\n        dxl,\n        dxr,\n        node = d3_geom_voronoiBeaches._;\n\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L;else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n\n          break;\n        }\n      }\n    }\n\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site,\n        ax = lSite.x,\n        ay = lSite.y,\n        bx = site.x - ax,\n        by = site.y - ay,\n        rSite = rArc.site,\n        cx = rSite.x - ax,\n        cy = rSite.y - ay,\n        d = 2 * (bx * cy - by * cx),\n        hb = bx * bx + by * by,\n        hc = cx * cx + cy * cy,\n        vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site,\n        rfocx = site.x,\n        rfocy = site.y,\n        pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x,\n        lfocy = site.y,\n        plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx,\n        aby2 = 1 / pby2 - 1 / plby2,\n        b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n\n  d3_geom_voronoiCell.prototype.prepare = function () {\n    var halfEdges = this.edges,\n        iHalfEdge = halfEdges.length,\n        edge;\n\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        x2,\n        y2,\n        x3,\n        y3,\n        cells = d3_geom_voronoiCells,\n        iCell = cells.length,\n        cell,\n        iHalfEdge,\n        halfEdges,\n        nHalfEdges,\n        start,\n        end;\n\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P,\n        rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site,\n        cSite = arc.site,\n        rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x,\n        by = cSite.y,\n        ax = lSite.x - bx,\n        ay = lSite.y - by,\n        cx = rSite.x - bx,\n        cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay,\n        hc = cx * cx + cy * cy,\n        x = (cy * ha - ay * hc) / d,\n        y = (ax * hc - cx * ha) / d,\n        cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null,\n        node = d3_geom_voronoiCircles._;\n\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L;else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R;else {\n          before = node;\n          break;\n        }\n      }\n    }\n\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges,\n        clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]),\n        i = edges.length,\n        e;\n\n    while (i--) {\n      e = edges[i];\n\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a,\n        x0 = extent[0][0],\n        x1 = extent[1][0],\n        y0 = extent[0][1],\n        y1 = extent[1][1],\n        lSite = edge.l,\n        rSite = edge.r,\n        lx = lSite.x,\n        ly = lSite.y,\n        rx = rSite.x,\n        ry = rSite.y,\n        fx = (lx + rx) / 2,\n        fy = (ly + ry) / 2,\n        fm,\n        fb;\n\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        };else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        };else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          };else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          };else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a,\n        vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function start() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function end() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function insert(after, node) {\n      var parent, grandpa, uncle;\n\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n\n        if (after.R) {\n          after = after.R;\n\n          while (after.L) {\n            after = after.L;\n          }\n\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n\n      while (parent && parent.C) {\n        grandpa = parent.U;\n\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n\n        parent = after.U;\n      }\n\n      this._.C = false;\n    },\n    remove: function remove(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U,\n          sibling,\n          left = node.L,\n          right = node.R,\n          next,\n          red;\n      if (!left) next = right;else if (!right) next = left;else next = d3_geom_voronoiRedBlackFirst(right);\n\n      if (parent) {\n        if (parent.L === node) parent.L = next;else parent.R = next;\n      } else {\n        this._ = next;\n      }\n\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n\n      if (node) node.U = parent;\n      if (red) return;\n\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n\n      do {\n        if (node === this._) break;\n\n        if (node === parent.L) {\n          sibling = parent.R;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n\n      if (node) node.C = false;\n    }\n  };\n\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node,\n        q = node.R,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node,\n        q = node.L,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) {\n      node = node.L;\n    }\n\n    return node;\n  }\n\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(),\n        x0,\n        y0,\n        circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n\n  d3.geom.voronoi = function (points) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        fx = x,\n        fy = y,\n        clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n\n    function voronoi(data) {\n      var polygons = new Array(data.length),\n          x0 = clipExtent[0][0],\n          y0 = clipExtent[0][1],\n          x1 = clipExtent[1][0],\n          y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function (cell, i) {\n        var edges = cell.edges,\n            site = cell.site,\n            polygon = polygons[i] = edges.length ? edges.map(function (e) {\n          var s = e.start();\n          return [s.x, s.y];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [[x0, y1], [x1, y1], [x1, y0], [x0, y0]] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n\n    function sites(data) {\n      return data.map(function (d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n\n    voronoi.links = function (data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function (edge) {\n        return edge.l && edge.r;\n      }).map(function (edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n\n    voronoi.triangles = function (data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function (cell, i) {\n        var site = cell.site,\n            edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder),\n            j = -1,\n            m = edges.length,\n            e0,\n            s0,\n            e1 = edges[m - 1].edge,\n            s1 = e1.l === site ? e1.r : e1.l;\n\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([data[i], data[s0.i], data[s1.i]]);\n          }\n        }\n      });\n      return triangles;\n    };\n\n    voronoi.x = function (_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n\n    voronoi.y = function (_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n\n    voronoi.clipExtent = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n\n    voronoi.size = function (_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [[0, 0], _]);\n    };\n\n    return voronoi;\n  };\n\n  var d3_geom_voronoiClipExtent = [[-1e6, -1e6], [1e6, 1e6]];\n\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n\n  d3.geom.delaunay = function (vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n\n  d3.geom.quadtree = function (points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        compat;\n\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n\n      return quadtree(points);\n    }\n\n    function quadtree(data) {\n      var d,\n          fx = d3_functor(x),\n          fy = d3_functor(y),\n          xs,\n          ys,\n          i,\n          n,\n          x1_,\n          y1_,\n          x2_,\n          y2_;\n\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i),\n              y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n\n      var dx = x2_ - x1_,\n          dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx;else x2_ = x1_ + dy;\n\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n\n        if (n.leaf) {\n          var nx = n.x,\n              ny = n.y;\n\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5,\n            ym = (y1 + y2) * .5,\n            right = x >= xm,\n            below = y >= ym,\n            i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm;else x2 = xm;\n        if (below) y1 = ym;else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n\n      var root = d3_geom_quadtreeNode();\n\n      root.add = function (d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n\n      root.visit = function (f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n\n      root.find = function (point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n\n      i = -1;\n\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n\n        --i;\n      } else data.forEach(root.add);\n\n      xs = ys = data = d = null;\n      return root;\n    }\n\n    quadtree.x = function (_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n\n    quadtree.y = function (_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n\n    quadtree.extent = function (_) {\n      if (!arguments.length) return x1 == null ? null : [[x1, y1], [x2, y2]];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], y2 = +_[1][1];\n      return quadtree;\n    };\n\n    quadtree.size = function (_) {\n      if (!arguments.length) return x1 == null ? null : [x2 - x1, y2 - y1];\n      if (_ == null) x1 = y1 = x2 = y2 = null;else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n\n    return quadtree;\n  };\n\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5,\n          sy = (y1 + y2) * .5,\n          children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity,\n        closestPoint;\n\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\n      if (point = node.point) {\n        var point,\n            dx = x - node.x,\n            dy = y - node.y,\n            distance2 = dx * dx + dy * dy;\n\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n\n      var children = node.nodes,\n          xm = (x1 + x2) * .5,\n          ym = (y1 + y2) * .5,\n          right = x >= xm,\n          below = y >= ym;\n\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n          case 0:\n            find(node, x1, y1, xm, ym);\n            break;\n\n          case 1:\n            find(node, xm, y1, x2, ym);\n            break;\n\n          case 2:\n            find(node, x1, ym, xm, y2);\n            break;\n\n          case 3:\n            find(node, xm, ym, x2, y2);\n            break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n\n    return closestPoint;\n  }\n\n  d3.interpolateRgb = d3_interpolateRgb;\n\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r,\n        ag = a.g,\n        ab = a.b,\n        br = b.r - ar,\n        bg = b.g - ag,\n        bb = b.b - ab;\n    return function (t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n\n  d3.interpolateObject = d3_interpolateObject;\n\n  function d3_interpolateObject(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n\n    return function (t) {\n      for (k in i) {\n        c[k] = i[k](t);\n      }\n\n      return c;\n    };\n  }\n\n  d3.interpolateNumber = d3_interpolateNumber;\n\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function (t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n\n  d3.interpolateString = d3_interpolateString;\n\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0,\n        am,\n        bm,\n        bs,\n        i = -1,\n        s = [],\n        q = [];\n    a = a + \"\", b = b + \"\";\n\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs;else s[++i] = bs;\n      }\n\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm;else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs;else s[++i] = bs;\n    }\n\n    return s.length < 2 ? q[0] ? (b = q[0].x, function (t) {\n      return b(t) + \"\";\n    }) : function () {\n      return b;\n    } : (b = q.length, function (t) {\n      for (var i = 0, o; i < b; ++i) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    });\n  }\n\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n      d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length,\n        f;\n\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) {\n      ;\n    }\n\n    return f;\n  }\n\n  d3.interpolators = [function (a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  }];\n  d3.interpolateArray = d3_interpolateArray;\n\n  function d3_interpolateArray(a, b) {\n    var x = [],\n        c = [],\n        na = a.length,\n        nb = b.length,\n        n0 = Math.min(a.length, b.length),\n        i;\n\n    for (i = 0; i < n0; ++i) {\n      x.push(d3_interpolate(a[i], b[i]));\n    }\n\n    for (; i < na; ++i) {\n      c[i] = a[i];\n    }\n\n    for (; i < nb; ++i) {\n      c[i] = b[i];\n    }\n\n    return function (t) {\n      for (i = 0; i < n0; ++i) {\n        c[i] = x[i](t);\n      }\n\n      return c;\n    };\n  }\n\n  var d3_ease_default = function d3_ease_default() {\n    return d3_identity;\n  };\n\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function quad() {\n      return d3_ease_quad;\n    },\n    cubic: function cubic() {\n      return d3_ease_cubic;\n    },\n    sin: function sin() {\n      return d3_ease_sin;\n    },\n    exp: function exp() {\n      return d3_ease_exp;\n    },\n    circle: function circle() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function bounce() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function outIn(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n\n  d3.ease = function (name) {\n    var i = name.indexOf(\"-\"),\n        t = i >= 0 ? name.slice(0, i) : name,\n        m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n\n  function d3_ease_clamp(f) {\n    return function (t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n\n  function d3_ease_reverse(f) {\n    return function (t) {\n      return 1 - f(1 - t);\n    };\n  }\n\n  function d3_ease_reflect(f) {\n    return function (t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t,\n        t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n\n  function d3_ease_poly(e) {\n    return function (t) {\n      return Math.pow(t, e);\n    };\n  }\n\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a);else a = 1, s = p / 4;\n    return function (t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function (t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n\n  d3.interpolateHcl = d3_interpolateHcl;\n\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h,\n        ac = a.c,\n        al = a.l,\n        bh = b.h - ah,\n        bc = b.c - ac,\n        bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateHsl = d3_interpolateHsl;\n\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h,\n        as = a.s,\n        al = a.l,\n        bh = b.h - ah,\n        bs = b.s - as,\n        bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah;else if (bh > 180) bh -= 360;else if (bh < -180) bh += 360;\n    return function (t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n\n  d3.interpolateLab = d3_interpolateLab;\n\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l,\n        aa = a.a,\n        ab = a.b,\n        bl = b.l - al,\n        ba = b.a - aa,\n        bb = b.b - ab;\n    return function (t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n\n  d3.interpolateRound = d3_interpolateRound;\n\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function (t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  d3.transform = function (string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function (string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n\n  function d3_transform(m) {\n    var r0 = [m.a, m.b],\n        r1 = [m.c, m.d],\n        kx = d3_transformNormalize(r0),\n        kz = d3_transformDot(r0, r1),\n        ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [m.e, m.f];\n    this.scale = [kx, ky];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n\n  d3_transform.prototype.toString = function () {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n\n    return k;\n  }\n\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360;else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n\n  function d3_interpolateTransform(a, b) {\n    var s = [],\n        q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function (t) {\n      var i = -1,\n          n = q.length,\n          o;\n\n      while (++i < n) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    };\n  }\n\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return (x - a) / b;\n    };\n  }\n\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function (x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n\n  d3.layout = {};\n\n  d3.layout.bundle = function () {\n    return function (links) {\n      var paths = [],\n          i = -1,\n          n = links.length;\n\n      while (++i < n) {\n        paths.push(d3_layout_bundlePath(links[i]));\n      }\n\n      return paths;\n    };\n  };\n\n  function d3_layout_bundlePath(link) {\n    var start = link.source,\n        end = link.target,\n        lca = d3_layout_bundleLeastCommonAncestor(start, end),\n        points = [start];\n\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n\n    var k = points.length;\n\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n\n    return points;\n  }\n\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [],\n        parent = node.parent;\n\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n\n    ancestors.push(node);\n    return ancestors;\n  }\n\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a),\n        bNodes = d3_layout_bundleAncestors(b),\n        aNode = aNodes.pop(),\n        bNode = bNodes.pop(),\n        sharedNode = null;\n\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n\n    return sharedNode;\n  }\n\n  d3.layout.chord = function () {\n    var chord = {},\n        chords,\n        groups,\n        matrix,\n        n,\n        padding = 0,\n        sortGroups,\n        sortSubgroups,\n        sortChords;\n\n    function relayout() {\n      var subgroups = {},\n          groupSums = [],\n          groupIndex = d3.range(n),\n          subgroupIndex = [],\n          k,\n          x,\n          x0,\n          i,\n          j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n\n      while (++i < n) {\n        x = 0, j = -1;\n\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n\n      if (sortGroups) {\n        groupIndex.sort(function (a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function (d, i) {\n          d.sort(function (a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n\n      while (++i < n) {\n        x0 = x, j = -1;\n\n        while (++j < n) {\n          var di = groupIndex[i],\n              dj = subgroupIndex[di][j],\n              v = matrix[di][dj],\n              a0 = x,\n              a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        j = i - 1;\n\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j],\n              target = subgroups[j + \"-\" + i];\n\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n\n      if (sortChords) resort();\n    }\n\n    function resort() {\n      chords.sort(function (a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n\n    chord.matrix = function (x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.padding = function (x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortGroups = function (x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n\n    chord.sortSubgroups = function (x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n\n    chord.sortChords = function (x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n\n    chord.chords = function () {\n      if (!chords) relayout();\n      return chords;\n    };\n\n    chord.groups = function () {\n      if (!groups) relayout();\n      return groups;\n    };\n\n    return chord;\n  };\n\n  d3.layout.force = function () {\n    var force = {},\n        event = d3.dispatch(\"start\", \"tick\", \"end\"),\n        timer,\n        size = [1, 1],\n        drag,\n        alpha,\n        friction = .9,\n        linkDistance = d3_layout_forceLinkDistance,\n        linkStrength = d3_layout_forceLinkStrength,\n        charge = -30,\n        chargeDistance2 = d3_layout_forceChargeDistance2,\n        gravity = .1,\n        theta2 = .64,\n        nodes = [],\n        links = [],\n        distances,\n        strengths,\n        charges;\n\n    function repulse(node) {\n      return function (quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x,\n              dy = quad.cy - node.y,\n              dw = x2 - x1,\n              dn = dx * dx + dy * dy;\n\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n\n            return true;\n          }\n\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n\n        return !quad.charge;\n      };\n    }\n\n    force.tick = function () {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n\n      var n = nodes.length,\n          m = links.length,\n          q,\n          i,\n          o,\n          s,\n          t,\n          l,\n          k,\n          x,\n          y;\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n\n      i = -1;\n\n      while (++i < n) {\n        o = nodes[i];\n\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n\n    force.nodes = function (x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n\n    force.links = function (x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n\n    force.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n\n    force.linkDistance = function (x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.distance = force.linkDistance;\n\n    force.linkStrength = function (x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.friction = function (x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n\n    force.charge = function (x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n\n    force.chargeDistance = function (x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n\n    force.gravity = function (x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n\n    force.theta = function (x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n\n    force.alpha = function (x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n\n      return force;\n    };\n\n    force.start = function () {\n      var i,\n          n = nodes.length,\n          m = links.length,\n          w = size[0],\n          h = size[1],\n          neighbors,\n          o;\n\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) {\n        distances[i] = +linkDistance.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        distances[i] = linkDistance;\n      }\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) {\n        strengths[i] = +linkStrength.call(this, links[i], i);\n      } else for (i = 0; i < m; ++i) {\n        strengths[i] = linkStrength;\n      }\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) {\n        charges[i] = +charge.call(this, nodes[i], i);\n      } else for (i = 0; i < n; ++i) {\n        charges[i] = charge;\n      }\n\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n\n        var candidates = neighbors[i],\n            j = -1,\n            l = candidates.length,\n            x;\n\n        while (++j < l) {\n          if (!isNaN(x = candidates[j][dimension])) return x;\n        }\n\n        return Math.random() * size;\n      }\n\n      return force.resume();\n    };\n\n    force.resume = function () {\n      return force.alpha(.1);\n    };\n\n    force.stop = function () {\n      return force.alpha(0);\n    };\n\n    force.drag = function () {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n\n    return d3.rebind(force, event, \"on\");\n  };\n\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0,\n        cy = 0;\n    quad.charge = 0;\n\n    if (!quad.leaf) {\n      var nodes = quad.nodes,\n          n = nodes.length,\n          i = -1,\n          c;\n\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n\n  var d3_layout_forceLinkDistance = 20,\n      d3_layout_forceLinkStrength = 1,\n      d3_layout_forceChargeDistance2 = Infinity;\n\n  d3.layout.hierarchy = function () {\n    var sort = d3_layout_hierarchySort,\n        children = d3_layout_hierarchyChildren,\n        value = d3_layout_hierarchyValue;\n\n    function hierarchy(root) {\n      var stack = [root],\n          nodes = [],\n          node;\n      root.depth = 0;\n\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n\n    hierarchy.sort = function (x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n\n    hierarchy.children = function (x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n\n    hierarchy.value = function (x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n\n    hierarchy.revalue = function (root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function (node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function (node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n\n      return root;\n    };\n\n    return hierarchy;\n  };\n\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [node];\n\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n\n        while (--n >= 0) {\n          nodes.push(children[n]);\n        }\n      }\n    }\n  }\n\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [node],\n        nodes2 = [];\n\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1,\n            n,\n            children;\n\n        while (++i < n) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function (parent) {\n      return (parent.children || []).map(function (child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n\n  d3.layout.partition = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        size = [1, 1];\n\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n,\n            c,\n            d;\n        dx = node.value ? dx / node.value : 0;\n\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n\n    function depth(node) {\n      var children = node.children,\n          d = 0;\n\n      if (children && (n = children.length)) {\n        var i = -1,\n            n;\n\n        while (++i < n) {\n          d = Math.max(d, depth(children[i]));\n        }\n      }\n\n      return 1 + d;\n    }\n\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n\n    partition.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n\n  d3.layout.pie = function () {\n    var value = Number,\n        sort = d3_layout_pieSortByValue,\n        startAngle = 0,\n        endAngle = τ,\n        padAngle = 0;\n\n    function pie(data) {\n      var n = data.length,\n          values = data.map(function (d, i) {\n        return +value.call(pie, d, i);\n      }),\n          a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle),\n          da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a,\n          p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)),\n          pa = p * (da < 0 ? -1 : 1),\n          sum = d3.sum(values),\n          k = sum ? (da - n * pa) / sum : 0,\n          index = d3.range(n),\n          arcs = [],\n          v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function (i, j) {\n        return values[j] - values[i];\n      } : function (i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function (i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n\n    pie.value = function (_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n\n    pie.sort = function (_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n\n    pie.startAngle = function (_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n\n    pie.endAngle = function (_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n\n    pie.padAngle = function (_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n\n    return pie;\n  };\n\n  var d3_layout_pieSortByValue = {};\n\n  d3.layout.stack = function () {\n    var values = d3_identity,\n        order = d3_layout_stackOrderDefault,\n        offset = d3_layout_stackOffsetZero,\n        out = d3_layout_stackOut,\n        x = d3_layout_stackX,\n        y = d3_layout_stackY;\n\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function (d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function (d) {\n        return d.map(function (v, i) {\n          return [x.call(stack, v, i), y.call(stack, v, i)];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length,\n          n,\n          i,\n          j,\n          o;\n\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n\n      return data;\n    }\n\n    stack.values = function (x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n\n    stack.order = function (x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n\n    stack.offset = function (x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n\n    stack.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n\n    stack.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n\n    stack.out = function (z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n\n    return stack;\n  };\n\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function insideOut(data) {\n      var n = data.length,\n          i,\n          j,\n          max = data.map(d3_layout_stackMaxIndex),\n          sums = data.map(d3_layout_stackReduceSum),\n          index = d3.range(n).sort(function (a, b) {\n        return max[a] - max[b];\n      }),\n          top = 0,\n          bottom = 0,\n          tops = [],\n          bottoms = [];\n\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function reverse(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function silhouette(data) {\n      var n = data.length,\n          m = data[0].length,\n          sums = [],\n          max = 0,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o > max) max = o;\n        sums.push(o);\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n\n      return y0;\n    },\n    wiggle: function wiggle(data) {\n      var n = data.length,\n          x = data[0],\n          m = x.length,\n          i,\n          j,\n          k,\n          s1,\n          s2,\n          s3,\n          dx,\n          o,\n          o0,\n          y0 = [];\n      y0[0] = o = o0 = 0;\n\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) {\n          s1 += data[i][j][1];\n        }\n\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n\n          s2 += s3 * data[i][j][1];\n        }\n\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] -= o0;\n      }\n\n      return y0;\n    },\n    expand: function expand(data) {\n      var n = data.length,\n          m = data[0].length,\n          k = 1 / n,\n          i,\n          j,\n          o,\n          y0 = [];\n\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) {\n          o += data[i][j][1];\n        }\n\n        if (o) for (i = 0; i < n; i++) {\n          data[i][j][1] /= o;\n        } else for (i = 0; i < n; i++) {\n          data[i][j][1] = k;\n        }\n      }\n\n      for (j = 0; j < m; ++j) {\n        y0[j] = 0;\n      }\n\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1,\n        m = data[0].length,\n        y0 = [];\n\n    while (++j < m) {\n      y0[j] = 0;\n    }\n\n    return y0;\n  }\n\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1,\n        j = 0,\n        v = array[0][1],\n        k,\n        n = array.length;\n\n    for (; i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n\n    return j;\n  }\n\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n\n  d3.layout.histogram = function () {\n    var frequency = true,\n        valuer = Number,\n        ranger = d3_layout_histogramRange,\n        binner = d3_layout_histogramBinSturges;\n\n    function histogram(data, i) {\n      var bins = [],\n          values = data.map(valuer, this),\n          range = ranger.call(this, values, i),\n          thresholds = binner.call(this, range, values, i),\n          bin,\n          i = -1,\n          n = values.length,\n          m = thresholds.length - 1,\n          k = frequency ? 1 : 1 / n,\n          x;\n\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n\n      if (m > 0) {\n        i = -1;\n\n        while (++i < n) {\n          x = values[i];\n\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function (x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n\n    histogram.range = function (x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n\n    histogram.bins = function (x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function (range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n\n    histogram.frequency = function (x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n\n    return histogram;\n  };\n\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1,\n        b = +range[0],\n        m = (range[1] - b) / n,\n        f = [];\n\n    while (++x <= n) {\n      f[x] = m * x + b;\n    }\n\n    return f;\n  }\n\n  function d3_layout_histogramRange(values) {\n    return [d3.min(values), d3.max(values)];\n  }\n\n  d3.layout.pack = function () {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort),\n        padding = 0,\n        size = [1, 1],\n        radius;\n\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          w = size[0],\n          h = size[1],\n          r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function () {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function (d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function (d) {\n          d.r -= dr;\n        });\n      }\n\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n\n    pack.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n\n    pack.radius = function (_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n\n    pack.padding = function (_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes,\n        xMin = Infinity,\n        xMax = -Infinity,\n        yMin = Infinity,\n        yMax = -Infinity,\n        a,\n        b,\n        c,\n        i,\n        j,\n        k,\n        n;\n\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0,\n              s1 = 1,\n              s2 = 1;\n\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j);else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n\n    var cx = (xMin + xMax) / 2,\n        cy = (yMin + yMax) / 2,\n        cr = 0;\n\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n\n    if (children) {\n      var i = -1,\n          n = children.length;\n\n      while (++i < n) {\n        d3_layout_packTransform(children[i], x, y, k);\n      }\n    }\n  }\n\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r,\n        dx = b.x - a.x,\n        dy = b.y - a.y;\n\n    if (db && (dx || dy)) {\n      var da = b.r + c.r,\n          dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc),\n          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n\n  d3.layout.tree = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = null;\n\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root0 = nodes[0],\n          root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode);else {\n        var left = root0,\n            right = root0,\n            bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x,\n            kx = size[0] / (right.x + separation(right, left) / 2 + tx),\n            ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function (node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [root0]\n      },\n          queue = [root1],\n          node1;\n\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n\n      return root1.children[0];\n    }\n\n    function firstWalk(v) {\n      var children = v.children,\n          siblings = v.parent.children,\n          w = v.i ? siblings[v.i - 1] : null;\n\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v,\n            vop = v,\n            vim = w,\n            vom = vip.parent.children[0],\n            sip = vip.m,\n            sop = vop.m,\n            sim = vim.m,\n            som = vom.m,\n            shift;\n\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n\n      return ancestor;\n    }\n\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n\n    tree.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n\n    tree.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n\n    tree.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n\n  function d3_layout_treeRight(v) {\n    var children = v.children,\n        n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n\n  function d3_layout_treeShift(v) {\n    var shift = 0,\n        change = 0,\n        children = v.children,\n        i = children.length,\n        w;\n\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n\n  d3.layout.cluster = function () {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null),\n        separation = d3_layout_treeSeparation,\n        size = [1, 1],\n        nodeSize = false;\n\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i),\n          root = nodes[0],\n          previousNode,\n          x = 0;\n      d3_layout_hierarchyVisitAfter(root, function (node) {\n        var children = node.children;\n\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root),\n          right = d3_layout_clusterRight(root),\n          x0 = left.x - separation(left, right) / 2,\n          x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function (node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function (node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n\n    cluster.separation = function (x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n\n    cluster.size = function (x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n\n    cluster.nodeSize = function (x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function (child) {\n      return child.y;\n    });\n  }\n\n  function d3_layout_clusterX(children) {\n    return children.reduce(function (x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n\n  function d3_layout_clusterRight(node) {\n    var children = node.children,\n        n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n\n  d3.layout.treemap = function () {\n    var hierarchy = d3.layout.hierarchy(),\n        round = Math.round,\n        size = [1, 1],\n        padding = null,\n        pad = d3_layout_treemapPadNull,\n        sticky = false,\n        stickies,\n        mode = \"squarify\",\n        ratio = .5 * (1 + Math.sqrt(5));\n\n    function scale(children, k) {\n      var i = -1,\n          n = children.length,\n          child,\n          area;\n\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n\n    function squarify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            row = [],\n            remaining = children.slice(),\n            child,\n            best = Infinity,\n            score,\n            u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy),\n            n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n\n        children.forEach(squarify);\n      }\n    }\n\n    function stickify(node) {\n      var children = node.children;\n\n      if (children && children.length) {\n        var rect = pad(node),\n            remaining = children.slice(),\n            child,\n            row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n\n        children.forEach(stickify);\n      }\n    }\n\n    function worst(row, u) {\n      var s = row.area,\n          r,\n          rmax = 0,\n          rmin = Infinity,\n          i = -1,\n          n = row.length;\n\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n\n    function position(row, u, rect, flush) {\n      var i = -1,\n          n = row.length,\n          x = rect.x,\n          y = rect.y,\n          v = u ? round(row.area / u) : 0,\n          o;\n\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d),\n          root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1];else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([root], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n\n    treemap.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n\n    treemap.padding = function (x) {\n      if (!arguments.length) return padding;\n\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [p, p, p, p] : p);\n      }\n\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [x, x, x, x], padConstant) : padConstant;\n      return treemap;\n    };\n\n    treemap.round = function (x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n\n    treemap.sticky = function (x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n\n    treemap.ratio = function (x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n\n    treemap.mode = function (x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3],\n        y = node.y + padding[0],\n        dx = node.dx - padding[1] - padding[3],\n        dy = node.dy - padding[0] - padding[2];\n\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n\n  d3.random = {\n    normal: function normal(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function () {\n        var x, y, r;\n\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function logNormal() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function () {\n        return Math.exp(random());\n      };\n    },\n    bates: function bates(m) {\n      var random = d3.random.irwinHall(m);\n      return function () {\n        return random() / m;\n      };\n    },\n    irwinHall: function irwinHall(m) {\n      return function () {\n        for (var s = 0, j = 0; j < m; j++) {\n          s += Math.random();\n        }\n\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n\n  function d3_scaleExtent(domain) {\n    var start = domain[0],\n        stop = domain[domain.length - 1];\n    return start < stop ? [start, stop] : [stop, start];\n  }\n\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]),\n        i = interpolate(range[0], range[1]);\n    return function (x) {\n      return i(u(x));\n    };\n  }\n\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        dx;\n\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function floor(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function ceil(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [],\n        i = [],\n        j = 0,\n        k = Math.min(domain.length, range.length) - 1;\n\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n\n    return function (x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n\n  d3.scale.linear = function () {\n    return d3_scale_linear([0, 1], [0, 1], d3_interpolate, false);\n  };\n\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear,\n          uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n\n    function scale(x) {\n      return output(x);\n    }\n\n    scale.invert = function (y) {\n      return input(y);\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.rangeRound = function (x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n\n    scale.clamp = function (x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n\n    scale.interpolate = function (x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n\n    scale.copy = function () {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n\n    return rescale();\n  }\n\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain),\n        span = extent[1] - extent[0],\n        step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)),\n        err = m / span * step;\n    if (err <= .15) step *= 10;else if (err <= .35) step *= 5;else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function (d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n\n    return d3.format(format);\n  }\n\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n\n  d3.scale.log = function () {\n    return d3_scale_log(d3.scale.linear().domain([0, 1]), 10, true, [1, 10]);\n  };\n\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n\n    function scale(x) {\n      return linear(log(x));\n    }\n\n    scale.invert = function (x) {\n      return pow(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n\n    scale.base = function (_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n\n    scale.nice = function () {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n\n    scale.ticks = function () {\n      var extent = d3_scaleExtent(domain),\n          ticks = [],\n          u = extent[0],\n          v = extent[1],\n          i = Math.floor(log(u)),\n          j = Math.ceil(log(v)),\n          n = base % 1 ? 2 : base;\n\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (; i < j; i++) {\n            for (var k = 1; k < n; k++) {\n              ticks.push(pow(i) * k);\n            }\n          }\n\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n\n          for (; i++ < j;) {\n            for (var k = n - 1; k > 0; k--) {\n              ticks.push(pow(i) * k);\n            }\n          }\n        }\n\n        for (i = 0; ticks[i] < u; i++) {}\n\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\n        ticks = ticks.slice(i, j);\n      }\n\n      return ticks;\n    };\n\n    scale.tickFormat = function (n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat;else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function (d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n\n    scale.copy = function () {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  var d3_scale_logFormat = d3.format(\".0e\"),\n      d3_scale_logNiceNegative = {\n    floor: function floor(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function ceil(x) {\n      return -Math.floor(-x);\n    }\n  };\n\n  d3.scale.pow = function () {\n    return d3_scale_pow(d3.scale.linear(), 1, [0, 1]);\n  };\n\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent),\n        powb = d3_scale_powPow(1 / exponent);\n\n    function scale(x) {\n      return linear(powp(x));\n    }\n\n    scale.invert = function (x) {\n      return powb(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n\n    scale.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    scale.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    scale.nice = function (m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n\n    scale.exponent = function (x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n\n    scale.copy = function () {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_scale_powPow(e) {\n    return function (x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n\n  d3.scale.sqrt = function () {\n    return d3.scale.pow().exponent(.5);\n  };\n\n  d3.scale.ordinal = function () {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [[]]\n    });\n  };\n\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n\n    function steps(start, step) {\n      return d3.range(domain.length).map(function (i) {\n        return start + step * i;\n      });\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1,\n          n = x.length,\n          xi;\n\n      while (++i < n) {\n        if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      }\n\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangePoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = (start + stop) / 2, 0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundPoints = function (x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0],\n          stop = x[1],\n          step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeRoundBands = function (x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0],\n          start = x[reverse - 0],\n          stop = x[1 - reverse],\n          step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n\n    scale.rangeBand = function () {\n      return rangeBand;\n    };\n\n    scale.rangeExtent = function () {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n\n    scale.copy = function () {\n      return d3_scale_ordinal(domain, ranger);\n    };\n\n    return scale.domain(domain);\n  }\n\n  d3.scale.category10 = function () {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n\n  d3.scale.category20 = function () {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n\n  d3.scale.category20b = function () {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n\n  d3.scale.category20c = function () {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n\n  var d3_category10 = [2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(d3_rgbString);\n  var d3_category20 = [2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(d3_rgbString);\n  var d3_category20b = [3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(d3_rgbString);\n  var d3_category20c = [3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(d3_rgbString);\n\n  d3.scale.quantile = function () {\n    return d3_scale_quantile([], []);\n  };\n\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n\n    function rescale() {\n      var k = 0,\n          q = range.length;\n      thresholds = [];\n\n      while (++k < q) {\n        thresholds[k - 1] = d3.quantile(domain, k / q);\n      }\n\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.quantiles = function () {\n      return thresholds;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return y < 0 ? [NaN, NaN] : [y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantile(domain, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.quantize = function () {\n    return d3_scale_quantize(0, 1, [0, 1]);\n  };\n\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n\n    scale.domain = function (x) {\n      if (!arguments.length) return [x0, x1];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n\n    scale.range = function (x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [y, y + 1 / kx];\n    };\n\n    scale.copy = function () {\n      return d3_scale_quantize(x0, x1, range);\n    };\n\n    return rescale();\n  }\n\n  d3.scale.threshold = function () {\n    return d3_scale_threshold([.5], [0, 1]);\n  };\n\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n\n    scale.domain = function (_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n\n    scale.range = function (_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n\n    scale.invertExtent = function (y) {\n      y = range.indexOf(y);\n      return [domain[y - 1], domain[y]];\n    };\n\n    scale.copy = function () {\n      return d3_scale_threshold(domain, range);\n    };\n\n    return scale;\n  }\n\n  d3.scale.identity = function () {\n    return d3_scale_identity([0, 1]);\n  };\n\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n\n    identity.invert = identity;\n\n    identity.domain = identity.range = function (x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n\n    identity.ticks = function (m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n\n    identity.tickFormat = function (m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n\n    identity.copy = function () {\n      return d3_scale_identity(domain);\n    };\n\n    return identity;\n  }\n\n  d3.svg = {};\n\n  function d3_zero() {\n    return 0;\n  }\n\n  d3.svg.arc = function () {\n    var innerRadius = d3_svg_arcInnerRadius,\n        outerRadius = d3_svg_arcOuterRadius,\n        cornerRadius = d3_zero,\n        padRadius = d3_svg_arcAuto,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle,\n        padAngle = d3_svg_arcPadAngle;\n\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)),\n          r1 = Math.max(0, +outerRadius.apply(this, arguments)),\n          a0 = startAngle.apply(this, arguments) - halfπ,\n          a1 = endAngle.apply(this, arguments) - halfπ,\n          da = Math.abs(a1 - a0),\n          cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc,\n          cr,\n          rp,\n          ap,\n          p0 = 0,\n          p1 = 0,\n          x0,\n          y0,\n          x1,\n          y1,\n          x2,\n          y2,\n          x3,\n          y3,\n          path = [];\n\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc,\n            rc0 = rc;\n\n        if (da < π) {\n          var oc = x3 == null ? [x2, y2] : x1 == null ? [x0, y0] : d3_geom_polygonIntersect([x0, y0], [x3, y3], [x1, y1], [x2, y2]),\n              ax = x0 - oc[0],\n              ay = y0 - oc[1],\n              bx = x1 - oc[0],\n              by = y1 - oc[1],\n              kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n              lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [x2, y2] : [x3, y3], [x0, y0], r1, rc1, cw),\n              t12 = d3_svg_arcCornerTangents([x1, y1], [x2, y2], r1, rc1, cw);\n\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([x0, y0], [x3, y3], r0, -rc0, cw),\n              t21 = d3_svg_arcCornerTangents([x2, y2], x1 == null ? [x0, y0] : [x1, y1], r0, -rc0, cw);\n\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n\n    arc.innerRadius = function (v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.outerRadius = function (v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.cornerRadius = function (v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n\n    arc.padRadius = function (v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n\n    arc.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.padAngle = function (v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n\n    arc.centroid = function () {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [Math.cos(a) * r, Math.sin(a) * r];\n    };\n\n    return arc;\n  };\n\n  var d3_svg_arcAuto = \"auto\";\n\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0],\n        y01 = p0[1] - p1[1],\n        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n        ox = lo * y01,\n        oy = -lo * x01,\n        x1 = p0[0] + ox,\n        y1 = p0[1] + oy,\n        x2 = p1[0] + ox,\n        y2 = p1[1] + oy,\n        x3 = (x1 + x2) / 2,\n        y3 = (y1 + y2) / 2,\n        dx = x2 - x1,\n        dy = y2 - y1,\n        d2 = dx * dx + dy * dy,\n        r = r1 - rc,\n        D = x1 * y2 - x2 * y1,\n        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n        cx0 = (D * dy - dx * d) / d2,\n        cy0 = (-D * dx - dy * d) / d2,\n        cx1 = (D * dy + dx * d) / d2,\n        cy1 = (-D * dx + dy * d) / d2,\n        dx0 = cx0 - x3,\n        dy0 = cy0 - y3,\n        dx1 = cx1 - x3,\n        dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [[cx0 - ox, cy0 - oy], [cx0 * r1 / r, cy0 * r1 / r]];\n  }\n\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX,\n        y = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        tension = .7;\n\n    function line(data) {\n      var segments = [],\n          points = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx = d3_functor(x),\n          fy = d3_functor(y);\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([+fx.call(this, d, i), +fy.call(this, d, i)]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    line.x = function (_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n\n    line.y = function (_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n\n    line.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n\n    line.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n\n    line.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n\n    return line;\n  }\n\n  d3.svg.line = function () {\n    return d3_svg_line(d3_identity);\n  };\n\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function (key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n\n  function d3_svg_lineStep(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    }\n\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepBefore(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineStepAfter(points) {\n    var i = 0,\n        n = points.length,\n        p = points[0],\n        path = [p[0], \",\", p[1]];\n\n    while (++i < n) {\n      path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), points), d3_svg_lineCardinalTangents([points[points.length - 2]].concat(points, [points[1]]), tension));\n  }\n\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n\n    var quad = points.length != tangents.length,\n        path = \"\",\n        p0 = points[0],\n        p = points[1],\n        t0 = tangents[0],\n        t = t0,\n        pi = 1;\n\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n\n    return path;\n  }\n\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [],\n        a = (1 - tension) / 2,\n        p0,\n        p1 = points[0],\n        p2 = points[1],\n        i = 1,\n        n = points.length;\n\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([a * (p2[0] - p0[0]), a * (p2[1] - p0[1])]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1,\n        n = points.length,\n        pi = points[0],\n        x0 = pi[0],\n        y0 = pi[1],\n        px = [x0, x0, x0, (pi = points[1])[0]],\n        py = [y0, y0, y0, pi[1]],\n        path = [x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    points.push(points[n - 1]);\n\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [],\n        i = -1,\n        n = points.length,\n        pi,\n        px = [0],\n        py = [0];\n\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBasisClosed(points) {\n    var path,\n        i = -1,\n        n = points.length,\n        m = n + 4,\n        pi,\n        px = [],\n        py = [];\n\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n\n    path = [d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n    --i;\n\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n\n    return path.join(\"\");\n  }\n\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n\n    if (n) {\n      var x0 = points[0][0],\n          y0 = points[0][1],\n          dx = points[n][0] - x0,\n          dy = points[n][1] - y0,\n          i = -1,\n          p,\n          t;\n\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n\n    return d3_svg_lineBasis(points);\n  }\n\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n\n  var d3_svg_lineBasisBezier1 = [0, 2 / 3, 1 / 3, 0],\n      d3_svg_lineBasisBezier2 = [0, 1 / 3, 2 / 3, 0],\n      d3_svg_lineBasisBezier3 = [0, 1 / 6, 2 / 3, 1 / 6];\n\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0,\n        j = points.length - 1,\n        m = [],\n        p0 = points[0],\n        p1 = points[1],\n        d = m[0] = d3_svg_lineSlope(p0, p1);\n\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n\n    m[i] = d;\n    return m;\n  }\n\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [],\n        d,\n        a,\n        b,\n        s,\n        m = d3_svg_lineFiniteDifferences(points),\n        i = -1,\n        j = points.length - 1;\n\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n\n    i = -1;\n\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([s || 0, m[i] * s || 0]);\n    }\n\n    return tangents;\n  }\n\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n\n  d3.svg.line.radial = function () {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n\n  function d3_svg_lineRadial(points) {\n    var point,\n        i = -1,\n        n = points.length,\n        r,\n        a;\n\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n\n    return points;\n  }\n\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX,\n        x1 = d3_geom_pointX,\n        y0 = 0,\n        y1 = d3_geom_pointY,\n        defined = d3_true,\n        interpolate = d3_svg_lineLinear,\n        interpolateKey = interpolate.key,\n        interpolateReverse = interpolate,\n        L = \"L\",\n        tension = .7;\n\n    function area(data) {\n      var segments = [],\n          points0 = [],\n          points1 = [],\n          i = -1,\n          n = data.length,\n          d,\n          fx0 = d3_functor(x0),\n          fy0 = d3_functor(y0),\n          fx1 = x0 === x1 ? function () {\n        return x;\n      } : d3_functor(x1),\n          fy1 = y0 === y1 ? function () {\n        return y;\n      } : d3_functor(y1),\n          x,\n          y;\n\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([x = +fx0.call(this, d, i), y = +fy0.call(this, d, i)]);\n          points1.push([+fx1.call(this, d, i), +fy1.call(this, d, i)]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n\n    area.x = function (_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n\n    area.x0 = function (_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n\n    area.x1 = function (_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n\n    area.y = function (_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n\n    area.y0 = function (_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n\n    area.y1 = function (_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n\n    area.defined = function (_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n\n    area.interpolate = function (_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _;else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n\n    area.tension = function (_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n\n    return area;\n  }\n\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\n  d3.svg.area = function () {\n    return d3_svg_area(d3_identity);\n  };\n\n  d3.svg.area.radial = function () {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n\n  d3.svg.chord = function () {\n    var source = d3_source,\n        target = d3_target,\n        radius = d3_svg_chordRadius,\n        startAngle = d3_svg_arcStartAngle,\n        endAngle = d3_svg_arcEndAngle;\n\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i),\n          t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i),\n          r = radius.call(self, subgroup, i),\n          a0 = startAngle.call(self, subgroup, i) - halfπ,\n          a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [r * Math.cos(a0), r * Math.sin(a0)],\n        p1: [r * Math.cos(a1), r * Math.sin(a1)]\n      };\n    }\n\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n\n    chord.radius = function (v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n\n    chord.source = function (v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n\n    chord.target = function (v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n\n    chord.startAngle = function (v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n\n    chord.endAngle = function (v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n\n    return chord;\n  };\n\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n\n  d3.svg.diagonal = function () {\n    var source = d3_source,\n        target = d3_target,\n        projection = d3_svg_diagonalProjection;\n\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i),\n          p3 = target.call(this, d, i),\n          m = (p0.y + p3.y) / 2,\n          p = [p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n\n    diagonal.source = function (x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.target = function (x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n\n    diagonal.projection = function (x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalProjection(d) {\n    return [d.x, d.y];\n  }\n\n  d3.svg.diagonal.radial = function () {\n    var diagonal = d3.svg.diagonal(),\n        projection = d3_svg_diagonalProjection,\n        projection_ = diagonal.projection;\n\n    diagonal.projection = function (x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n\n    return diagonal;\n  };\n\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function () {\n      var d = projection.apply(this, arguments),\n          r = d[0],\n          a = d[1] - halfπ;\n      return [r * Math.cos(a), r * Math.sin(a)];\n    };\n  }\n\n  d3.svg.symbol = function () {\n    var type = d3_svg_symbolType,\n        size = d3_svg_symbolSize;\n\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n\n    symbol.type = function (x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n\n    symbol.size = function (x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n\n    return symbol;\n  };\n\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function cross(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function diamond(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)),\n          rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function square(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function triangleDown(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function triangleUp(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3),\n          ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3),\n      d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\n  d3_selectionPrototype.transition = function (name) {\n    var id = d3_transitionInheritId || ++d3_transitionId,\n        ns = d3_transitionNamespace(name),\n        subgroups = [],\n        subgroup,\n        node,\n        transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_selectionPrototype.interrupt = function (name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\n  function d3_selection_interruptNS(ns) {\n    return function () {\n      var lock, activeId, active;\n\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId];else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n\n  var d3_transitionPrototype = [],\n      d3_transitionId = 0,\n      d3_transitionInheritId,\n      d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\n  d3.transition = function (selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n\n  d3.transition.prototype = d3_transitionPrototype;\n\n  d3_transitionPrototype.select = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnode,\n        node;\n    selector = d3_selection_selector(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.selectAll = function (selector) {\n    var id = this.id,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        subnodes,\n        node,\n        subnode,\n        transition;\n    selector = d3_selection_selectorAll(selector);\n\n    for (var j = -1, m = this.length; ++j < m;) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n\n          for (var k = -1, o = subnodes.length; ++k < o;) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n\n    return d3_transition(subgroups, ns, id);\n  };\n\n  d3_transitionPrototype.filter = function (filter) {\n    var subgroups = [],\n        subgroup,\n        group,\n        node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n\n  d3_transitionPrototype.tween = function (name, tween) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function (node) {\n      node[ns][id].tween.remove(name);\n    } : function (node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id,\n        ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function (node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n\n  d3_transitionPrototype.attr = function (nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) {\n        this.attr(value, nameNS[value]);\n      }\n\n      return this;\n    }\n\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate,\n        name = d3.ns.qualify(nameNS);\n\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function () {\n        var a = this.getAttribute(name),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function () {\n        var a = this.getAttributeNS(name.space, name.local),\n            i;\n        return a !== b && (i = interpolate(a, b), function (t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.attrTween = function (nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function (t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function (t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n\n  d3_transitionPrototype.style = function (name, value, priority) {\n    var n = arguments.length;\n\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n\n        for (priority in name) {\n          this.style(priority, name[priority], value);\n        }\n\n        return this;\n      }\n\n      priority = \"\";\n    }\n\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function () {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name),\n            i;\n        return a !== b && (i = d3_interpolate(a, b), function (t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n\n  d3_transitionPrototype.styleTween = function (name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function (t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n\n    return this.tween(\"style.\" + name, styleTween);\n  };\n\n  d3_transitionPrototype.text = function (value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function () {\n      this.textContent = b;\n    };\n  }\n\n  d3_transitionPrototype.remove = function () {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function () {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n\n  d3_transitionPrototype.ease = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function (node) {\n      node[ns][id].ease = value;\n    });\n  };\n\n  d3_transitionPrototype.delay = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function (node) {\n      node[ns][id].delay = value;\n    }));\n  };\n\n  d3_transitionPrototype.duration = function (value) {\n    var id = this.id,\n        ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function (node) {\n      node[ns][id].duration = value;\n    }));\n  };\n\n  d3_transitionPrototype.each = function (type, listener) {\n    var id = this.id,\n        ns = this.namespace;\n\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit,\n          inheritId = d3_transitionInheritId;\n\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function (node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function (node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n\n    return this;\n  };\n\n  d3_transitionPrototype.transition = function () {\n    var id0 = this.id,\n        id1 = ++d3_transitionId,\n        ns = this.namespace,\n        subgroups = [],\n        subgroup,\n        group,\n        node,\n        transition;\n\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n\n        subgroup.push(node);\n      }\n    }\n\n    return d3_transition(subgroups, ns, id1);\n  };\n\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }),\n        transition = lock[id],\n        time,\n        timer,\n        duration,\n        ease,\n        tweens;\n\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n\n    function start(elapsed) {\n      var activeId = lock.active,\n          active = lock[activeId];\n\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n\n      timer.c = tick;\n      d3_timer(function () {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function (key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n\n    function tick(elapsed) {\n      var t = elapsed / duration,\n          e = ease(t),\n          n = tweens.length;\n\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id];else delete node[ns];\n        return 1;\n      }\n    }\n\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n\n  d3.svg.axis = function () {\n    var scale = d3.scale.linear(),\n        orient = d3_svg_axisDefaultOrient,\n        innerTickSize = 6,\n        outerTickSize = 6,\n        tickPadding = 3,\n        tickArguments_ = [10],\n        tickValues = null,\n        tickFormat_;\n\n    function axis(g) {\n      g.each(function () {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale,\n            scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues,\n            tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_,\n            tick = g.selectAll(\".tick\").data(ticks, scale1),\n            tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε),\n            tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(),\n            tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1),\n            tickSpacing = Math.max(innerTickSize, 0) + tickPadding,\n            tickTransform;\n        var range = d3_scaleRange(scale1),\n            path = g.selectAll(\".domain\").data([0]),\n            pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"),\n            lineUpdate = tickUpdate.select(\"line\"),\n            text = tick.select(\"text\").text(tickFormat),\n            textEnter = tickEnter.select(\"text\"),\n            textUpdate = tickUpdate.select(\"text\"),\n            sign = orient === \"top\" || orient === \"left\" ? -1 : 1,\n            x1,\n            x2,\n            y1,\n            y2;\n\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\n        if (scale1.rangeBand) {\n          var x = scale1,\n              dx = x.rangeBand() / 2;\n\n          scale0 = scale1 = function scale1(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n\n    axis.scale = function (x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n\n    axis.orient = function (x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n\n    axis.ticks = function () {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n\n    axis.tickValues = function (x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n\n    axis.tickFormat = function (x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n\n    axis.tickSize = function (x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n\n    axis.innerTickSize = function (x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n\n    axis.outerTickSize = function (x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n\n    axis.tickPadding = function (x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n\n    axis.tickSubdivide = function () {\n      return arguments.length && axis;\n    };\n\n    return axis;\n  };\n\n  var d3_svg_axisDefaultOrient = \"bottom\",\n      d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function (d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n\n  d3.svg.brush = function () {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"),\n        x = null,\n        y = null,\n        xExtent = [0, 0],\n        yExtent = [0, 0],\n        xExtentDomain,\n        yExtentDomain,\n        xClamp = true,\n        yClamp = true,\n        resizes = d3_svg_brushResizes[0];\n\n    function brush(g) {\n      g.each(function () {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([0]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([0]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function (d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function (d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function (d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function (d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g),\n            backgroundUpdate = d3.transition(background),\n            range;\n\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n\n        redraw(gUpdate);\n      });\n    }\n\n    brush.event = function (g) {\n      g.each(function () {\n        var event_ = event.of(this, arguments),\n            extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        },\n            extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function () {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function () {\n            var xi = d3_interpolateArray(xExtent, extent1.x),\n                yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function (t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function () {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function (d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n\n    function brushstart() {\n      var target = this,\n          eventTarget = d3.select(d3.event.target),\n          event_ = event.of(target, arguments),\n          g = d3.select(target),\n          resizing = eventTarget.datum(),\n          resizingX = !/^(n|s)$/.test(resizing) && x,\n          resizingY = !/^(e|w)$/.test(resizing) && y,\n          dragging = eventTarget.classed(\"extent\"),\n          dragRestore = d3_event_dragSuppress(target),\n          center,\n          origin = d3.mouse(target),\n          offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n\n      g.interrupt().selectAll(\"*\").interrupt();\n\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing),\n            ey = +/^n/.test(resizing);\n        offset = [xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1]];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n\n          d3_eventPreventDefault();\n        }\n      }\n\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n\n      function brushmove() {\n        var point = d3.mouse(target),\n            moved = false;\n\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [(xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale),\n            r0 = range[0],\n            r1 = range[1],\n            position = origin[i],\n            extent = i ? yExtent : xExtent,\n            size = extent[1] - extent[0],\n            min,\n            max;\n\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null;else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n\n    brush.x = function (z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.y = function (z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n\n    brush.clamp = function (z) {\n      if (!arguments.length) return x && y ? [xClamp, yClamp] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1];else if (x) xClamp = !!z;else if (y) yClamp = !!z;\n      return brush;\n    };\n\n    brush.extent = function (z) {\n      var x0, x1, y0, y1, t;\n\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n\n        return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];\n      }\n\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [x0, x1];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [x0, x1];\n      }\n\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [y0, y1];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [y0, y1];\n      }\n\n      return brush;\n    };\n\n    brush.clear = function () {\n      if (!brush.empty()) {\n        xExtent = [0, 0], yExtent = [0, 0];\n        xExtentDomain = yExtentDomain = null;\n      }\n\n      return brush;\n    };\n\n    brush.empty = function () {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n\n    return d3.rebind(brush, event, \"on\");\n  };\n\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [[\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"], [\"e\", \"w\"], [\"n\", \"s\"], []];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  d3_time_formatIsoNative.parse = function (string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function (date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function (date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function (date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function (date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function (date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function (date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function (date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function (date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function (date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n\n    scale.invert = function (x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n\n    scale.domain = function (x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0],\n          target = span / count,\n          i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [methods.year, d3_scale_linearTickRange(extent.map(function (d) {\n        return d / 31536e6;\n      }), count)[2]] : !i ? [d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2]] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n\n    scale.nice = function (interval, skip) {\n      var domain = scale.domain(),\n          extent = d3_scaleExtent(domain),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function floor(date) {\n          while (skipped(date = interval.floor(date))) {\n            date = d3_time_scaleDate(date - 1);\n          }\n\n          return date;\n        },\n        ceil: function ceil(date) {\n          while (skipped(date = interval.ceil(date))) {\n            date = d3_time_scaleDate(+date + 1);\n          }\n\n          return date;\n        }\n      } : interval));\n    };\n\n    scale.ticks = function (interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()),\n          method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [{\n        range: interval\n      }, skip];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n\n    scale.tickFormat = function () {\n      return format;\n    };\n\n    scale.copy = function () {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n\n    return d3_scale_linearRebind(scale, linear);\n  }\n\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n\n  var d3_time_scaleSteps = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6];\n  var d3_time_scaleLocalMethods = [[d3_time.second, 1], [d3_time.second, 5], [d3_time.second, 15], [d3_time.second, 30], [d3_time.minute, 1], [d3_time.minute, 5], [d3_time.minute, 15], [d3_time.minute, 30], [d3_time.hour, 1], [d3_time.hour, 3], [d3_time.hour, 6], [d3_time.hour, 12], [d3_time.day, 1], [d3_time.day, 2], [d3_time.week, 1], [d3_time.month, 1], [d3_time.month, 3], [d3_time.year, 1]];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([[\".%L\", function (d) {\n    return d.getMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getHours();\n  }], [\"%a %d\", function (d) {\n    return d.getDay() && d.getDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getMonth();\n  }], [\"%Y\", d3_true]]);\n  var d3_time_scaleMilliseconds = {\n    range: function range(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n\n  d3_time.scale = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function (m) {\n    return [m[0].utc, m[1]];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([[\".%L\", function (d) {\n    return d.getUTCMilliseconds();\n  }], [\":%S\", function (d) {\n    return d.getUTCSeconds();\n  }], [\"%I:%M\", function (d) {\n    return d.getUTCMinutes();\n  }], [\"%I %p\", function (d) {\n    return d.getUTCHours();\n  }], [\"%a %d\", function (d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  }], [\"%b %d\", function (d) {\n    return d.getUTCDate() != 1;\n  }], [\"%B\", function (d) {\n    return d.getUTCMonth();\n  }], [\"%Y\", d3_true]]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\n  d3_time.scale.utc = function () {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n\n  d3.text = d3_xhrType(function (request) {\n    return request.responseText;\n  });\n\n  d3.json = function (url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n\n  d3.html = function (url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n\n  d3.xml = d3_xhrType(function (request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3);else if (typeof module === \"object\" && module.exports) module.exports = d3;else this.d3 = d3;\n}();","/* nvd3 version 1.8.6 (https://github.com/novus/nvd3) 2017-08-23 */\n(function () {\n  // set up main nv object\n  var nv = {}; // the major global objects under the nv namespace\n\n  nv.dev = false; //set false when in production\n\n  nv.tooltip = nv.tooltip || {}; // For the tooltip system\n\n  nv.utils = nv.utils || {}; // Utility subsystem\n\n  nv.models = nv.models || {}; //stores all the possible models/components\n\n  nv.charts = {}; //stores all the ready to use charts\n\n  nv.logs = {}; //stores some statistics and potential error messages\n\n  nv.dom = {}; //DOM manipulation functions\n  // Node/CommonJS - require D3\n\n  if (typeof module !== 'undefined' && typeof exports !== 'undefined' && typeof d3 == 'undefined') {\n    d3 = require('d3');\n  }\n\n  nv.dispatch = d3.dispatch('render_start', 'render_end'); // Function bind polyfill\n  // Needed ONLY for phantomJS as it's missing until version 2.0 which is unreleased as of this comment\n  // https://github.com/ariya/phantomjs/issues/10522\n  // http://kangax.github.io/compat-table/es5/#Function.prototype.bind\n  // phantomJS is used for running the test suite\n\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== \"function\") {\n        // closest thing possible to the ECMAScript 5 internal IsCallable function\n        throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function fNOP() {},\n          fBound = function fBound() {\n        return fToBind.apply(this instanceof fNOP && oThis ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      fNOP.prototype = this.prototype;\n      fBound.prototype = new fNOP();\n      return fBound;\n    };\n  } //  Development render timers - disabled if dev = false\n\n\n  if (nv.dev) {\n    nv.dispatch.on('render_start', function (e) {\n      nv.logs.startTime = +new Date();\n    });\n    nv.dispatch.on('render_end', function (e) {\n      nv.logs.endTime = +new Date();\n      nv.logs.totalTime = nv.logs.endTime - nv.logs.startTime;\n      nv.log('total', nv.logs.totalTime); // used for development, to keep track of graph generation times\n    });\n  } // Logs all arguments, and returns the last so you can test things in place\n  // Note: in IE8 console.log is an object not a function, and if modernizr is used\n  // then calling Function.prototype.bind with with anything other than a function\n  // causes a TypeError to be thrown.\n\n\n  nv.log = function () {\n    if (nv.dev && window.console && console.log && console.log.apply) console.log.apply(console, arguments);else if (nv.dev && window.console && typeof console.log == \"function\" && Function.prototype.bind) {\n      var log = Function.prototype.bind.call(console.log, console);\n      log.apply(console, arguments);\n    }\n    return arguments[arguments.length - 1];\n  }; // print console warning, should be used by deprecated functions\n\n\n  nv.deprecated = function (name, info) {\n    if (console && console.warn) {\n      console.warn('nvd3 warning: `' + name + '` has been deprecated. ', info || '');\n    }\n  }; // The nv.render function is used to queue up chart rendering\n  // in non-blocking async functions.\n  // When all queued charts are done rendering, nv.dispatch.render_end is invoked.\n\n\n  nv.render = function render(step) {\n    // number of graphs to generate in each timeout loop\n    step = step || 1;\n    nv.render.active = true;\n    nv.dispatch.render_start();\n\n    var renderLoop = function renderLoop() {\n      var chart, graph;\n\n      for (var i = 0; i < step && (graph = nv.render.queue[i]); i++) {\n        chart = graph.generate();\n        if (typeof graph.callback == typeof Function) graph.callback(chart);\n      }\n\n      nv.render.queue.splice(0, i);\n\n      if (nv.render.queue.length) {\n        setTimeout(renderLoop);\n      } else {\n        nv.dispatch.render_end();\n        nv.render.active = false;\n      }\n    };\n\n    setTimeout(renderLoop);\n  };\n\n  nv.render.active = false;\n  nv.render.queue = [];\n  /*\n  Adds a chart to the async rendering queue. This method can take arguments in two forms:\n  nv.addGraph({\n      generate: <Function>\n      callback: <Function>\n  })\n  \n  or\n  \n  nv.addGraph(<generate Function>, <callback Function>)\n  \n  The generate function should contain code that creates the NVD3 model, sets options\n  on it, adds data to an SVG element, and invokes the chart model. The generate function\n  should return the chart model.  See examples/lineChart.html for a usage example.\n  \n  The callback function is optional, and it is called when the generate function completes.\n  */\n\n  nv.addGraph = function (obj) {\n    if (typeof arguments[0] === typeof Function) {\n      obj = {\n        generate: arguments[0],\n        callback: arguments[1]\n      };\n    }\n\n    nv.render.queue.push(obj);\n\n    if (!nv.render.active) {\n      nv.render();\n    }\n  }; // Node/CommonJS exports\n\n\n  if (typeof module !== 'undefined' && typeof exports !== 'undefined') {\n    module.exports = nv;\n  }\n\n  if (typeof window !== 'undefined') {\n    window.nv = nv;\n  }\n  /* Facade for queueing DOM write operations\r\n   * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n   * if available.\r\n   * This could easily be extended to support alternate\r\n   * implementations in the future.\r\n   */\n\n\n  nv.dom.write = function (callback) {\n    if (window.fastdom !== undefined) {\n      return fastdom.mutate(callback);\n    }\n\n    return callback();\n  };\n  /* Facade for queueing DOM read operations\r\n   * with Fastdom (https://github.com/wilsonpage/fastdom)\r\n   * if available.\r\n   * This could easily be extended to support alternate\r\n   * implementations in the future.\r\n   */\n\n\n  nv.dom.read = function (callback) {\n    if (window.fastdom !== undefined) {\n      return fastdom.measure(callback);\n    }\n\n    return callback();\n  };\n  /* Utility class to handle creation of an interactive layer.\n   This places a rectangle on top of the chart. When you mouse move over it, it sends a dispatch\n   containing the X-coordinate. It can also render a vertical line where the mouse is located.\n  \n   dispatch.elementMousemove is the important event to latch onto.  It is fired whenever the mouse moves over\n   the rectangle. The dispatch is given one object which contains the mouseX/Y location.\n   It also has 'pointXValue', which is the conversion of mouseX to the x-axis scale.\n   */\n\n\n  nv.interactiveGuideline = function () {\n    \"use strict\";\n\n    var margin = {\n      left: 0,\n      top: 0 //Pass the chart's top and left magins. Used to calculate the mouseX/Y.\n\n    },\n        width = null,\n        height = null,\n        xScale = d3.scale.linear(),\n        dispatch = d3.dispatch('elementMousemove', 'elementMouseout', 'elementClick', 'elementDblclick', 'elementMouseDown', 'elementMouseUp'),\n        showGuideLine = true,\n        svgContainer = null // Must pass the chart's svg, we'll use its mousemove event.\n    ,\n        tooltip = nv.models.tooltip(),\n        isMSIE = window.ActiveXObject // Checkt if IE by looking for activeX. (excludes IE11)\n    ;\n    tooltip.duration(0).hideDelay(0).hidden(false);\n\n    function layer(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this);\n        var availableWidth = width || 960,\n            availableHeight = height || 400;\n        var wrap = container.selectAll(\"g.nv-wrap.nv-interactiveLineLayer\").data([data]);\n        var wrapEnter = wrap.enter().append(\"g\").attr(\"class\", \" nv-wrap nv-interactiveLineLayer\");\n        wrapEnter.append(\"g\").attr(\"class\", \"nv-interactiveGuideLine\");\n\n        if (!svgContainer) {\n          return;\n        }\n\n        function mouseHandler() {\n          var mouseX = d3.event.clientX - this.getBoundingClientRect().left;\n          var mouseY = d3.event.clientY - this.getBoundingClientRect().top;\n          var subtractMargin = true;\n          var mouseOutAnyReason = false;\n\n          if (isMSIE) {\n            /*\n             D3.js (or maybe SVG.getScreenCTM) has a nasty bug in Internet Explorer 10.\n             d3.mouse() returns incorrect X,Y mouse coordinates when mouse moving\n             over a rect in IE 10.\n             However, d3.event.offsetX/Y also returns the mouse coordinates\n             relative to the triggering <rect>. So we use offsetX/Y on IE.\n             */\n            mouseX = d3.event.offsetX;\n            mouseY = d3.event.offsetY;\n            /*\n             On IE, if you attach a mouse event listener to the <svg> container,\n             it will actually trigger it for all the child elements (like <path>, <circle>, etc).\n             When this happens on IE, the offsetX/Y is set to where ever the child element\n             is located.\n             As a result, we do NOT need to subtract margins to figure out the mouse X/Y\n             position under this scenario. Removing the line below *will* cause\n             the interactive layer to not work right on IE.\n             */\n\n            if (d3.event.target.tagName !== \"svg\") {\n              subtractMargin = false;\n            }\n\n            if (d3.event.target.className.baseVal.match(\"nv-legend\")) {\n              mouseOutAnyReason = true;\n            }\n          }\n\n          if (subtractMargin) {\n            mouseX -= margin.left;\n            mouseY -= margin.top;\n          }\n          /* If mouseX/Y is outside of the chart's bounds,\n           trigger a mouseOut event.\n           */\n\n\n          if (d3.event.type === 'mouseout' || mouseX < 0 || mouseY < 0 || mouseX > availableWidth || mouseY > availableHeight || d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined || mouseOutAnyReason) {\n            if (isMSIE) {\n              if (d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined && (d3.event.relatedTarget.className === undefined || d3.event.relatedTarget.className.match(tooltip.nvPointerEventsClass))) {\n                return;\n              }\n            }\n\n            dispatch.elementMouseout({\n              mouseX: mouseX,\n              mouseY: mouseY\n            });\n            layer.renderGuideLine(null); //hide the guideline\n\n            tooltip.hidden(true);\n            return;\n          } else {\n            tooltip.hidden(false);\n          }\n\n          var scaleIsOrdinal = typeof xScale.rangeBands === 'function';\n          var pointXValue = undefined; // Ordinal scale has no invert method\n\n          if (scaleIsOrdinal) {\n            var elementIndex = d3.bisect(xScale.range(), mouseX) - 1; // Check if mouseX is in the range band\n\n            if (xScale.range()[elementIndex] + xScale.rangeBand() >= mouseX) {\n              pointXValue = xScale.domain()[d3.bisect(xScale.range(), mouseX) - 1];\n            } else {\n              dispatch.elementMouseout({\n                mouseX: mouseX,\n                mouseY: mouseY\n              });\n              layer.renderGuideLine(null); //hide the guideline\n\n              tooltip.hidden(true);\n              return;\n            }\n          } else {\n            pointXValue = xScale.invert(mouseX);\n          }\n\n          dispatch.elementMousemove({\n            mouseX: mouseX,\n            mouseY: mouseY,\n            pointXValue: pointXValue\n          }); //If user double clicks the layer, fire a elementDblclick\n\n          if (d3.event.type === \"dblclick\") {\n            dispatch.elementDblclick({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user single clicks the layer, fire elementClick\n\n\n          if (d3.event.type === 'click') {\n            dispatch.elementClick({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user presses mouse down the layer, fire elementMouseDown\n\n\n          if (d3.event.type === 'mousedown') {\n            dispatch.elementMouseDown({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          } // if user presses mouse down the layer, fire elementMouseUp\n\n\n          if (d3.event.type === 'mouseup') {\n            dispatch.elementMouseUp({\n              mouseX: mouseX,\n              mouseY: mouseY,\n              pointXValue: pointXValue\n            });\n          }\n        }\n\n        svgContainer.on(\"touchmove\", mouseHandler).on(\"mousemove\", mouseHandler, true).on(\"mouseout\", mouseHandler, true).on(\"mousedown\", mouseHandler, true).on(\"mouseup\", mouseHandler, true).on(\"dblclick\", mouseHandler).on(\"click\", mouseHandler);\n        layer.guideLine = null; //Draws a vertical guideline at the given X postion.\n\n        layer.renderGuideLine = function (x) {\n          if (!showGuideLine) return;\n          if (layer.guideLine && layer.guideLine.attr(\"x1\") === x) return;\n          nv.dom.write(function () {\n            var line = wrap.select(\".nv-interactiveGuideLine\").selectAll(\"line\").data(x != null ? [nv.utils.NaNtoZero(x)] : [], String);\n            line.enter().append(\"line\").attr(\"class\", \"nv-guideline\").attr(\"x1\", function (d) {\n              return d;\n            }).attr(\"x2\", function (d) {\n              return d;\n            }).attr(\"y1\", availableHeight).attr(\"y2\", 0);\n            line.exit().remove();\n          });\n        };\n      });\n    }\n\n    layer.dispatch = dispatch;\n    layer.tooltip = tooltip;\n\n    layer.margin = function (_) {\n      if (!arguments.length) return margin;\n      margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n      margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n      return layer;\n    };\n\n    layer.width = function (_) {\n      if (!arguments.length) return width;\n      width = _;\n      return layer;\n    };\n\n    layer.height = function (_) {\n      if (!arguments.length) return height;\n      height = _;\n      return layer;\n    };\n\n    layer.xScale = function (_) {\n      if (!arguments.length) return xScale;\n      xScale = _;\n      return layer;\n    };\n\n    layer.showGuideLine = function (_) {\n      if (!arguments.length) return showGuideLine;\n      showGuideLine = _;\n      return layer;\n    };\n\n    layer.svgContainer = function (_) {\n      if (!arguments.length) return svgContainer;\n      svgContainer = _;\n      return layer;\n    };\n\n    return layer;\n  };\n  /* Utility class that uses d3.bisect to find the index in a given array, where a search value can be inserted.\n   This is different from normal bisectLeft; this function finds the nearest index to insert the search value.\n  \n   For instance, lets say your array is [1,2,3,5,10,30], and you search for 28.\n   Normal d3.bisectLeft will return 4, because 28 is inserted after the number 10.  But interactiveBisect will return 5\n   because 28 is closer to 30 than 10.\n  \n   Unit tests can be found in: interactiveBisectTest.html\n  \n   Has the following known issues:\n   * Will not work if the data points move backwards (ie, 10,9,8,7, etc) or if the data points are in random order.\n   * Won't work if there are duplicate x coordinate values.\n   */\n\n\n  nv.interactiveBisect = function (values, searchVal, xAccessor) {\n    \"use strict\";\n\n    if (!(values instanceof Array)) {\n      return null;\n    }\n\n    var _xAccessor;\n\n    if (typeof xAccessor !== 'function') {\n      _xAccessor = function _xAccessor(d) {\n        return d.x;\n      };\n    } else {\n      _xAccessor = xAccessor;\n    }\n\n    var _cmp = function _cmp(d, v) {\n      // Accessors are no longer passed the index of the element along with\n      // the element itself when invoked by d3.bisector.\n      //\n      // Starting at D3 v3.4.4, d3.bisector() started inspecting the\n      // function passed to determine if it should consider it an accessor\n      // or a comparator. This meant that accessors that take two arguments\n      // (expecting an index as the second parameter) are treated as\n      // comparators where the second argument is the search value against\n      // which the first argument is compared.\n      return _xAccessor(d) - v;\n    };\n\n    var bisect = d3.bisector(_cmp).left;\n    var index = d3.max([0, bisect(values, searchVal) - 1]);\n\n    var currentValue = _xAccessor(values[index]);\n\n    if (typeof currentValue === 'undefined') {\n      currentValue = index;\n    }\n\n    if (currentValue === searchVal) {\n      return index; //found exact match\n    }\n\n    var nextIndex = d3.min([index + 1, values.length - 1]);\n\n    var nextValue = _xAccessor(values[nextIndex]);\n\n    if (typeof nextValue === 'undefined') {\n      nextValue = nextIndex;\n    }\n\n    if (Math.abs(nextValue - searchVal) >= Math.abs(currentValue - searchVal)) {\n      return index;\n    } else {\n      return nextIndex;\n    }\n  };\n  /*\n   Returns the index in the array \"values\" that is closest to searchVal.\n   Only returns an index if searchVal is within some \"threshold\".\n   Otherwise, returns null.\n   */\n\n\n  nv.nearestValueIndex = function (values, searchVal, threshold) {\n    \"use strict\";\n\n    var yDistMax = Infinity,\n        indexToHighlight = null;\n    values.forEach(function (d, i) {\n      var delta = Math.abs(searchVal - d);\n\n      if (d != null && delta <= yDistMax && delta < threshold) {\n        yDistMax = delta;\n        indexToHighlight = i;\n      }\n    });\n    return indexToHighlight;\n  };\n  /* Model which can be instantiated to handle tooltip rendering.\n   Example usage:\n   var tip = nv.models.tooltip().gravity('w').distance(23)\n   .data(myDataObject);\n  \n   tip();    //just invoke the returned function to render tooltip.\n   */\n\n\n  nv.models.tooltip = function () {\n    \"use strict\";\n    /*\n    Tooltip data. If data is given in the proper format, a consistent tooltip is generated.\n    Example Format of data:\n    {\n        key: \"Date\",\n        value: \"August 2009\",\n        series: [\n            {key: \"Series 1\", value: \"Value 1\", color: \"#000\"},\n            {key: \"Series 2\", value: \"Value 2\", color: \"#00f\"}\n        ]\n    }\n    */\n\n    var id = \"nvtooltip-\" + Math.floor(Math.random() * 100000) // Generates a unique id when you create a new tooltip() object.\n    ,\n        data = null,\n        gravity = 'w' // Can be 'n','s','e','w'. Determines how tooltip is positioned.\n    ,\n        distance = 25 // Distance to offset tooltip from the mouse location.\n    ,\n        snapDistance = 0 // Tolerance allowed before tooltip is moved from its current position (creates 'snapping' effect)\n    ,\n        classes = null // Attaches additional CSS classes to the tooltip DIV that is created.\n    ,\n        hidden = true // Start off hidden, toggle with hide/show functions below.\n    ,\n        hideDelay = 200 // Delay (in ms) before the tooltip hides after calling hide().\n    ,\n        tooltip = null // d3 select of the tooltip div.\n    ,\n        lastPosition = {\n      left: null,\n      top: null // Last position the tooltip was in.\n\n    },\n        enabled = true // True -> tooltips are rendered. False -> don't render tooltips.\n    ,\n        duration = 100 // Tooltip movement duration, in ms.\n    ,\n        headerEnabled = true // If is to show the tooltip header.\n    ,\n        nvPointerEventsClass = \"nv-pointer-events-none\" // CSS class to specify whether element should not have mouse events.\n    ; // Format function for the tooltip values column.\n    // d is value,\n    // i is series index\n    // p is point containing the value\n\n    var valueFormatter = function valueFormatter(d, i, p) {\n      return d;\n    }; // Format function for the tooltip header value.\n\n\n    var headerFormatter = function headerFormatter(d) {\n      return d;\n    };\n\n    var keyFormatter = function keyFormatter(d, i) {\n      return d;\n    }; // By default, the tooltip model renders a beautiful table inside a DIV, returned as HTML\n    // You can override this function if a custom tooltip is desired. For instance, you could directly manipulate\n    // the DOM by accessing elem and returning false.\n\n\n    var contentGenerator = function contentGenerator(d, elem) {\n      if (d === null) {\n        return '';\n      }\n\n      var table = d3.select(document.createElement(\"table\"));\n\n      if (headerEnabled) {\n        var theadEnter = table.selectAll(\"thead\").data([d]).enter().append(\"thead\");\n        theadEnter.append(\"tr\").append(\"td\").attr(\"colspan\", 3).append(\"strong\").classed(\"x-value\", true).html(headerFormatter(d.value));\n      }\n\n      var tbodyEnter = table.selectAll(\"tbody\").data([d]).enter().append(\"tbody\");\n      var trowEnter = tbodyEnter.selectAll(\"tr\").data(function (p) {\n        return p.series;\n      }).enter().append(\"tr\").classed(\"highlight\", function (p) {\n        return p.highlight;\n      });\n      trowEnter.append(\"td\").classed(\"legend-color-guide\", true).append(\"div\").style(\"background-color\", function (p) {\n        return p.color;\n      });\n      trowEnter.append(\"td\").classed(\"key\", true).classed(\"total\", function (p) {\n        return !!p.total;\n      }).html(function (p, i) {\n        return keyFormatter(p.key, i);\n      });\n      trowEnter.append(\"td\").classed(\"value\", true).html(function (p, i) {\n        return valueFormatter(p.value, i, p);\n      });\n      trowEnter.filter(function (p, i) {\n        return p.percent !== undefined;\n      }).append(\"td\").classed(\"percent\", true).html(function (p, i) {\n        return \"(\" + d3.format('%')(p.percent) + \")\";\n      });\n      trowEnter.selectAll(\"td\").each(function (p) {\n        if (p.highlight) {\n          var opacityScale = d3.scale.linear().domain([0, 1]).range([\"#fff\", p.color]);\n          var opacity = 0.6;\n          d3.select(this).style(\"border-bottom-color\", opacityScale(opacity)).style(\"border-top-color\", opacityScale(opacity));\n        }\n      });\n      var html = table.node().outerHTML;\n      if (d.footer !== undefined) html += \"<div class='footer'>\" + d.footer + \"</div>\";\n      return html;\n    };\n    /*\n     Function that returns the position (relative to the viewport/document.body)\n     the tooltip should be placed in.\n     Should return: {\n        left: <leftPos>,\n        top: <topPos>\n     }\n     */\n\n\n    var position = function position() {\n      var pos = {\n        left: d3.event !== null ? d3.event.clientX : 0,\n        top: d3.event !== null ? d3.event.clientY : 0\n      };\n\n      if (getComputedStyle(document.body).transform != 'none') {\n        // Take the offset into account, as now the tooltip is relative\n        // to document.body.\n        var client = document.body.getBoundingClientRect();\n        pos.left -= client.left;\n        pos.top -= client.top;\n      }\n\n      return pos;\n    };\n\n    var dataSeriesExists = function dataSeriesExists(d) {\n      if (d && d.series) {\n        if (nv.utils.isArray(d.series)) {\n          return true;\n        } // if object, it's okay just convert to array of the object\n\n\n        if (nv.utils.isObject(d.series)) {\n          d.series = [d.series];\n          return true;\n        }\n      }\n\n      return false;\n    }; // Calculates the gravity offset of the tooltip. Parameter is position of tooltip\n    // relative to the viewport.\n\n\n    var calcGravityOffset = function calcGravityOffset(pos) {\n      var height = tooltip.node().offsetHeight,\n          width = tooltip.node().offsetWidth,\n          clientWidth = document.documentElement.clientWidth,\n          // Don't want scrollbars.\n      clientHeight = document.documentElement.clientHeight,\n          // Don't want scrollbars.\n      left,\n          top,\n          tmp; // calculate position based on gravity\n\n      switch (gravity) {\n        case 'e':\n          left = -width - distance;\n          top = -(height / 2);\n          if (pos.left + left < 0) left = distance;\n          if ((tmp = pos.top + top) < 0) top -= tmp;\n          if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n          break;\n\n        case 'w':\n          left = distance;\n          top = -(height / 2);\n          if (pos.left + left + width > clientWidth) left = -width - distance;\n          if ((tmp = pos.top + top) < 0) top -= tmp;\n          if ((tmp = pos.top + top + height) > clientHeight) top -= tmp - clientHeight;\n          break;\n\n        case 'n':\n          left = -(width / 2) - 5; // - 5 is an approximation of the mouse's height.\n\n          top = distance;\n          if (pos.top + top + height > clientHeight) top = -height - distance;\n          if ((tmp = pos.left + left) < 0) left -= tmp;\n          if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n          break;\n\n        case 's':\n          left = -(width / 2);\n          top = -height - distance;\n          if (pos.top + top < 0) top = distance;\n          if ((tmp = pos.left + left) < 0) left -= tmp;\n          if ((tmp = pos.left + left + width) > clientWidth) left -= tmp - clientWidth;\n          break;\n\n        case 'center':\n          left = -(width / 2);\n          top = -(height / 2);\n          break;\n\n        default:\n          left = 0;\n          top = 0;\n          break;\n      }\n\n      return {\n        'left': left,\n        'top': top\n      };\n    };\n    /*\n     Positions the tooltip in the correct place, as given by the position() function.\n     */\n\n\n    var positionTooltip = function positionTooltip() {\n      nv.dom.read(function () {\n        var pos = position(),\n            gravityOffset = calcGravityOffset(pos),\n            left = pos.left + gravityOffset.left,\n            top = pos.top + gravityOffset.top; // delay hiding a bit to avoid flickering\n\n        if (hidden) {\n          tooltip.interrupt().transition().delay(hideDelay).duration(0).style('opacity', 0);\n        } else {\n          // using tooltip.style('transform') returns values un-usable for tween\n          var old_translate = 'translate(' + lastPosition.left + 'px, ' + lastPosition.top + 'px)';\n          var new_translate = 'translate(' + Math.round(left) + 'px, ' + Math.round(top) + 'px)';\n          var translateInterpolator = d3.interpolateString(old_translate, new_translate);\n          var is_hidden = tooltip.style('opacity') < 0.1;\n          tooltip.interrupt() // cancel running transitions\n          .transition().duration(is_hidden ? 0 : duration) // using tween since some versions of d3 can't auto-tween a translate on a div\n          .styleTween('transform', function (d) {\n            return translateInterpolator;\n          }, 'important') // Safari has its own `-webkit-transform` and does not support `transform`\n          .styleTween('-webkit-transform', function (d) {\n            return translateInterpolator;\n          }).style('-ms-transform', new_translate).style('opacity', 1);\n        }\n\n        lastPosition.left = left;\n        lastPosition.top = top;\n      });\n    }; // Creates new tooltip container, or uses existing one on DOM.\n\n\n    function initTooltip() {\n      if (!tooltip || !tooltip.node()) {\n        // Create new tooltip div if it doesn't exist on DOM.\n        var data = [1];\n        tooltip = d3.select(document.body).select('#' + id).data(data);\n        tooltip.enter().append('div').attr(\"class\", \"nvtooltip \" + (classes ? classes : \"xy-tooltip\")).attr(\"id\", id).style(\"top\", 0).style(\"left\", 0).style('opacity', 0).style('position', 'fixed').selectAll(\"div, table, td, tr\").classed(nvPointerEventsClass, true).classed(nvPointerEventsClass, true);\n        tooltip.exit().remove();\n      }\n    } // Draw the tooltip onto the DOM.\n\n\n    function nvtooltip() {\n      if (!enabled) return;\n      if (!dataSeriesExists(data)) return;\n      nv.dom.write(function () {\n        initTooltip(); // Generate data and set it into tooltip.\n        // Bonus - If you override contentGenerator and return false, you can use something like\n        //         Angular, React or Knockout to bind the data for your tooltip directly to the DOM.\n\n        var newContent = contentGenerator(data, tooltip.node());\n\n        if (newContent) {\n          tooltip.node().innerHTML = newContent;\n        }\n\n        positionTooltip();\n      });\n      return nvtooltip;\n    }\n\n    nvtooltip.nvPointerEventsClass = nvPointerEventsClass;\n    nvtooltip.options = nv.utils.optionsFunc.bind(nvtooltip);\n    nvtooltip._options = Object.create({}, {\n      // simple read/write options\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      gravity: {\n        get: function get() {\n          return gravity;\n        },\n        set: function set(_) {\n          gravity = _;\n        }\n      },\n      distance: {\n        get: function get() {\n          return distance;\n        },\n        set: function set(_) {\n          distance = _;\n        }\n      },\n      snapDistance: {\n        get: function get() {\n          return snapDistance;\n        },\n        set: function set(_) {\n          snapDistance = _;\n        }\n      },\n      classes: {\n        get: function get() {\n          return classes;\n        },\n        set: function set(_) {\n          classes = _;\n        }\n      },\n      enabled: {\n        get: function get() {\n          return enabled;\n        },\n        set: function set(_) {\n          enabled = _;\n        }\n      },\n      hideDelay: {\n        get: function get() {\n          return hideDelay;\n        },\n        set: function set(_) {\n          hideDelay = _;\n        }\n      },\n      contentGenerator: {\n        get: function get() {\n          return contentGenerator;\n        },\n        set: function set(_) {\n          contentGenerator = _;\n        }\n      },\n      valueFormatter: {\n        get: function get() {\n          return valueFormatter;\n        },\n        set: function set(_) {\n          valueFormatter = _;\n        }\n      },\n      headerFormatter: {\n        get: function get() {\n          return headerFormatter;\n        },\n        set: function set(_) {\n          headerFormatter = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      headerEnabled: {\n        get: function get() {\n          return headerEnabled;\n        },\n        set: function set(_) {\n          headerEnabled = _;\n        }\n      },\n      position: {\n        get: function get() {\n          return position;\n        },\n        set: function set(_) {\n          position = _;\n        }\n      },\n      // Deprecated options\n      chartContainer: {\n        get: function get() {\n          return document.body;\n        },\n        set: function set(_) {\n          // deprecated after 1.8.3\n          nv.deprecated('chartContainer', 'feature removed after 1.8.3');\n        }\n      },\n      fixedTop: {\n        get: function get() {\n          return null;\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('fixedTop', 'feature removed after 1.8.1');\n        }\n      },\n      offset: {\n        get: function get() {\n          return {\n            left: 0,\n            top: 0\n          };\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('offset', 'use chart.tooltip.distance() instead');\n        }\n      },\n      // options with extra logic\n      hidden: {\n        get: function get() {\n          return hidden;\n        },\n        set: function set(_) {\n          if (hidden != _) {\n            hidden = !!_;\n            nvtooltip();\n          }\n        }\n      },\n      data: {\n        get: function get() {\n          return data;\n        },\n        set: function set(_) {\n          // if showing a single data point, adjust data format with that\n          if (_.point) {\n            _.value = _.point.x;\n            _.series = _.series || {};\n            _.series.value = _.point.y;\n            _.series.color = _.point.color || _.series.color;\n          }\n\n          data = _;\n        }\n      },\n      // read only properties\n      node: {\n        get: function get() {\n          return tooltip.node();\n        },\n        set: function set(_) {}\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {}\n      }\n    });\n    nv.utils.initOptions(nvtooltip);\n    return nvtooltip;\n  };\n  /*\n  Gets the browser window size\n  \n  Returns object with height and width properties\n   */\n\n\n  nv.utils.windowSize = function () {\n    // Sane defaults\n    var size = {\n      width: 640,\n      height: 480\n    }; // Most recent browsers use\n\n    if (window.innerWidth && window.innerHeight) {\n      size.width = window.innerWidth;\n      size.height = window.innerHeight;\n      return size;\n    } // IE can use depending on mode it is in\n\n\n    if (document.compatMode == 'CSS1Compat' && document.documentElement && document.documentElement.offsetWidth) {\n      size.width = document.documentElement.offsetWidth;\n      size.height = document.documentElement.offsetHeight;\n      return size;\n    } // Earlier IE uses Doc.body\n\n\n    if (document.body && document.body.offsetWidth) {\n      size.width = document.body.offsetWidth;\n      size.height = document.body.offsetHeight;\n      return size;\n    }\n\n    return size;\n  };\n  /* handle dumb browser quirks...  isinstance breaks if you use frames\n  typeof returns 'object' for null, NaN is a number, etc.\n   */\n\n\n  nv.utils.isArray = Array.isArray;\n\n  nv.utils.isObject = function (a) {\n    return a !== null && typeof a === 'object';\n  };\n\n  nv.utils.isFunction = function (a) {\n    return typeof a === 'function';\n  };\n\n  nv.utils.isDate = function (a) {\n    return toString.call(a) === '[object Date]';\n  };\n\n  nv.utils.isNumber = function (a) {\n    return !isNaN(a) && typeof a === 'number';\n  };\n  /*\n  Binds callback function to run when window is resized\n   */\n\n\n  nv.utils.windowResize = function (handler) {\n    if (window.addEventListener) {\n      window.addEventListener('resize', handler);\n    } else {\n      nv.log(\"ERROR: Failed to bind to window.resize with: \", handler);\n    } // return object with clear function to remove the single added callback.\n\n\n    return {\n      callback: handler,\n      clear: function clear() {\n        window.removeEventListener('resize', handler);\n      }\n    };\n  };\n  /*\n  Backwards compatible way to implement more d3-like coloring of graphs.\n  Can take in nothing, an array, or a function/scale\n  To use a normal scale, get the range and pass that because we must be able\n  to take two arguments and use the index to keep backward compatibility\n  */\n\n\n  nv.utils.getColor = function (color) {\n    //if you pass in nothing, get default colors back\n    if (color === undefined) {\n      return nv.utils.defaultColor(); //if passed an array, turn it into a color scale\n    } else if (nv.utils.isArray(color)) {\n      var color_scale = d3.scale.ordinal().range(color);\n      return function (d, i) {\n        var key = i === undefined ? d : i;\n        return d.color || color_scale(key);\n      }; //if passed a function or scale, return it, or whatever it may be\n      //external libs, such as angularjs-nvd3-directives use this\n    } else {\n      //can't really help it if someone passes rubbish as color\n      return color;\n    }\n  };\n  /*\n  Default color chooser uses a color scale of 20 colors from D3\n   https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors\n   */\n\n\n  nv.utils.defaultColor = function () {\n    // get range of the scale so we'll turn it into our own function.\n    return nv.utils.getColor(d3.scale.category20().range());\n  };\n  /*\n  Returns a color function that takes the result of 'getKey' for each series and\n  looks for a corresponding color from the dictionary\n  */\n\n\n  nv.utils.customTheme = function (dictionary, getKey, defaultColors) {\n    // use default series.key if getKey is undefined\n    getKey = getKey || function (series) {\n      return series.key;\n    };\n\n    defaultColors = defaultColors || d3.scale.category20().range(); // start at end of default color list and walk back to index 0\n\n    var defIndex = defaultColors.length;\n    return function (series, index) {\n      var key = getKey(series);\n\n      if (nv.utils.isFunction(dictionary[key])) {\n        return dictionary[key]();\n      } else if (dictionary[key] !== undefined) {\n        return dictionary[key];\n      } else {\n        // no match in dictionary, use a default color\n        if (!defIndex) {\n          // used all the default colors, start over\n          defIndex = defaultColors.length;\n        }\n\n        defIndex = defIndex - 1;\n        return defaultColors[defIndex];\n      }\n    };\n  };\n  /*\n  From the PJAX example on d3js.org, while this is not really directly needed\n  it's a very cool method for doing pjax, I may expand upon it a little bit,\n  open to suggestions on anything that may be useful\n  */\n\n\n  nv.utils.pjax = function (links, content) {\n    var load = function load(href) {\n      d3.html(href, function (fragment) {\n        var target = d3.select(content).node();\n        target.parentNode.replaceChild(d3.select(fragment).select(content).node(), target);\n        nv.utils.pjax(links, content);\n      });\n    };\n\n    d3.selectAll(links).on(\"click\", function () {\n      history.pushState(this.href, this.textContent, this.href);\n      load(this.href);\n      d3.event.preventDefault();\n    });\n    d3.select(window).on(\"popstate\", function () {\n      if (d3.event.state) {\n        load(d3.event.state);\n      }\n    });\n  };\n  /*\n  For when we want to approximate the width in pixels for an SVG:text element.\n  Most common instance is when the element is in a display:none; container.\n  Forumla is : text.length * font-size * constant_factor\n  */\n\n\n  nv.utils.calcApproxTextWidth = function (svgTextElem) {\n    if (nv.utils.isFunction(svgTextElem.style) && nv.utils.isFunction(svgTextElem.text)) {\n      var fontSize = parseInt(svgTextElem.style(\"font-size\").replace(\"px\", \"\"), 10);\n      var textLength = svgTextElem.text().length;\n      return nv.utils.NaNtoZero(textLength * fontSize * 0.5);\n    }\n\n    return 0;\n  };\n  /*\n  Numbers that are undefined, null or NaN, convert them to zeros.\n  */\n\n\n  nv.utils.NaNtoZero = function (n) {\n    if (!nv.utils.isNumber(n) || isNaN(n) || n === null || n === Infinity || n === -Infinity) {\n      return 0;\n    }\n\n    return n;\n  };\n  /*\n  Add a way to watch for d3 transition ends to d3\n  */\n\n\n  d3.selection.prototype.watchTransition = function (renderWatch) {\n    var args = [this].concat([].slice.call(arguments, 1));\n    return renderWatch.transition.apply(renderWatch, args);\n  };\n  /*\n  Helper object to watch when d3 has rendered something\n  */\n\n\n  nv.utils.renderWatch = function (dispatch, duration) {\n    if (!(this instanceof nv.utils.renderWatch)) {\n      return new nv.utils.renderWatch(dispatch, duration);\n    }\n\n    var _duration = duration !== undefined ? duration : 250;\n\n    var renderStack = [];\n    var self = this;\n\n    this.models = function (models) {\n      models = [].slice.call(arguments, 0);\n      models.forEach(function (model) {\n        model.__rendered = false;\n\n        (function (m) {\n          m.dispatch.on('renderEnd', function (arg) {\n            m.__rendered = true;\n            self.renderEnd('model');\n          });\n        })(model);\n\n        if (renderStack.indexOf(model) < 0) {\n          renderStack.push(model);\n        }\n      });\n      return this;\n    };\n\n    this.reset = function (duration) {\n      if (duration !== undefined) {\n        _duration = duration;\n      }\n\n      renderStack = [];\n    };\n\n    this.transition = function (selection, args, duration) {\n      args = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n\n      if (args.length > 1) {\n        duration = args.pop();\n      } else {\n        duration = _duration !== undefined ? _duration : 250;\n      }\n\n      selection.__rendered = false;\n\n      if (renderStack.indexOf(selection) < 0) {\n        renderStack.push(selection);\n      }\n\n      if (duration === 0) {\n        selection.__rendered = true;\n\n        selection.delay = function () {\n          return this;\n        };\n\n        selection.duration = function () {\n          return this;\n        };\n\n        return selection;\n      } else {\n        if (selection.length === 0) {\n          selection.__rendered = true;\n        } else if (selection.every(function (d) {\n          return !d.length;\n        })) {\n          selection.__rendered = true;\n        } else {\n          selection.__rendered = false;\n        }\n\n        var n = 0;\n        return selection.transition().duration(duration).each(function () {\n          ++n;\n        }).each('end', function (d, i) {\n          if (--n === 0) {\n            selection.__rendered = true;\n            self.renderEnd.apply(this, args);\n          }\n        });\n      }\n    };\n\n    this.renderEnd = function () {\n      if (renderStack.every(function (d) {\n        return d.__rendered;\n      })) {\n        renderStack.forEach(function (d) {\n          d.__rendered = false;\n        });\n        dispatch.renderEnd.apply(this, arguments);\n      }\n    };\n  };\n  /*\n  Takes multiple objects and combines them into the first one (dst)\n  example:  nv.utils.deepExtend({a: 1}, {a: 2, b: 3}, {c: 4});\n  gives:  {a: 2, b: 3, c: 4}\n  */\n\n\n  nv.utils.deepExtend = function (dst) {\n    var sources = arguments.length > 1 ? [].slice.call(arguments, 1) : [];\n    sources.forEach(function (source) {\n      for (var key in source) {\n        var isArray = nv.utils.isArray(dst[key]);\n        var isObject = nv.utils.isObject(dst[key]);\n        var srcObj = nv.utils.isObject(source[key]);\n\n        if (isObject && !isArray && srcObj) {\n          nv.utils.deepExtend(dst[key], source[key]);\n        } else {\n          dst[key] = source[key];\n        }\n      }\n    });\n  };\n  /*\n  state utility object, used to track d3 states in the models\n  */\n\n\n  nv.utils.state = function () {\n    if (!(this instanceof nv.utils.state)) {\n      return new nv.utils.state();\n    }\n\n    var state = {};\n\n    var _self = this;\n\n    var _setState = function _setState() {};\n\n    var _getState = function _getState() {\n      return {};\n    };\n\n    var init = null;\n    var changed = null;\n    this.dispatch = d3.dispatch('change', 'set');\n    this.dispatch.on('set', function (state) {\n      _setState(state, true);\n    });\n\n    this.getter = function (fn) {\n      _getState = fn;\n      return this;\n    };\n\n    this.setter = function (fn, callback) {\n      if (!callback) {\n        callback = function callback() {};\n      }\n\n      _setState = function _setState(state, update) {\n        fn(state);\n\n        if (update) {\n          callback();\n        }\n      };\n\n      return this;\n    };\n\n    this.init = function (state) {\n      init = init || {};\n      nv.utils.deepExtend(init, state);\n    };\n\n    var _set = function _set() {\n      var settings = _getState();\n\n      if (JSON.stringify(settings) === JSON.stringify(state)) {\n        return false;\n      }\n\n      for (var key in settings) {\n        if (state[key] === undefined) {\n          state[key] = {};\n        }\n\n        state[key] = settings[key];\n        changed = true;\n      }\n\n      return true;\n    };\n\n    this.update = function () {\n      if (init) {\n        _setState(init, false);\n\n        init = null;\n      }\n\n      if (_set.call(this)) {\n        this.dispatch.change(state);\n      }\n    };\n  };\n  /*\n  Snippet of code you can insert into each nv.models.* to give you the ability to\n  do things like:\n  chart.options({\n    showXAxis: true,\n    tooltips: true\n  });\n  \n  To enable in the chart:\n  chart.options = nv.utils.optionsFunc.bind(chart);\n  */\n\n\n  nv.utils.optionsFunc = function (args) {\n    if (args) {\n      d3.map(args).forEach(function (key, value) {\n        if (nv.utils.isFunction(this[key])) {\n          this[key](value);\n        }\n      }.bind(this));\n    }\n\n    return this;\n  };\n  /*\n  numTicks:  requested number of ticks\n  data:  the chart data\n  \n  returns the number of ticks to actually use on X axis, based on chart data\n  to avoid duplicate ticks with the same value\n  */\n\n\n  nv.utils.calcTicksX = function (numTicks, data) {\n    // find max number of values from all data streams\n    var numValues = 1;\n    var i = 0;\n\n    for (i; i < data.length; i += 1) {\n      var stream_len = data[i] && data[i].values ? data[i].values.length : 0;\n      numValues = stream_len > numValues ? stream_len : numValues;\n    }\n\n    nv.log(\"Requested number of ticks: \", numTicks);\n    nv.log(\"Calculated max values to be: \", numValues); // make sure we don't have more ticks than values to avoid duplicates\n\n    numTicks = numTicks > numValues ? numTicks = numValues - 1 : numTicks; // make sure we have at least one tick\n\n    numTicks = numTicks < 1 ? 1 : numTicks; // make sure it's an integer\n\n    numTicks = Math.floor(numTicks);\n    nv.log(\"Calculating tick count as: \", numTicks);\n    return numTicks;\n  };\n  /*\n  returns number of ticks to actually use on Y axis, based on chart data\n  */\n\n\n  nv.utils.calcTicksY = function (numTicks, data) {\n    // currently uses the same logic but we can adjust here if needed later\n    return nv.utils.calcTicksX(numTicks, data);\n  };\n  /*\n  Add a particular option from an options object onto chart\n  Options exposed on a chart are a getter/setter function that returns chart\n  on set to mimic typical d3 option chaining, e.g. svg.option1('a').option2('b');\n  \n  option objects should be generated via Object.create() to provide\n  the option of manipulating data via get/set functions.\n  */\n\n\n  nv.utils.initOption = function (chart, name) {\n    // if it's a call option, just call it directly, otherwise do get/set\n    if (chart._calls && chart._calls[name]) {\n      chart[name] = chart._calls[name];\n    } else {\n      chart[name] = function (_) {\n        if (!arguments.length) return chart._options[name];\n        chart._overrides[name] = true;\n        chart._options[name] = _;\n        return chart;\n      }; // calling the option as _option will ignore if set by option already\n      // so nvd3 can set options internally but the stop if set manually\n\n\n      chart['_' + name] = function (_) {\n        if (!arguments.length) return chart._options[name];\n\n        if (!chart._overrides[name]) {\n          chart._options[name] = _;\n        }\n\n        return chart;\n      };\n    }\n  };\n  /*\n  Add all options in an options object to the chart\n  */\n\n\n  nv.utils.initOptions = function (chart) {\n    chart._overrides = chart._overrides || {};\n    var ops = Object.getOwnPropertyNames(chart._options || {});\n    var calls = Object.getOwnPropertyNames(chart._calls || {});\n    ops = ops.concat(calls);\n\n    for (var i in ops) {\n      nv.utils.initOption(chart, ops[i]);\n    }\n  };\n  /*\n  Inherit options from a D3 object\n  d3.rebind makes calling the function on target actually call it on source\n  Also use _d3options so we can track what we inherit for documentation and chained inheritance\n  */\n\n\n  nv.utils.inheritOptionsD3 = function (target, d3_source, oplist) {\n    target._d3options = oplist.concat(target._d3options || []); // Find unique d3 options (string) and update d3options\n\n    target._d3options = (target._d3options || []).filter(function (item, i, ar) {\n      return ar.indexOf(item) === i;\n    });\n    oplist.unshift(d3_source);\n    oplist.unshift(target);\n    d3.rebind.apply(this, oplist);\n  };\n  /*\n  Remove duplicates from an array\n  */\n\n\n  nv.utils.arrayUnique = function (a) {\n    return a.sort().filter(function (item, pos) {\n      return !pos || item != a[pos - 1];\n    });\n  };\n  /*\n  Keeps a list of custom symbols to draw from in addition to d3.svg.symbol\n  Necessary since d3 doesn't let you extend its list -_-\n  Add new symbols by doing nv.utils.symbols.set('name', function(size){...});\n  */\n\n\n  nv.utils.symbolMap = d3.map();\n  /*\n  Replaces d3.svg.symbol so that we can look both there and our own map\n   */\n\n  nv.utils.symbol = function () {\n    var type,\n        size = 64;\n\n    function symbol(d, i) {\n      var t = type.call(this, d, i);\n      var s = size.call(this, d, i);\n\n      if (d3.svg.symbolTypes.indexOf(t) !== -1) {\n        return d3.svg.symbol().type(t).size(s)();\n      } else {\n        return nv.utils.symbolMap.get(t)(s);\n      }\n    }\n\n    symbol.type = function (_) {\n      if (!arguments.length) return type;\n      type = d3.functor(_);\n      return symbol;\n    };\n\n    symbol.size = function (_) {\n      if (!arguments.length) return size;\n      size = d3.functor(_);\n      return symbol;\n    };\n\n    return symbol;\n  };\n  /*\n  Inherit option getter/setter functions from source to target\n  d3.rebind makes calling the function on target actually call it on source\n  Also track via _inherited and _d3options so we can track what we inherit\n  for documentation generation purposes and chained inheritance\n  */\n\n\n  nv.utils.inheritOptions = function (target, source) {\n    // inherit all the things\n    var ops = Object.getOwnPropertyNames(source._options || {});\n    var calls = Object.getOwnPropertyNames(source._calls || {});\n    var inherited = source._inherited || [];\n    var d3ops = source._d3options || [];\n    var args = ops.concat(calls).concat(inherited).concat(d3ops);\n    args.unshift(source);\n    args.unshift(target);\n    d3.rebind.apply(this, args); // pass along the lists to keep track of them, don't allow duplicates\n\n    target._inherited = nv.utils.arrayUnique(ops.concat(calls).concat(inherited).concat(ops).concat(target._inherited || []));\n    target._d3options = nv.utils.arrayUnique(d3ops.concat(target._d3options || []));\n  };\n  /*\n  Runs common initialize code on the svg before the chart builds\n  */\n\n\n  nv.utils.initSVG = function (svg) {\n    svg.classed({\n      'nvd3-svg': true\n    });\n  };\n  /*\n  Sanitize and provide default for the container height.\n  */\n\n\n  nv.utils.sanitizeHeight = function (height, container) {\n    return height || parseInt(container.style('height'), 10) || 400;\n  };\n  /*\n  Sanitize and provide default for the container width.\n  */\n\n\n  nv.utils.sanitizeWidth = function (width, container) {\n    return width || parseInt(container.style('width'), 10) || 960;\n  };\n  /*\n  Calculate the available height for a chart.\n  */\n\n\n  nv.utils.availableHeight = function (height, container, margin) {\n    return Math.max(0, nv.utils.sanitizeHeight(height, container) - margin.top - margin.bottom);\n  };\n  /*\n  Calculate the available width for a chart.\n  */\n\n\n  nv.utils.availableWidth = function (width, container, margin) {\n    return Math.max(0, nv.utils.sanitizeWidth(width, container) - margin.left - margin.right);\n  };\n  /*\n  Clear any rendered chart components and display a chart's 'noData' message\n  */\n\n\n  nv.utils.noData = function (chart, container) {\n    var opt = chart.options(),\n        margin = opt.margin(),\n        noData = opt.noData(),\n        data = noData == null ? [\"No Data Available.\"] : [noData],\n        height = nv.utils.availableHeight(null, container, margin),\n        width = nv.utils.availableWidth(null, container, margin),\n        x = margin.left + width / 2,\n        y = margin.top + height / 2; //Remove any previously created chart components\n\n    container.selectAll('g').remove();\n    var noDataText = container.selectAll('.nv-noData').data(data);\n    noDataText.enter().append('text').attr('class', 'nvd3 nv-noData').attr('dy', '-.7em').style('text-anchor', 'middle');\n    noDataText.attr('x', x).attr('y', y).text(function (t) {\n      return t;\n    });\n  };\n  /*\n   Wrap long labels.\n   */\n\n\n  nv.utils.wrapTicks = function (text, width) {\n    text.each(function () {\n      var text = d3.select(this),\n          words = text.text().split(/\\s+/).reverse(),\n          word,\n          line = [],\n          lineNumber = 0,\n          lineHeight = 1.1,\n          y = text.attr(\"y\"),\n          dy = parseFloat(text.attr(\"dy\")),\n          tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n\n      while (word = words.pop()) {\n        line.push(word);\n        tspan.text(line.join(\" \"));\n\n        if (tspan.node().getComputedTextLength() > width) {\n          line.pop();\n          tspan.text(line.join(\" \"));\n          line = [word];\n          tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word);\n        }\n      }\n    });\n  };\n  /*\n  Check equality of 2 array\n  */\n\n\n  nv.utils.arrayEquals = function (array1, array2) {\n    if (array1 === array2) return true;\n    if (!array1 || !array2) return false; // compare lengths - can save a lot of time\n\n    if (array1.length != array2.length) return false;\n\n    for (var i = 0, l = array1.length; i < l; i++) {\n      // Check if we have nested arrays\n      if (array1[i] instanceof Array && array2[i] instanceof Array) {\n        // recurse into the nested arrays\n        if (!nv.arrayEquals(array1[i], array2[i])) return false;\n      } else if (array1[i] != array2[i]) {\n        // Warning - two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /*\n   Check if a point within an arc\n   */\n\n\n  nv.utils.pointIsInArc = function (pt, ptData, d3Arc) {\n    // Center of the arc is assumed to be 0,0\n    // (pt.x, pt.y) are assumed to be relative to the center\n    var r1 = d3Arc.innerRadius()(ptData),\n        // Note: Using the innerRadius\n    r2 = d3Arc.outerRadius()(ptData),\n        theta1 = d3Arc.startAngle()(ptData),\n        theta2 = d3Arc.endAngle()(ptData);\n    var dist = pt.x * pt.x + pt.y * pt.y,\n        angle = Math.atan2(pt.x, -pt.y); // Note: different coordinate system.\n\n    angle = angle < 0 ? angle + Math.PI * 2 : angle;\n    return r1 * r1 <= dist && dist <= r2 * r2 && theta1 <= angle && angle <= theta2;\n  };\n\n  nv.models.axis = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var axis = d3.svg.axis();\n    var scale = d3.scale.linear();\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 75 //only used for tickLabel currently\n    ,\n        height = 60 //only used for tickLabel currently\n    ,\n        axisLabelText = null,\n        showMaxMin = true //TODO: showMaxMin should be disabled on all ordinal scaled axes\n    ,\n        rotateLabels = 0,\n        rotateYLabel = true,\n        staggerLabels = false,\n        isOrdinal = false,\n        ticks = null,\n        axisLabelDistance = 0,\n        fontSize = undefined,\n        duration = 250,\n        dispatch = d3.dispatch('renderEnd'),\n        tickFormatMaxMin;\n    axis.scale(scale).orient('bottom').tickFormat(function (d) {\n      return d;\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-axis').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-axis');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        if (ticks !== null) axis.ticks(ticks);else if (axis.orient() == 'top' || axis.orient() == 'bottom') axis.ticks(Math.abs(scale.range()[1] - scale.range()[0]) / 100); //TODO: consider calculating width/height based on whether or not label is added, for reference in charts using this component\n\n        g.watchTransition(renderWatch, 'axis').call(axis);\n        scale0 = scale0 || axis.scale();\n        var fmt = axis.tickFormat();\n\n        if (fmt == null) {\n          fmt = scale0.tickFormat();\n        }\n\n        var axisLabel = g.selectAll('text.nv-axislabel').data([axisLabelText || null]);\n        axisLabel.exit().remove(); //only skip when fontSize is undefined so it can be cleared with a null or blank string\n\n        if (fontSize !== undefined) {\n          g.selectAll('g').select(\"text\").style('font-size', fontSize);\n        }\n\n        var xLabelMargin;\n        var axisMaxMin;\n        var w;\n\n        switch (axis.orient()) {\n          case 'top':\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            w = 0;\n\n            if (scale.range().length === 1) {\n              w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n            } else if (scale.range().length === 2) {\n              w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n            } else if (scale.range().length > 2) {\n              w = scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]);\n            }\n\n            ;\n            axisLabel.attr('text-anchor', 'middle').attr('y', 0).attr('x', w / 2);\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-x', i == 0 ? 'nv-axisMin-x' : 'nv-axisMax-x'].join(' ');\n              }).append('text');\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d)) + ',0)';\n              }).select('text').attr('dy', '-0.5em').attr('y', -axis.tickPadding()).attr('text-anchor', 'middle').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max top').attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale.range()[i]) + ',0)';\n              });\n            }\n\n            break;\n\n          case 'bottom':\n            xLabelMargin = axisLabelDistance + 36;\n            var maxTextWidth = 30;\n            var textHeight = 0;\n            var xTicks = g.selectAll('g').select(\"text\");\n            var rotateLabelsRule = '';\n\n            if (rotateLabels % 360) {\n              //Reset transform on ticks so textHeight can be calculated correctly\n              xTicks.attr('transform', ''); //Calculate the longest xTick width\n\n              xTicks.each(function (d, i) {\n                var box = this.getBoundingClientRect();\n                var width = box.width;\n                textHeight = box.height;\n                if (width > maxTextWidth) maxTextWidth = width;\n              });\n              rotateLabelsRule = 'rotate(' + rotateLabels + ' 0,' + (textHeight / 2 + axis.tickPadding()) + ')'; //Convert to radians before calculating sin. Add 30 to margin for healthy padding.\n\n              var sin = Math.abs(Math.sin(rotateLabels * Math.PI / 180));\n              xLabelMargin = (sin ? sin * maxTextWidth : maxTextWidth) + 30; //Rotate all xTicks\n\n              xTicks.attr('transform', rotateLabelsRule).style('text-anchor', rotateLabels % 360 > 0 ? 'start' : 'end');\n            } else {\n              if (staggerLabels) {\n                xTicks.attr('transform', function (d, i) {\n                  return 'translate(0,' + (i % 2 == 0 ? '0' : '12') + ')';\n                });\n              } else {\n                xTicks.attr('transform', \"translate(0,0)\");\n              }\n            }\n\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            w = 0;\n\n            if (scale.range().length === 1) {\n              w = isOrdinal ? scale.range()[0] * 2 + scale.rangeBand() : 0;\n            } else if (scale.range().length === 2) {\n              w = isOrdinal ? scale.range()[0] + scale.range()[1] + scale.rangeBand() : scale.range()[1];\n            } else if (scale.range().length > 2) {\n              w = scale.range()[scale.range().length - 1] + (scale.range()[1] - scale.range()[0]);\n            }\n\n            ;\n            axisLabel.attr('text-anchor', 'middle').attr('y', xLabelMargin).attr('x', w / 2);\n\n            if (showMaxMin) {\n              //if (showMaxMin && !isOrdinal) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin') //.data(scale.domain())\n              .data([scale.domain()[0], scale.domain()[scale.domain().length - 1]]);\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-x', i == 0 ? 'nv-axisMin-x' : 'nv-axisMax-x'].join(' ');\n              }).append('text');\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ',0)';\n              }).select('text').attr('dy', '.71em').attr('y', axis.tickPadding()).attr('transform', rotateLabelsRule).style('text-anchor', rotateLabels ? rotateLabels % 360 > 0 ? 'start' : 'end' : 'middle').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max bottom').attr('transform', function (d, i) {\n                return 'translate(' + nv.utils.NaNtoZero(scale(d) + (isOrdinal ? scale.rangeBand() / 2 : 0)) + ',0)';\n              });\n            }\n\n            break;\n\n          case 'right':\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            axisLabel.style('text-anchor', rotateYLabel ? 'middle' : 'begin').attr('transform', rotateYLabel ? 'rotate(90)' : '').attr('y', rotateYLabel ? -Math.max(margin.right, width) + 12 - (axisLabelDistance || 0) : -10) //TODO: consider calculating this based on largest tick width... OR at least expose this on chart\n            .attr('x', rotateYLabel ? d3.max(scale.range()) / 2 : axis.tickPadding());\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-y', i == 0 ? 'nv-axisMin-y' : 'nv-axisMax-y'].join(' ');\n              }).append('text').style('opacity', 0);\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale(d)) + ')';\n              }).select('text').attr('dy', '.32em').attr('y', 0).attr('x', axis.tickPadding()).style('text-anchor', 'start').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max right').attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')';\n              }).select('text').style('opacity', 1);\n            }\n\n            break;\n\n          case 'left':\n            /*\n             //For dynamically placing the label. Can be used with dynamically-sized chart axis margins\n             var yTicks = g.selectAll('g').select(\"text\");\n             yTicks.each(function(d,i){\n             var labelPadding = this.getBoundingClientRect().width + axis.tickPadding() + 16;\n             if(labelPadding > width) width = labelPadding;\n             });\n             */\n            axisLabel.enter().append('text').attr('class', 'nv-axislabel');\n            axisLabel.style('text-anchor', rotateYLabel ? 'middle' : 'end').attr('transform', rotateYLabel ? 'rotate(-90)' : '').attr('y', rotateYLabel ? -Math.max(margin.left, width) + 25 - (axisLabelDistance || 0) : -10).attr('x', rotateYLabel ? -d3.max(scale.range()) / 2 : -axis.tickPadding());\n\n            if (showMaxMin) {\n              axisMaxMin = wrap.selectAll('g.nv-axisMaxMin').data(scale.domain());\n              axisMaxMin.enter().append('g').attr('class', function (d, i) {\n                return ['nv-axisMaxMin', 'nv-axisMaxMin-y', i == 0 ? 'nv-axisMin-y' : 'nv-axisMax-y'].join(' ');\n              }).append('text').style('opacity', 0);\n              axisMaxMin.exit().remove();\n              axisMaxMin.attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale0(d)) + ')';\n              }).select('text').attr('dy', '.32em').attr('y', 0).attr('x', -axis.tickPadding()).attr('text-anchor', 'end').text(function (d, i) {\n                var formatter = tickFormatMaxMin || fmt;\n                var v = formatter(d);\n                return ('' + v).match('NaN') ? '' : v;\n              });\n              axisMaxMin.watchTransition(renderWatch, 'min-max right').attr('transform', function (d, i) {\n                return 'translate(0,' + nv.utils.NaNtoZero(scale.range()[i]) + ')';\n              }).select('text').style('opacity', 1);\n            }\n\n            break;\n        }\n\n        axisLabel.text(function (d) {\n          return d;\n        });\n\n        if (showMaxMin && (axis.orient() === 'left' || axis.orient() === 'right')) {\n          //check if max and min overlap other values, if so, hide the values that overlap\n          g.selectAll('g') // the g's wrapping each tick\n          .each(function (d, i) {\n            d3.select(this).select('text').attr('opacity', 1);\n\n            if (scale(d) < scale.range()[1] + 10 || scale(d) > scale.range()[0] - 10) {\n              // 10 is assuming text height is 16... if d is 0, leave it!\n              if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                d3.select(this).attr('opacity', 0);\n              d3.select(this).select('text').attr('opacity', 0); // Don't remove the ZERO line!!\n            }\n          }); //if Max and Min = 0 only show min, Issue #281\n\n          if (scale.domain()[0] == scale.domain()[1] && scale.domain()[0] == 0) {\n            wrap.selectAll('g.nv-axisMaxMin').style('opacity', function (d, i) {\n              return !i ? 1 : 0;\n            });\n          }\n        }\n\n        if (showMaxMin && (axis.orient() === 'top' || axis.orient() === 'bottom')) {\n          var maxMinRange = [];\n          wrap.selectAll('g.nv-axisMaxMin').each(function (d, i) {\n            try {\n              if (i) // i== 1, max position\n                maxMinRange.push(scale(d) - this.getBoundingClientRect().width - 4); //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n              else // i==0, min position\n                maxMinRange.push(scale(d) + this.getBoundingClientRect().width + 4);\n            } catch (err) {\n              if (i) // i== 1, max position\n                maxMinRange.push(scale(d) - 4); //assuming the max and min labels are as wide as the next tick (with an extra 4 pixels just in case)\n              else // i==0, min position\n                maxMinRange.push(scale(d) + 4);\n            }\n          }); // the g's wrapping each tick\n\n          g.selectAll('g').each(function (d, i) {\n            if (scale(d) < maxMinRange[0] || scale(d) > maxMinRange[1]) {\n              if (d > 1e-10 || d < -1e-10) // accounts for minor floating point errors... though could be problematic if the scale is EXTREMELY SMALL\n                d3.select(this).remove();else d3.select(this).select('text').remove(); // Don't remove the ZERO line!!\n            }\n          });\n        } //Highlight zero tick line\n\n\n        g.selectAll('.tick').filter(function (d) {\n          /*\n          The filter needs to return only ticks at or near zero.\n          Numbers like 0.00001 need to count as zero as well,\n          and the arithmetic trick below solves that.\n          */\n          return !parseFloat(Math.round(d * 100000) / 1000000) && d !== undefined;\n        }).classed('zero', true); //store old scales for use in transitions on update\n\n        scale0 = scale.copy();\n      });\n      renderWatch.renderEnd('axis immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.axis = axis;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      axisLabelDistance: {\n        get: function get() {\n          return axisLabelDistance;\n        },\n        set: function set(_) {\n          axisLabelDistance = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      rotateYLabel: {\n        get: function get() {\n          return rotateYLabel;\n        },\n        set: function set(_) {\n          rotateYLabel = _;\n        }\n      },\n      showMaxMin: {\n        get: function get() {\n          return showMaxMin;\n        },\n        set: function set(_) {\n          showMaxMin = _;\n        }\n      },\n      axisLabel: {\n        get: function get() {\n          return axisLabelText;\n        },\n        set: function set(_) {\n          axisLabelText = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      ticks: {\n        get: function get() {\n          return ticks;\n        },\n        set: function set(_) {\n          ticks = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      fontSize: {\n        get: function get() {\n          return fontSize;\n        },\n        set: function set(_) {\n          fontSize = _;\n        }\n      },\n      tickFormatMaxMin: {\n        get: function get() {\n          return tickFormatMaxMin;\n        },\n        set: function set(_) {\n          tickFormatMaxMin = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      scale: {\n        get: function get() {\n          return scale;\n        },\n        set: function set(_) {\n          scale = _;\n          axis.scale(scale);\n          isOrdinal = typeof scale.rangeBands === 'function';\n          nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    nv.utils.inheritOptionsD3(chart, axis, ['orient', 'tickValues', 'tickSubdivide', 'tickSize', 'tickPadding', 'tickFormat']);\n    nv.utils.inheritOptionsD3(chart, scale, ['domain', 'range', 'rangeBand', 'rangeBands']);\n    return chart;\n  };\n\n  nv.models.boxPlot = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000),\n        // Create semi-unique ID in case user doesn't select one\n    xScale = d3.scale.ordinal(),\n        yScale = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.label;\n    },\n        // Default data model selectors.\n    getQ1 = function getQ1(d) {\n      return d.values.Q1;\n    },\n        getQ2 = function getQ2(d) {\n      return d.values.Q2;\n    },\n        getQ3 = function getQ3(d) {\n      return d.values.Q3;\n    },\n        getWl = function getWl(d) {\n      return d.values.whisker_low;\n    },\n        getWh = function getWh(d) {\n      return d.values.whisker_high;\n    },\n        getColor = function getColor(d) {\n      return d.color;\n    },\n        getOlItems = function getOlItems(d) {\n      return d.values.outliers;\n    },\n        getOlValue = function getOlValue(d, i, j) {\n      return d;\n    },\n        getOlLabel = function getOlLabel(d, i, j) {\n      return d;\n    },\n        getOlColor = function getOlColor(d, i, j) {\n      return undefined;\n    },\n        color = nv.utils.defaultColor(),\n        container = null,\n        xDomain,\n        xRange,\n        yDomain,\n        yRange,\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        duration = 250,\n        maxBoxWidth = null; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var xScale0, yScale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        xScale.domain(xDomain || data.map(function (d, i) {\n          return getX(d, i);\n        })).rangeBands(xRange || [0, availableWidth], 0.1); // if we know yDomain, no need to calculate\n\n        var yData = [];\n\n        if (!yDomain) {\n          // (y-range is based on quartiles, whiskers and outliers)\n          var values = [],\n              yMin,\n              yMax;\n          data.forEach(function (d, i) {\n            var q1 = getQ1(d),\n                q3 = getQ3(d),\n                wl = getWl(d),\n                wh = getWh(d);\n            var olItems = getOlItems(d);\n\n            if (olItems) {\n              olItems.forEach(function (e, i) {\n                values.push(getOlValue(e, i, undefined));\n              });\n            }\n\n            if (wl) {\n              values.push(wl);\n            }\n\n            if (q1) {\n              values.push(q1);\n            }\n\n            if (q3) {\n              values.push(q3);\n            }\n\n            if (wh) {\n              values.push(wh);\n            }\n          });\n          yMin = d3.min(values);\n          yMax = d3.max(values);\n          yData = [yMin, yMax];\n        }\n\n        yScale.domain(yDomain || yData);\n        yScale.range(yRange || [availableHeight, 0]); //store old scales if they exist\n\n        xScale0 = xScale0 || xScale;\n        yScale0 = yScale0 || yScale.copy().range([yScale(0), yScale(0)]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var boxplots = wrap.selectAll('.nv-boxplot').data(function (d) {\n          return d;\n        });\n        var boxEnter = boxplots.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        boxplots.attr('class', 'nv-boxplot').attr('transform', function (d, i, j) {\n          return 'translate(' + (xScale(getX(d, i)) + xScale.rangeBand() * 0.05) + ', 0)';\n        }).classed('hover', function (d) {\n          return d.hover;\n        });\n        boxplots.watchTransition(renderWatch, 'nv-boxplot: boxplots').style('stroke-opacity', 1).style('fill-opacity', 0.75).delay(function (d, i) {\n          return i * duration / data.length;\n        }).attr('transform', function (d, i) {\n          return 'translate(' + (xScale(getX(d, i)) + xScale.rangeBand() * 0.05) + ', 0)';\n        });\n        boxplots.exit().remove(); // ----- add the SVG elements for each boxPlot -----\n        // conditionally append whisker lines\n\n        boxEnter.each(function (d, i) {\n          var box = d3.select(this);\n          [getWl, getWh].forEach(function (f) {\n            if (f(d) !== undefined && f(d) !== null) {\n              var key = f === getWl ? 'low' : 'high';\n              box.append('line').style('stroke', getColor(d) || color(d, i)).attr('class', 'nv-boxplot-whisker nv-boxplot-' + key);\n              box.append('line').style('stroke', getColor(d) || color(d, i)).attr('class', 'nv-boxplot-tick nv-boxplot-' + key);\n            }\n          });\n        });\n\n        var box_width = function box_width() {\n          return maxBoxWidth === null ? xScale.rangeBand() * 0.9 : Math.min(75, xScale.rangeBand() * 0.9);\n        };\n\n        var box_left = function box_left() {\n          return xScale.rangeBand() * 0.45 - box_width() / 2;\n        };\n\n        var box_right = function box_right() {\n          return xScale.rangeBand() * 0.45 + box_width() / 2;\n        }; // update whisker lines and ticks\n\n\n        [getWl, getWh].forEach(function (f) {\n          var key = f === getWl ? 'low' : 'high';\n          var endpoint = f === getWl ? getQ1 : getQ3;\n          boxplots.select('line.nv-boxplot-whisker.nv-boxplot-' + key).watchTransition(renderWatch, 'nv-boxplot: boxplots').attr('x1', xScale.rangeBand() * 0.45).attr('y1', function (d, i) {\n            return yScale(f(d));\n          }).attr('x2', xScale.rangeBand() * 0.45).attr('y2', function (d, i) {\n            return yScale(endpoint(d));\n          });\n          boxplots.select('line.nv-boxplot-tick.nv-boxplot-' + key).watchTransition(renderWatch, 'nv-boxplot: boxplots').attr('x1', box_left).attr('y1', function (d, i) {\n            return yScale(f(d));\n          }).attr('x2', box_right).attr('y2', function (d, i) {\n            return yScale(f(d));\n          });\n        });\n        [getWl, getWh].forEach(function (f) {\n          var key = f === getWl ? 'low' : 'high';\n          boxEnter.selectAll('.nv-boxplot-' + key).on('mouseover', function (d, i, j) {\n            d3.select(this).classed('hover', true);\n            dispatch.elementMouseover({\n              series: {\n                key: f(d),\n                color: getColor(d) || color(d, j)\n              },\n              e: d3.event\n            });\n          }).on('mouseout', function (d, i, j) {\n            d3.select(this).classed('hover', false);\n            dispatch.elementMouseout({\n              series: {\n                key: f(d),\n                color: getColor(d) || color(d, j)\n              },\n              e: d3.event\n            });\n          }).on('mousemove', function (d, i) {\n            dispatch.elementMousemove({\n              e: d3.event\n            });\n          });\n        }); // boxes\n\n        boxEnter.append('rect').attr('class', 'nv-boxplot-box') // tooltip events\n        .on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            key: getX(d),\n            value: getX(d),\n            series: [{\n              key: 'Q3',\n              value: getQ3(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q2',\n              value: getQ2(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q1',\n              value: getQ1(d),\n              color: getColor(d) || color(d, i)\n            }],\n            data: d,\n            index: i,\n            e: d3.event\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            key: getX(d),\n            value: getX(d),\n            series: [{\n              key: 'Q3',\n              value: getQ3(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q2',\n              value: getQ2(d),\n              color: getColor(d) || color(d, i)\n            }, {\n              key: 'Q1',\n              value: getQ1(d),\n              color: getColor(d) || color(d, i)\n            }],\n            data: d,\n            index: i,\n            e: d3.event\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            e: d3.event\n          });\n        }); // box transitions\n\n        boxplots.select('rect.nv-boxplot-box').watchTransition(renderWatch, 'nv-boxplot: boxes').attr('y', function (d, i) {\n          return yScale(getQ3(d));\n        }).attr('width', box_width).attr('x', box_left).attr('height', function (d, i) {\n          return Math.abs(yScale(getQ3(d)) - yScale(getQ1(d))) || 1;\n        }).style('fill', function (d, i) {\n          return getColor(d) || color(d, i);\n        }).style('stroke', function (d, i) {\n          return getColor(d) || color(d, i);\n        }); // median line\n\n        boxEnter.append('line').attr('class', 'nv-boxplot-median');\n        boxplots.select('line.nv-boxplot-median').watchTransition(renderWatch, 'nv-boxplot: boxplots line').attr('x1', box_left).attr('y1', function (d, i) {\n          return yScale(getQ2(d));\n        }).attr('x2', box_right).attr('y2', function (d, i) {\n          return yScale(getQ2(d));\n        }); // outliers\n\n        var outliers = boxplots.selectAll('.nv-boxplot-outlier').data(function (d) {\n          return getOlItems(d) || [];\n        });\n        outliers.enter().append('circle').style('fill', function (d, i, j) {\n          return getOlColor(d, i, j) || color(d, j);\n        }).style('stroke', function (d, i, j) {\n          return getOlColor(d, i, j) || color(d, j);\n        }).style('z-index', 9000).on('mouseover', function (d, i, j) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            series: {\n              key: getOlLabel(d, i, j),\n              color: getOlColor(d, i, j) || color(d, j)\n            },\n            e: d3.event\n          });\n        }).on('mouseout', function (d, i, j) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            series: {\n              key: getOlLabel(d, i, j),\n              color: getOlColor(d, i, j) || color(d, j)\n            },\n            e: d3.event\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            e: d3.event\n          });\n        });\n        outliers.attr('class', 'nv-boxplot-outlier');\n        outliers.watchTransition(renderWatch, 'nv-boxplot: nv-boxplot-outlier').attr('cx', xScale.rangeBand() * 0.45).attr('cy', function (d, i, j) {\n          return yScale(getOlValue(d, i, j));\n        }).attr('r', '3');\n        outliers.exit().remove(); //store old scales for use in transitions on update\n\n        xScale0 = xScale.copy();\n        yScale0 = yScale.copy();\n      });\n      renderWatch.renderEnd('nv-boxplot immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      maxBoxWidth: {\n        get: function get() {\n          return maxBoxWidth;\n        },\n        set: function set(_) {\n          maxBoxWidth = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      q1: {\n        get: function get() {\n          return getQ1;\n        },\n        set: function set(_) {\n          getQ1 = _;\n        }\n      },\n      q2: {\n        get: function get() {\n          return getQ2;\n        },\n        set: function set(_) {\n          getQ2 = _;\n        }\n      },\n      q3: {\n        get: function get() {\n          return getQ3;\n        },\n        set: function set(_) {\n          getQ3 = _;\n        }\n      },\n      wl: {\n        get: function get() {\n          return getWl;\n        },\n        set: function set(_) {\n          getWl = _;\n        }\n      },\n      wh: {\n        get: function get() {\n          return getWh;\n        },\n        set: function set(_) {\n          getWh = _;\n        }\n      },\n      itemColor: {\n        get: function get() {\n          return getColor;\n        },\n        set: function set(_) {\n          getColor = _;\n        }\n      },\n      outliers: {\n        get: function get() {\n          return getOlItems;\n        },\n        set: function set(_) {\n          getOlItems = _;\n        }\n      },\n      outlierValue: {\n        get: function get() {\n          return getOlValue;\n        },\n        set: function set(_) {\n          getOlValue = _;\n        }\n      },\n      outlierLabel: {\n        get: function get() {\n          return getOlLabel;\n        },\n        set: function set(_) {\n          getOlLabel = _;\n        }\n      },\n      outlierColor: {\n        get: function get() {\n          return getOlColor;\n        },\n        set: function set(_) {\n          getOlColor = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return xScale;\n        },\n        set: function set(_) {\n          xScale = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return yScale;\n        },\n        set: function set(_) {\n          yScale = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      // rectClass: {get: function(){return rectClass;}, set: function(_){rectClass=_;}},\n      y: {\n        get: function get() {\n          console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n          return {};\n        },\n        set: function set(_) {\n          console.warn('BoxPlot \\'y\\' chart option is deprecated. Please use model overrides instead.');\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.boxPlotChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var boxplot = nv.models.boxPlot(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis();\n    var margin = {\n      top: 15,\n      right: 10,\n      bottom: 50,\n      left: 60\n    },\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        tooltip = nv.models.tooltip(),\n        x,\n        y,\n        noData = 'No Data Available.',\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n    xAxis.orient('bottom').showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(boxplot);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = (width || parseInt(container.style('width')) || 960) - margin.left - margin.right;\n        var availableHeight = (height || parseInt(container.style('height')) || 400) - margin.top - margin.bottom;\n\n        chart.update = function () {\n          dispatch.beforeUpdate();\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this; // TODO still need to find a way to validate quartile data presence using boxPlot callbacks.\n        // Display No Data message if there's nothing to show. (quartiles required at minimum).\n\n        if (!data || !data.length) {\n          var noDataText = container.selectAll('.nv-noData').data([noData]);\n          noDataText.enter().append('text').attr('class', 'nvd3 nv-noData').attr('dy', '-.7em').style('text-anchor', 'middle');\n          noDataText.attr('x', margin.left + availableWidth / 2).attr('y', margin.top + availableHeight / 2).text(function (d) {\n            return d;\n          });\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = boxplot.xScale();\n        y = boxplot.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-boxPlotWithAxes').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-boxPlotWithAxes').append('g');\n        var defsEnter = gEnter.append('defs');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select('.nv-y.nv-axis').attr('transform', 'translate(' + availableWidth + ',0)');\n        } // Main Chart Component(s)\n\n\n        boxplot.width(availableWidth).height(availableHeight);\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(boxplot);\n        defsEnter.append('clipPath').attr('id', 'nv-x-label-clip-' + boxplot.id()).append('rect');\n        g.select('#nv-x-label-clip-' + boxplot.id() + ' rect').attr('width', x.rangeBand() * (staggerLabels ? 2 : 1)).attr('height', 16).attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2)); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x).ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n          if (staggerLabels) {\n            xTicks.selectAll('text').attr('transform', function (d, i, j) {\n              return 'translate(0,' + (j % 2 === 0 ? '5' : '17') + ')';\n            });\n          }\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y).ticks(Math.floor(availableHeight / 36)) // can't use nv.utils.calcTicksY with Object data\n          .tickSize(-availableWidth, 0);\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select('.nv-zeroLine line').attr('x1', 0).attr('x2', availableWidth).attr('y1', y(0)).attr('y2', y(0)); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n      });\n      renderWatch.renderEnd('nv-boxplot chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    boxplot.dispatch.on('elementMouseover.tooltip', function (evt) {\n      tooltip.data(evt).hidden(false);\n    });\n    boxplot.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.data(evt).hidden(true);\n    });\n    boxplot.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.boxplot = boxplot;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      tooltipContent: {\n        get: function get() {\n          return tooltip;\n        },\n        set: function set(_) {\n          tooltip = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          boxplot.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          boxplot.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, boxplot);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Chart design based on the recommendations of Stephen Few. Implementation\n  // based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n  // http://projects.instantcognition.com/protovis/bulletchart/\n\n\n  nv.models.bullet = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        orient = 'left' // TODO top & bottom\n    ,\n        reverse = false,\n        ranges = function ranges(d) {\n      return d.ranges;\n    },\n        markers = function markers(d) {\n      return d.markers ? d.markers : [];\n    },\n        markerLines = function markerLines(d) {\n      return d.markerLines ? d.markerLines : [0];\n    },\n        measures = function measures(d) {\n      return d.measures;\n    },\n        rangeLabels = function rangeLabels(d) {\n      return d.rangeLabels ? d.rangeLabels : [];\n    },\n        markerLabels = function markerLabels(d) {\n      return d.markerLabels ? d.markerLabels : [];\n    },\n        markerLineLabels = function markerLineLabels(d) {\n      return d.markerLineLabels ? d.markerLineLabels : [];\n    },\n        measureLabels = function measureLabels(d) {\n      return d.measureLabels ? d.measureLabels : [];\n    },\n        forceX = [0] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n    ,\n        width = 380,\n        height = 30,\n        container = null,\n        tickFormat = null,\n        color = nv.utils.getColor(['#1f77b4']),\n        dispatch = d3.dispatch('elementMouseover', 'elementMouseout', 'elementMousemove'),\n        defaultRangeLabels = [\"Maximum\", \"Mean\", \"Minimum\"],\n        legacyRangeClassNames = [\"Max\", \"Avg\", \"Min\"],\n        duration = 1000;\n\n    function sortLabels(labels, values) {\n      var lz = labels.slice();\n      labels.sort(function (a, b) {\n        var iA = lz.indexOf(a);\n        var iB = lz.indexOf(b);\n        return d3.descending(values[iA], values[iB]);\n      });\n    }\n\n    ;\n\n    function chart(selection) {\n      selection.each(function (d, i) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var rangez = ranges.call(this, d, i).slice(),\n            markerz = markers.call(this, d, i).slice(),\n            markerLinez = markerLines.call(this, d, i).slice(),\n            measurez = measures.call(this, d, i).slice(),\n            rangeLabelz = rangeLabels.call(this, d, i).slice(),\n            markerLabelz = markerLabels.call(this, d, i).slice(),\n            markerLineLabelz = markerLineLabels.call(this, d, i).slice(),\n            measureLabelz = measureLabels.call(this, d, i).slice(); // Sort labels according to their sorted values\n\n        sortLabels(rangeLabelz, rangez);\n        sortLabels(markerLabelz, markerz);\n        sortLabels(markerLineLabelz, markerLinez);\n        sortLabels(measureLabelz, measurez); // sort values descending\n\n        rangez.sort(d3.descending);\n        markerz.sort(d3.descending);\n        markerLinez.sort(d3.descending);\n        measurez.sort(d3.descending); // Setup Scales\n        // Compute the new x-scale.\n\n        var x1 = d3.scale.linear().domain(d3.extent(d3.merge([forceX, rangez]))).range(reverse ? [availableWidth, 0] : [0, availableWidth]); // Retrieve the old x-scale, if this is an update.\n\n        var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); // Stash the new scale.\n\n        this.__chart__ = x1;\n        var rangeMin = d3.min(rangez),\n            //rangez[2]\n        rangeMax = d3.max(rangez),\n            //rangez[0]\n        rangeAvg = rangez[1]; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-bullet').data([d]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bullet');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n\n        for (var i = 0, il = rangez.length; i < il; i++) {\n          var rangeClassNames = 'nv-range nv-range' + i;\n\n          if (i <= 2) {\n            rangeClassNames = rangeClassNames + ' nv-range' + legacyRangeClassNames[i];\n          }\n\n          gEnter.append('rect').attr('class', rangeClassNames);\n        }\n\n        gEnter.append('rect').attr('class', 'nv-measure');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        var w0 = function w0(d) {\n          return Math.abs(x0(d) - x0(0));\n        },\n            // TODO: could optimize by precalculating x0(0) and x1(0)\n        w1 = function w1(d) {\n          return Math.abs(x1(d) - x1(0));\n        };\n\n        var xp0 = function xp0(d) {\n          return d < 0 ? x0(d) : x0(0);\n        },\n            xp1 = function xp1(d) {\n          return d < 0 ? x1(d) : x1(0);\n        };\n\n        for (var i = 0, il = rangez.length; i < il; i++) {\n          var range = rangez[i];\n          g.select('rect.nv-range' + i).datum(range).attr('height', availableHeight).transition().duration(duration).attr('width', w1(range)).attr('x', xp1(range));\n        }\n\n        g.select('rect.nv-measure').style('fill', color).attr('height', availableHeight / 3).attr('y', availableHeight / 3).on('mouseover', function () {\n          dispatch.elementMouseover({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function () {\n          dispatch.elementMousemove({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function () {\n          dispatch.elementMouseout({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Current',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).transition().duration(duration).attr('width', measurez < 0 ? x1(0) - x1(measurez[0]) : x1(measurez[0]) - x1(0)).attr('x', xp1(measurez));\n        var h3 = availableHeight / 6;\n        var markerData = markerz.map(function (marker, index) {\n          return {\n            value: marker,\n            label: markerLabelz[index]\n          };\n        });\n        gEnter.selectAll(\"path.nv-markerTriangle\").data(markerData).enter().append('path').attr('class', 'nv-markerTriangle').attr('d', 'M0,' + h3 + 'L' + h3 + ',' + -h3 + ' ' + -h3 + ',' + -h3 + 'Z').on('mouseover', function (d) {\n          dispatch.elementMouseover({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\"),\n            pos: [x1(d.value), availableHeight / 2]\n          });\n        }).on('mousemove', function (d) {\n          dispatch.elementMousemove({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        g.selectAll(\"path.nv-markerTriangle\").data(markerData).transition().duration(duration).attr('transform', function (d) {\n          return 'translate(' + x1(d.value) + ',' + availableHeight / 2 + ')';\n        });\n        var markerLinesData = markerLinez.map(function (marker, index) {\n          return {\n            value: marker,\n            label: markerLineLabelz[index]\n          };\n        });\n        gEnter.selectAll(\"line.nv-markerLine\").data(markerLinesData).enter().append('line').attr('cursor', '').attr('class', 'nv-markerLine').attr('x1', function (d) {\n          return x1(d.value);\n        }).attr('y1', '2').attr('x2', function (d) {\n          return x1(d.value);\n        }).attr('y2', availableHeight - 2).on('mouseover', function (d) {\n          dispatch.elementMouseover({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\"),\n            pos: [x1(d.value), availableHeight / 2]\n          });\n        }).on('mousemove', function (d) {\n          dispatch.elementMousemove({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            value: d.value,\n            label: d.label || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        g.selectAll(\"line.nv-markerLine\").data(markerLinesData).transition().duration(duration).attr('x1', function (d) {\n          return x1(d.value);\n        }).attr('x2', function (d) {\n          return x1(d.value);\n        });\n        wrap.selectAll('.nv-range').on('mouseover', function (d, i) {\n          var label = rangeLabelz[i] || defaultRangeLabels[i];\n          dispatch.elementMouseover({\n            value: d,\n            label: label,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function () {\n          dispatch.elementMousemove({\n            value: measurez[0],\n            label: measureLabelz[0] || 'Previous',\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          var label = rangeLabelz[i] || defaultRangeLabels[i];\n          dispatch.elementMouseout({\n            value: d,\n            label: label,\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      ranges: {\n        get: function get() {\n          return ranges;\n        },\n        set: function set(_) {\n          ranges = _;\n        }\n      },\n      // ranges (bad, satisfactory, good)\n      markers: {\n        get: function get() {\n          return markers;\n        },\n        set: function set(_) {\n          markers = _;\n        }\n      },\n      // markers (previous, goal)\n      measures: {\n        get: function get() {\n          return measures;\n        },\n        set: function set(_) {\n          measures = _;\n        }\n      },\n      // measures (actual, forecast)\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      tickFormat: {\n        get: function get() {\n          return tickFormat;\n        },\n        set: function set(_) {\n          tickFormat = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      orient: {\n        get: function get() {\n          return orient;\n        },\n        set: function set(_) {\n          // left, right, top, bottom\n          orient = _;\n          reverse = orient == 'right' || orient == 'bottom';\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Chart design based on the recommendations of Stephen Few. Implementation\n  // based on the work of Clint Ivy, Jamie Love, and Jason Davies.\n  // http://projects.instantcognition.com/protovis/bulletchart/\n\n\n  nv.models.bulletChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bullet = nv.models.bullet();\n    var tooltip = nv.models.tooltip();\n\n    var orient = 'left' // TODO top & bottom\n    ,\n        reverse = false,\n        margin = {\n      top: 5,\n      right: 40,\n      bottom: 20,\n      left: 120\n    },\n        ranges = function ranges(d) {\n      return d.ranges;\n    },\n        markers = function markers(d) {\n      return d.markers ? d.markers : [];\n    },\n        measures = function measures(d) {\n      return d.measures;\n    },\n        width = null,\n        height = 55,\n        tickFormat = null,\n        ticks = null,\n        noData = null,\n        dispatch = d3.dispatch();\n\n    tooltip.duration(0).headerEnabled(false);\n\n    function chart(selection) {\n      selection.each(function (d, i) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = height - margin.top - margin.bottom,\n            that = this;\n\n        chart.update = function () {\n          chart(selection);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!d || !ranges.call(this, d, i)) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var rangez = ranges.call(this, d, i).slice().sort(d3.descending),\n            markerz = markers.call(this, d, i).slice().sort(d3.descending),\n            measurez = measures.call(this, d, i).slice().sort(d3.descending); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-bulletChart').data([d]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-bulletChart');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-bulletWrap');\n        gEnter.append('g').attr('class', 'nv-titles');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Compute the new x-scale.\n\n        var x1 = d3.scale.linear().domain([0, Math.max(rangez[0], markerz[0] || 0, measurez[0])]) // TODO: need to allow forceX and forceY, and xDomain, yDomain\n        .range(reverse ? [availableWidth, 0] : [0, availableWidth]); // Retrieve the old x-scale, if this is an update.\n\n        var x0 = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(x1.range()); // Stash the new scale.\n\n        this.__chart__ = x1;\n\n        var w0 = function w0(d) {\n          return Math.abs(x0(d) - x0(0));\n        },\n            // TODO: could optimize by precalculating x0(0) and x1(0)\n        w1 = function w1(d) {\n          return Math.abs(x1(d) - x1(0));\n        };\n\n        var title = gEnter.select('.nv-titles').append('g').attr('text-anchor', 'end').attr('transform', 'translate(-6,' + (height - margin.top - margin.bottom) / 2 + ')');\n        title.append('text').attr('class', 'nv-title').text(function (d) {\n          return d.title;\n        });\n        title.append('text').attr('class', 'nv-subtitle').attr('dy', '1em').text(function (d) {\n          return d.subtitle;\n        });\n        bullet.width(availableWidth).height(availableHeight);\n        var bulletWrap = g.select('.nv-bulletWrap');\n        d3.transition(bulletWrap).call(bullet); // Compute the tick format.\n\n        var format = tickFormat || x1.tickFormat(availableWidth / 100); // Update the tick groups.\n\n        var tick = g.selectAll('g.nv-tick').data(x1.ticks(ticks ? ticks : availableWidth / 50), function (d) {\n          return this.textContent || format(d);\n        }); // Initialize the ticks with the old scale, x0.\n\n        var tickEnter = tick.enter().append('g').attr('class', 'nv-tick').attr('transform', function (d) {\n          return 'translate(' + x0(d) + ',0)';\n        }).style('opacity', 1e-6);\n        tickEnter.append('line').attr('y1', availableHeight).attr('y2', availableHeight * 7 / 6);\n        tickEnter.append('text').attr('text-anchor', 'middle').attr('dy', '1em').attr('y', availableHeight * 7 / 6).text(format); // Transition the updating ticks to the new scale, x1.\n\n        var tickUpdate = d3.transition(tick).transition().duration(bullet.duration()).attr('transform', function (d) {\n          return 'translate(' + x1(d) + ',0)';\n        }).style('opacity', 1);\n        tickUpdate.select('line').attr('y1', availableHeight).attr('y2', availableHeight * 7 / 6);\n        tickUpdate.select('text').attr('y', availableHeight * 7 / 6); // Transition the exiting ticks to the new scale, x1.\n\n        d3.transition(tick.exit()).transition().duration(bullet.duration()).attr('transform', function (d) {\n          return 'translate(' + x1(d) + ',0)';\n        }).style('opacity', 1e-6).remove();\n      });\n      d3.timer.flush();\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    bullet.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: evt.label,\n        value: evt.value,\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    bullet.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bullet.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.bullet = bullet;\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      ranges: {\n        get: function get() {\n          return ranges;\n        },\n        set: function set(_) {\n          ranges = _;\n        }\n      },\n      // ranges (bad, satisfactory, good)\n      markers: {\n        get: function get() {\n          return markers;\n        },\n        set: function set(_) {\n          markers = _;\n        }\n      },\n      // markers (previous, goal)\n      measures: {\n        get: function get() {\n          return measures;\n        },\n        set: function set(_) {\n          measures = _;\n        }\n      },\n      // measures (actual, forecast)\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      tickFormat: {\n        get: function get() {\n          return tickFormat;\n        },\n        set: function set(_) {\n          tickFormat = _;\n        }\n      },\n      ticks: {\n        get: function get() {\n          return ticks;\n        },\n        set: function set(_) {\n          ticks = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      orient: {\n        get: function get() {\n          return orient;\n        },\n        set: function set(_) {\n          // left, right, top, bottom\n          orient = _;\n          reverse = orient == 'right' || orient == 'bottom';\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, bullet);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.candlestickBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getOpen = function getOpen(d) {\n      return d.open;\n    },\n        getClose = function getClose(d) {\n      return d.close;\n    },\n        getHigh = function getHigh(d) {\n      return d.high;\n    },\n        getLow = function getLow(d) {\n      return d.low;\n    },\n        forceX = [],\n        forceY = [],\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        interactive = false,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Width of the candlestick bars.\n\n        var barWidth = availableWidth / data[0].values.length * .45; // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [5 + barWidth / 2, availableWidth - barWidth / 2 - 5]);\n        y.domain(yDomain || [d3.min(data[0].values.map(getLow).concat(forceY)), d3.max(data[0].values.map(getHigh).concat(forceY))]).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-candlestickBar').data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-candlestickBar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-ticks');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick').data(function (d) {\n          return d;\n        });\n        ticks.exit().remove();\n        var tickGroups = ticks.enter().append('g'); // The colors are currently controlled by CSS.\n\n        ticks.attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        });\n        var lines = tickGroups.append('line').attr('class', 'nv-candlestick-lines').attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        }).attr('x1', 0).attr('y1', function (d, i) {\n          return y(getHigh(d, i));\n        }).attr('x2', 0).attr('y2', function (d, i) {\n          return y(getLow(d, i));\n        });\n        var rects = tickGroups.append('rect').attr('class', 'nv-candlestick-rects nv-bars').attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - barWidth / 2) + ',' + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? y(getClose(d, i)) - y(getOpen(d, i)) : 0)) + ')';\n        }).attr('x', 0).attr('y', 0).attr('width', barWidth).attr('height', function (d, i) {\n          var open = getOpen(d, i);\n          var close = getClose(d, i);\n          return open > close ? y(close) - y(open) : y(open) - y(close);\n        });\n        ticks.select('.nv-candlestick-lines').transition().attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        }).attr('x1', 0).attr('y1', function (d, i) {\n          return y(getHigh(d, i));\n        }).attr('x2', 0).attr('y2', function (d, i) {\n          return y(getLow(d, i));\n        });\n        ticks.select('.nv-candlestick-rects').transition().attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - barWidth / 2) + ',' + (y(getY(d, i)) - (getOpen(d, i) > getClose(d, i) ? y(getClose(d, i)) - y(getOpen(d, i)) : 0)) + ')';\n        }).attr('x', 0).attr('y', 0).attr('width', barWidth).attr('height', function (d, i) {\n          var open = getOpen(d, i);\n          var close = getClose(d, i);\n          return open > close ? y(close) - y(open) : y(open) - y(close);\n        });\n      });\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      chart.clearHighlights();\n      container.select(\".nv-candlestickBar .nv-tick-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-candlestickBar .nv-tick.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      open: {\n        get: function get() {\n          return getOpen();\n        },\n        set: function set(_) {\n          getOpen = _;\n        }\n      },\n      close: {\n        get: function get() {\n          return getClose();\n        },\n        set: function set(_) {\n          getClose = _;\n        }\n      },\n      high: {\n        get: function get() {\n          return getHigh;\n        },\n        set: function set(_) {\n          getHigh = _;\n        }\n      },\n      low: {\n        get: function get() {\n          return getLow;\n        },\n        set: function set(_) {\n          getLow = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.cumulativeLineChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        showControls = true,\n        useInteractiveGuideline = false,\n        rescaleY = true,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        id = lines.id(),\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        average = function average(d) {\n      return d.average;\n    },\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        transitionDuration = 250,\n        duration = 250,\n        noErrorCheck = false //if set to TRUE, will bypass an error check in the indexify function.\n    ;\n\n    state.index = 0;\n    state.rescaleY = rescaleY;\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var dx = d3.scale.linear(),\n        index = {\n      i: 0,\n      x: 0\n    },\n        renderWatch = nv.utils.renderWatch(dispatch, duration),\n        currentYDomain;\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          index: index.i,\n          rescaleY: rescaleY\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.index !== undefined) index.i = state.index;\n        if (state.rescaleY !== undefined) rescaleY = state.rescaleY;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(lines);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        container.classed('nv-chart-' + id, true);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        }\n\n        var indexDrag = d3.behavior.drag().on('dragstart', dragStart).on('drag', dragMove).on('dragend', dragEnd);\n\n        function dragStart(d, i) {\n          d3.select(chart.container).style('cursor', 'ew-resize');\n        }\n\n        function dragMove(d, i) {\n          index.x = d3.event.x;\n          index.i = Math.round(dx.invert(index.x));\n          updateZero();\n        }\n\n        function dragEnd(d, i) {\n          d3.select(chart.container).style('cursor', 'auto'); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = lines.xScale();\n        y = lines.yScale();\n        dx.domain([0, data[0].values.length - 1]) //Assumes all series have same length\n        .range([0, availableWidth]).clamp(true);\n        var data = indexify(index.i, data); // initialize the starting yDomain for the not-rescale case after indexify (to have calculated point.display)\n\n        if (typeof currentYDomain === \"undefined\") {\n          currentYDomain = getCurrentYDomain(data);\n        }\n\n        if (!rescaleY) {\n          lines.yDomain(currentYDomain);\n          lines.clipEdge(true);\n        } else {\n          lines.yDomain(null);\n        } // Setup containers and skeleton of chart\n\n\n        var interactivePointerEvents = useInteractiveGuideline ? \"none\" : \"all\";\n        var wrap = container.selectAll('g.nv-wrap.nv-cumulativeLine').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-cumulativeLine').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-interactive');\n        gEnter.append('g').attr('class', 'nv-x nv-axis').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-background');\n        gEnter.append('g').attr('class', 'nv-linesWrap').style(\"pointer-events\", interactivePointerEvents);\n        gEnter.append('g').attr('class', 'nv-avgLinesWrap').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          g.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: 'Re-scale y-axis',\n            disabled: !rescaleY\n          }];\n          controls.width(140).color(['#444', '#444', '#444']).rightAlign(false).margin({\n            top: 5,\n            right: 0,\n            bottom: 5,\n            left: 20\n          });\n          g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Show error if index point value is 0 (division by zero avoided)\n\n\n        var tempDisabled = data.filter(function (d) {\n          return d.tempDisabled;\n        });\n        wrap.select('.tempDisabled').remove(); //clean-up and prevent duplicates\n\n        if (tempDisabled.length) {\n          wrap.append('text').attr('class', 'tempDisabled').attr('x', availableWidth / 2).attr('y', '-.71em').style('text-anchor', 'end').text(tempDisabled.map(function (d) {\n            return d.key;\n          }).join(', ') + ' values cannot be calculated for this time period.');\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        gEnter.select('.nv-background').append('rect');\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        lines //.x(function(d) { return d.x })\n        .y(function (d) {\n          return d.display.y;\n        }).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && !data[i].tempDisabled;\n        }));\n        var linesWrap = g.select('.nv-linesWrap').datum(data.filter(function (d) {\n          return !d.disabled && !d.tempDisabled;\n        }));\n        linesWrap.call(lines); //Store a series index number in the data array.\n\n        data.forEach(function (d, i) {\n          d.seriesIndex = i;\n        });\n        var avgLineData = data.filter(function (d) {\n          return !d.disabled && !!average(d);\n        });\n        var avgLines = g.select(\".nv-avgLinesWrap\").selectAll(\"line\").data(avgLineData, function (d) {\n          return d.key;\n        });\n\n        var getAvgLineY = function getAvgLineY(d) {\n          //If average lines go off the svg element, clamp them to the svg bounds.\n          var yVal = y(average(d));\n          if (yVal < 0) return 0;\n          if (yVal > availableHeight) return availableHeight;\n          return yVal;\n        };\n\n        avgLines.enter().append('line').style('stroke-width', 2).style('stroke-dasharray', '10,10').style('stroke', function (d, i) {\n          return lines.color()(d, d.seriesIndex);\n        }).attr('x1', 0).attr('x2', availableWidth).attr('y1', getAvgLineY).attr('y2', getAvgLineY);\n        avgLines.style('stroke-opacity', function (d) {\n          //If average lines go offscreen, make them transparent\n          var yVal = y(average(d));\n          if (yVal < 0 || yVal > availableHeight) return 0;\n          return 1;\n        }).attr('x1', 0).attr('x2', availableWidth).attr('y1', getAvgLineY).attr('y2', getAvgLineY);\n        avgLines.exit().remove(); //Create index line\n\n        var indexLine = linesWrap.selectAll('.nv-indexLine').data([index]);\n        indexLine.enter().append('rect').attr('class', 'nv-indexLine').attr('width', 3).attr('x', -2).attr('fill', 'red').attr('fill-opacity', .5).style(\"pointer-events\", \"all\").call(indexDrag);\n        indexLine.attr('transform', function (d) {\n          return 'translate(' + dx(d.i) + ',0)';\n        }).attr('height', availableHeight); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 70, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        function updateZero() {\n          indexLine.data([index]); //When dragging the index line, turn off line transitions.\n          // Then turn them back on when done dragging.\n\n          var oldDuration = chart.duration();\n          chart.duration(0);\n          chart.update();\n          chart.duration(oldDuration);\n        }\n\n        g.select('.nv-background rect').on('click', function () {\n          index.x = d3.mouse(this)[0];\n          index.i = Math.round(dx.invert(index.x)); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n          updateZero();\n        });\n        lines.dispatch.on('elementClick', function (e) {\n          index.i = e.pointIndex;\n          index.x = dx(index.i); // update state and send stateChange with new index\n\n          state.index = index.i;\n          dispatch.stateChange(state);\n          updateZero();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          d.disabled = !d.disabled;\n          rescaleY = !d.disabled;\n          state.rescaleY = rescaleY;\n\n          if (!rescaleY) {\n            currentYDomain = getCurrentYDomain(data); // rescale is turned off, so set the currentYDomain\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          lines.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !(series.disabled || series.tempDisabled);\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            lines.highlightPoint(i, pointIndex, true);\n            var point = series.values[pointIndex];\n            if (typeof point === 'undefined') return;\n            if (typeof singlePoint === 'undefined') singlePoint = point;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: chart.y()(point, pointIndex),\n              color: color(series, series.seriesIndex)\n            });\n          }); //Highlight the tooltip entry based on which point the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n            var threshold = 0.03 * domainExtent;\n            var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) {\n              return d.value;\n            }), yValue, threshold);\n            if (indexToHighlight !== null) allData[indexToHighlight].highlight = true;\n          }\n\n          var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex), pointIndex);\n          interactiveLayer.tooltip.valueFormatter(function (d, i) {\n            return yAxis.tickFormat()(d);\n          }).data({\n            value: xValue,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          lines.clearHighlights();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.index !== 'undefined') {\n            index.i = e.index;\n            index.x = dx(index.i);\n            state.index = e.index;\n            indexLine.data([index]);\n          }\n\n          if (typeof e.rescaleY !== 'undefined') {\n            rescaleY = e.rescaleY;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('cumulativeLineChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      var point = {\n        x: chart.x()(evt.point),\n        y: chart.y()(evt.point),\n        color: evt.point.color\n      };\n      evt.point = point;\n      tooltip.data(evt).hidden(false);\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Functions\n    //------------------------------------------------------------\n\n    var indexifyYGetter = null;\n    /* Normalize the data according to an index point. */\n\n    function indexify(idx, data) {\n      if (!indexifyYGetter) indexifyYGetter = lines.y();\n      return data.map(function (line, i) {\n        if (!line.values) {\n          return line;\n        }\n\n        var indexValue = line.values[idx];\n\n        if (indexValue == null) {\n          return line;\n        }\n\n        var v = indexifyYGetter(indexValue, idx); // avoid divide by zero\n\n        if (Math.abs(v) < 0.00001 && !noErrorCheck) {\n          line.tempDisabled = true;\n          return line;\n        }\n\n        line.tempDisabled = false;\n        line.values = line.values.map(function (point, pointIndex) {\n          point.display = {\n            'y': (indexifyYGetter(point, pointIndex) - v) / v\n          };\n          return point;\n        });\n        return line;\n      });\n    }\n\n    function getCurrentYDomain(data) {\n      var seriesDomains = data.filter(function (series) {\n        return !(series.disabled || series.tempDisabled);\n      }).map(function (series, i) {\n        return d3.extent(series.values, function (d) {\n          return d.display.y;\n        });\n      });\n      return [d3.min(seriesDomains, function (d) {\n        return d[0];\n      }), d3.max(seriesDomains, function (d) {\n        return d[1];\n      })];\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      average: {\n        get: function get() {\n          return average;\n        },\n        set: function set(_) {\n          average = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      noErrorCheck: {\n        get: function get() {\n          return noErrorCheck;\n        },\n        set: function set(_) {\n          noErrorCheck = _;\n        }\n      },\n      // options that require extra logic in the setter\n      rescaleY: {\n        get: function get() {\n          return rescaleY;\n        },\n        set: function set(_) {\n          rescaleY = _;\n          chart.state.rescaleY = _; // also update state\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (_ === true) {\n            chart.interactive(false);\n            chart.useVoronoi(false);\n          }\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          lines.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; //TODO: consider deprecating by adding necessary features to multiBar model\n\n\n  nv.models.discreteBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        color = nv.utils.defaultColor(),\n        showValues = false,\n        valueFormat = d3.format(',.2f'),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        rectClass = 'discreteBar',\n        duration = 250; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0, y0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); //add series index to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n          });\n        }); // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableWidth], .1);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          return d.y;\n        }).concat(forceY))); // If showValues, pad the Y axis range to account for label height\n\n        if (showValues) y.range(yRange || [availableHeight - (y.domain()[0] < 0 ? 12 : 0), y.domain()[1] > 0 ? 12 : 0]);else y.range(yRange || [availableHeight, 0]); //store old scales if they exist\n\n        x0 = x0 || x;\n        y0 = y0 || y.copy().range([y(0), y(0)]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-discretebar').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discretebar');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //TODO: by definition, the discrete bar should not have multiple groups, will modify/remove later\n\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().watchTransition(renderWatch, 'discreteBar: exit groups').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6).remove();\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        });\n        groups.watchTransition(renderWatch, 'discreteBar: groups').style('stroke-opacity', 1).style('fill-opacity', .75);\n        var bars = groups.selectAll('g.nv-bar').data(function (d) {\n          return d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('g').attr('transform', function (d, i, j) {\n          return 'translate(' + (x(getX(d, i)) + x.rangeBand() * .05) + ', ' + y(0) + ')';\n        }).on('mouseover', function (d, i) {\n          //TODO: figure out why j works above, but not here\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        barsEnter.append('rect').attr('height', 0).attr('width', x.rangeBand() * .9 / data.length);\n\n        if (showValues) {\n          barsEnter.append('text').attr('text-anchor', 'middle');\n          bars.select('text').text(function (d, i) {\n            return valueFormat(getY(d, i));\n          }).watchTransition(renderWatch, 'discreteBar: bars text').attr('x', x.rangeBand() * .9 / 2).attr('y', function (d, i) {\n            return getY(d, i) < 0 ? y(getY(d, i)) - y(0) + 12 : -4;\n          });\n        } else {\n          bars.selectAll('text').remove();\n        }\n\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).style('fill', function (d, i) {\n          return d.color || color(d, i);\n        }).style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        }).select('rect').attr('class', rectClass).watchTransition(renderWatch, 'discreteBar: bars rect').attr('width', x.rangeBand() * .9 / data.length);\n        bars.watchTransition(renderWatch, 'discreteBar: bars') //.delay(function(d,i) { return i * 1200 / data[0].values.length })\n        .attr('transform', function (d, i) {\n          var left = x(getX(d, i)) + x.rangeBand() * .05,\n              top = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : //make 1 px positive bars show up above y=0\n          y(getY(d, i));\n          return 'translate(' + left + ', ' + top + ')';\n        }).select('rect').attr('height', function (d, i) {\n          return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1);\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('discreteBar immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      showValues: {\n        get: function get() {\n          return showValues;\n        },\n        set: function set(_) {\n          showValues = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      rectClass: {\n        get: function get() {\n          return rectClass;\n        },\n        set: function set(_) {\n          rectClass = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.discreteBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var discretebar = nv.models.discreteBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 15,\n      right: 10,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.getColor(),\n        showLegend = false,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        staggerLabels = false,\n        wrapLabels = false,\n        rotateLabels = 0,\n        x,\n        y,\n        noData = null,\n        dispatch = d3.dispatch('beforeUpdate', 'renderEnd'),\n        duration = 250;\n    xAxis.orient('bottom').showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).keyFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(discretebar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          dispatch.beforeUpdate();\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = discretebar.xScale();\n        y = discretebar.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-discreteBarWithAxes').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-discreteBarWithAxes').append('g');\n        var defsEnter = gEnter.append('defs');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Main Chart Component(s)\n\n\n        discretebar.width(availableWidth).height(availableHeight);\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(discretebar);\n        defsEnter.append('clipPath').attr('id', 'nv-x-label-clip-' + discretebar.id()).append('rect');\n        g.select('#nv-x-label-clip-' + discretebar.id() + ' rect').attr('width', x.rangeBand() * (staggerLabels ? 2 : 1)).attr('height', 16).attr('x', -x.rangeBand() / (staggerLabels ? 1 : 2)); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + (y.range()[0] + (discretebar.showValues() && y.domain()[0] < 0 ? 16 : 0)) + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n\n          if (staggerLabels) {\n            xTicks.selectAll('text').attr('transform', function (d, i, j) {\n              return 'translate(0,' + (j % 2 == 0 ? '5' : '17') + ')';\n            });\n          }\n\n          if (rotateLabels) {\n            xTicks.selectAll('.tick text').attr('transform', 'rotate(' + rotateLabels + ' 0,0)').style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n          }\n\n          if (wrapLabels) {\n            g.selectAll('.tick text').call(nv.utils.wrapTicks, chart.xAxis.rangeBand());\n          }\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select(\".nv-zeroLine line\").attr(\"x1\", 0).attr(\"x2\", rightAlignYAxis ? -availableWidth : availableWidth).attr(\"y1\", y(0)).attr(\"y2\", y(0));\n      });\n      renderWatch.renderEnd('discreteBar chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    discretebar.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    discretebar.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    discretebar.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n    chart.dispatch = dispatch;\n    chart.discretebar = discretebar;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      wrapLabels: {\n        get: function get() {\n          return wrapLabels;\n        },\n        set: function set(_) {\n          wrapLabels = !!_;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          discretebar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          discretebar.color(color);\n          legend.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, discretebar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.distribution = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 400 //technically width or height depending on x or y....\n    ,\n        size = 8,\n        axis = 'x' // 'x' or 'y'... horizontal or vertical\n    ,\n        getData = function getData(d) {\n      return d[axis];\n    } // defaults d.x or d.y\n    ,\n        color = nv.utils.defaultColor(),\n        scale = d3.scale.linear(),\n        domain,\n        duration = 250,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var scale0;\n    var renderWatch = nv.utils.renderWatch(dispatch, duration); //============================================================\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableLength = width - (axis === 'x' ? margin.left + margin.right : margin.top + margin.bottom),\n            naxis = axis == 'x' ? 'y' : 'x',\n            container = d3.select(this);\n        nv.utils.initSVG(container); //------------------------------------------------------------\n        // Setup Scales\n\n        scale0 = scale0 || scale; //------------------------------------------------------------\n        //------------------------------------------------------------\n        // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-distribution').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-distribution');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //------------------------------------------------------------\n\n        var distWrap = g.selectAll('g.nv-dist').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        distWrap.enter().append('g');\n        distWrap.attr('class', function (d, i) {\n          return 'nv-dist nv-series-' + i;\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        var dist = distWrap.selectAll('line.nv-dist' + axis).data(function (d) {\n          return d.values;\n        });\n        dist.enter().append('line').attr(axis + '1', function (d, i) {\n          return scale0(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale0(getData(d, i));\n        });\n        renderWatch.transition(distWrap.exit().selectAll('line.nv-dist' + axis), 'dist exit') // .transition()\n        .attr(axis + '1', function (d, i) {\n          return scale(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale(getData(d, i));\n        }).style('stroke-opacity', 0).remove();\n        dist.attr('class', function (d, i) {\n          return 'nv-dist' + axis + ' nv-dist' + axis + '-' + i;\n        }).attr(naxis + '1', 0).attr(naxis + '2', size);\n        renderWatch.transition(dist, 'dist') // .transition()\n        .attr(axis + '1', function (d, i) {\n          return scale(getData(d, i));\n        }).attr(axis + '2', function (d, i) {\n          return scale(getData(d, i));\n        });\n        scale0 = scale.copy();\n      });\n      renderWatch.renderEnd('distribution immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart.dispatch = dispatch;\n\n    chart.margin = function (_) {\n      if (!arguments.length) return margin;\n      margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n      margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n      margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n      margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n      return chart;\n    };\n\n    chart.width = function (_) {\n      if (!arguments.length) return width;\n      width = _;\n      return chart;\n    };\n\n    chart.axis = function (_) {\n      if (!arguments.length) return axis;\n      axis = _;\n      return chart;\n    };\n\n    chart.size = function (_) {\n      if (!arguments.length) return size;\n      size = _;\n      return chart;\n    };\n\n    chart.getData = function (_) {\n      if (!arguments.length) return getData;\n      getData = d3.functor(_);\n      return chart;\n    };\n\n    chart.scale = function (_) {\n      if (!arguments.length) return scale;\n      scale = _;\n      return chart;\n    };\n\n    chart.color = function (_) {\n      if (!arguments.length) return color;\n      color = nv.utils.getColor(_);\n      return chart;\n    };\n\n    chart.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = _;\n      renderWatch.reset(duration);\n      return chart;\n    }; //============================================================\n\n\n    return chart;\n  };\n\n  nv.models.focus = function (content) {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var content = content || nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        brush = d3.svg.brush();\n    var margin = {\n      top: 10,\n      right: 0,\n      bottom: 30,\n      left: 0\n    },\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = 70,\n        showXAxis = true,\n        showYAxis = false,\n        rightAlignYAxis = false,\n        ticks = null,\n        x,\n        y,\n        brushExtent = null,\n        duration = 250,\n        dispatch = d3.dispatch('brush', 'onBrush', 'renderEnd'),\n        syncBrushing = true;\n    content.interactive(false);\n    content.pointActive(function (d) {\n      return false;\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(content);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = height - margin.top - margin.bottom;\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = this; // Setup Scales\n\n        x = content.xScale();\n        y = content.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-focus').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-focus').append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        gEnter.append('g').attr('class', 'nv-background').append('rect');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-contentWrap');\n        gEnter.append('g').attr('class', 'nv-brushBackground');\n        gEnter.append('g').attr('class', 'nv-x nv-brush');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        }\n\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        content.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var contentWrap = g.select('.nv-contentWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        d3.transition(contentWrap).call(content); // Setup Brush\n\n        brush.x(x).on('brush', function () {\n          onBrush(syncBrushing);\n        });\n        brush.on('brushend', function () {\n          if (!syncBrushing) {\n            dispatch.onBrush(brush.empty() ? x.domain() : brush.extent());\n          }\n        });\n        if (brushExtent) brush.extent(brushExtent);\n        var brushBG = g.select('.nv-brushBackground').selectAll('g').data([brushExtent || brush.extent()]);\n        var brushBGenter = brushBG.enter().append('g');\n        brushBGenter.append('rect').attr('class', 'left').attr('x', 0).attr('y', 0).attr('height', availableHeight);\n        brushBGenter.append('rect').attr('class', 'right').attr('x', 0).attr('y', 0).attr('height', availableHeight);\n        var gBrush = g.select('.nv-x.nv-brush').call(brush);\n        gBrush.selectAll('rect').attr('height', availableHeight);\n        gBrush.selectAll('.resize').append('path').attr('d', resizePath);\n        onBrush(true);\n        g.select('.nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          d3.transition(g.select('.nv-x.nv-axis')).call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          d3.transition(g.select('.nv-y.nv-axis')).call(yAxis);\n        }\n\n        g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')'); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n        //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight / 3;\n          return 'M' + 0.5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + 0.5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function updateBrushBG() {\n          if (!brush.empty()) brush.extent(brushExtent);\n          brushBG.data([brush.empty() ? x.domain() : brushExtent]).each(function (d, i) {\n            var leftWidth = x(d[0]) - x.range()[0],\n                rightWidth = availableWidth - x(d[1]);\n            d3.select(this).select('.left').attr('width', leftWidth < 0 ? 0 : leftWidth);\n            d3.select(this).select('.right').attr('x', x(d[1])).attr('width', rightWidth < 0 ? 0 : rightWidth);\n          });\n        }\n\n        function onBrush(shouldDispatch) {\n          brushExtent = brush.empty() ? null : brush.extent();\n          var extent = brush.empty() ? x.domain() : brush.extent();\n          dispatch.brush({\n            extent: extent,\n            brush: brush\n          });\n          updateBrushBG();\n\n          if (shouldDispatch) {\n            dispatch.onBrush(extent);\n          }\n        }\n      });\n      renderWatch.renderEnd('focus immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.content = content;\n    chart.brush = brush;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return brushExtent;\n        },\n        set: function set(_) {\n          brushExtent = _;\n        }\n      },\n      syncBrushing: {\n        get: function get() {\n          return syncBrushing;\n        },\n        set: function set(_) {\n          syncBrushing = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          content.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          content.color(color);\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return content.interpolate();\n        },\n        set: function set(_) {\n          content.interpolate(_);\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xAxis.tickFormat();\n        },\n        set: function set(_) {\n          xAxis.tickFormat(_);\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yAxis.tickFormat();\n        },\n        set: function set(_) {\n          yAxis.tickFormat(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return content.x();\n        },\n        set: function set(_) {\n          content.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return content.y();\n        },\n        set: function set(_) {\n          content.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, content);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.forceDirectedGraph = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 2,\n      right: 0,\n      bottom: 2,\n      left: 0\n    },\n        width = 400,\n        height = 32,\n        container = null,\n        dispatch = d3.dispatch('renderEnd'),\n        color = nv.utils.getColor(['#000']),\n        tooltip = nv.models.tooltip(),\n        noData = null // Force directed graph specific parameters [default values]\n    ,\n        linkStrength = 0.1,\n        friction = 0.9,\n        linkDist = 30,\n        charge = -120,\n        gravity = 0.1,\n        theta = 0.8,\n        alpha = 0.1,\n        radius = 5 // These functions allow to add extra attributes to ndes and links\n    ,\n        nodeExtras = function nodeExtras(nodes) {\n      /* Do nothing */\n    },\n        linkExtras = function linkExtras(links) {\n      /* Do nothing */\n    },\n        getX = d3.functor(0.0),\n        getY = d3.functor(0.0); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        container.attr(\"width\", availableWidth).attr(\"height\", availableHeight); // Display No Data message if there's nothing to show.\n\n        if (!data || !data.links || !data.nodes) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        container.selectAll('*').remove(); // Collect names of all fields in the nodes\n\n        var nodeFieldSet = new Set();\n        data.nodes.forEach(function (node) {\n          var keys = Object.keys(node);\n          keys.forEach(function (key) {\n            nodeFieldSet.add(key);\n          });\n        });\n        var force = d3.layout.force().nodes(data.nodes).links(data.links).size([availableWidth, availableHeight]).linkStrength(linkStrength).friction(friction).linkDistance(linkDist).charge(charge).gravity(gravity).theta(theta).alpha(alpha).start();\n        var link = container.selectAll(\".link\").data(data.links).enter().append(\"line\").attr(\"class\", \"nv-force-link\").style(\"stroke-width\", function (d) {\n          return Math.sqrt(d.value);\n        });\n        var node = container.selectAll(\".node\").data(data.nodes).enter().append(\"g\").attr(\"class\", \"nv-force-node\").call(force.drag);\n        node.append(\"circle\").attr(\"r\", radius).style(\"fill\", function (d) {\n          return color(d);\n        }).on(\"mouseover\", function (evt) {\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', evt.py);\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', evt.px); // Add 'series' object to\n\n          var nodeColor = color(evt);\n          evt.series = [];\n          nodeFieldSet.forEach(function (field) {\n            evt.series.push({\n              color: nodeColor,\n              key: field,\n              value: evt[field]\n            });\n          });\n          tooltip.data(evt).hidden(false);\n        }).on(\"mouseout\", function (d) {\n          tooltip.hidden(true);\n        });\n        tooltip.headerFormatter(function (d) {\n          return \"Node\";\n        }); // Apply extra attributes to nodes and links (if any)\n\n        linkExtras(link);\n        nodeExtras(node);\n        force.on(\"tick\", function () {\n          link.attr(\"x1\", function (d) {\n            return d.source.x;\n          }).attr(\"y1\", function (d) {\n            return d.source.y;\n          }).attr(\"x2\", function (d) {\n            return d.target.x;\n          }).attr(\"y2\", function (d) {\n            return d.target.y;\n          });\n          node.attr(\"transform\", function (d) {\n            return \"translate(\" + d.x + \", \" + d.y + \")\";\n          });\n        });\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      // Force directed graph specific parameters\n      linkStrength: {\n        get: function get() {\n          return linkStrength;\n        },\n        set: function set(_) {\n          linkStrength = _;\n        }\n      },\n      friction: {\n        get: function get() {\n          return friction;\n        },\n        set: function set(_) {\n          friction = _;\n        }\n      },\n      linkDist: {\n        get: function get() {\n          return linkDist;\n        },\n        set: function set(_) {\n          linkDist = _;\n        }\n      },\n      charge: {\n        get: function get() {\n          return charge;\n        },\n        set: function set(_) {\n          charge = _;\n        }\n      },\n      gravity: {\n        get: function get() {\n          return gravity;\n        },\n        set: function set(_) {\n          gravity = _;\n        }\n      },\n      theta: {\n        get: function get() {\n          return theta;\n        },\n        set: function set(_) {\n          theta = _;\n        }\n      },\n      alpha: {\n        get: function get() {\n          return alpha;\n        },\n        set: function set(_) {\n          alpha = _;\n        }\n      },\n      radius: {\n        get: function get() {\n          return radius;\n        },\n        set: function set(_) {\n          radius = _;\n        }\n      },\n      //functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      nodeExtras: {\n        get: function get() {\n          return nodeExtras;\n        },\n        set: function set(_) {\n          nodeExtras = _;\n        }\n      },\n      linkExtras: {\n        get: function get() {\n          return linkExtras;\n        },\n        set: function set(_) {\n          linkExtras = _;\n        }\n      }\n    });\n    chart.dispatch = dispatch;\n    chart.tooltip = tooltip;\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.furiousLegend = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        width = 400,\n        height = 20,\n        getKey = function getKey(d) {\n      return d.key;\n    },\n        keyFormatter = function keyFormatter(d) {\n      return d;\n    },\n        color = nv.utils.getColor(),\n        maxKeyLength = 20 //default value for key lengths\n    ,\n        align = true,\n        padding = 28 //define how much space between legend items. - recommend 32 for furious version\n    ,\n        rightAlign = true,\n        updateState = true //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n    ,\n        radioButtonMode = false //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n    ,\n        expanded = false,\n        dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange'),\n        vers = 'classic' //Options are \"classic\" and \"furious\"\n    ;\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-legend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var series = g.selectAll('.nv-series').data(function (d) {\n          if (vers != 'furious') return d;\n          return d.filter(function (n) {\n            return expanded ? true : !n.disengaged;\n          });\n        });\n        var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n        var seriesShape;\n\n        if (vers == 'classic') {\n          seriesEnter.append('circle').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('r', 5);\n          seriesShape = series.select('circle');\n        } else if (vers == 'furious') {\n          seriesEnter.append('rect').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('rx', 3).attr('ry', 3);\n          seriesShape = series.select('rect');\n          seriesEnter.append('g').attr('class', 'nv-check-box').property('innerHTML', '<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>').attr('transform', 'translate(-10,-8)scale(0.5)');\n          var seriesCheckbox = series.select('.nv-check-box');\n          seriesCheckbox.each(function (d, i) {\n            d3.select(this).selectAll('path').attr('stroke', setTextColor(d, i));\n          });\n        }\n\n        seriesEnter.append('text').attr('text-anchor', 'start').attr('class', 'nv-legend-text').attr('dy', '.32em').attr('dx', '8');\n        var seriesText = series.select('text.nv-legend-text');\n        series.on('mouseover', function (d, i) {\n          dispatch.legendMouseover(d, i); //TODO: Make consistent with other event objects\n        }).on('mouseout', function (d, i) {\n          dispatch.legendMouseout(d, i);\n        }).on('click', function (d, i) {\n          dispatch.legendClick(d, i); // make sure we re-get data in case it was modified\n\n          var data = series.data();\n\n          if (updateState) {\n            if (vers == 'classic') {\n              if (radioButtonMode) {\n                //Radio button mode: set every series to disabled,\n                //  and enable the clicked series.\n                data.forEach(function (series) {\n                  series.disabled = true;\n                });\n                d.disabled = false;\n              } else {\n                d.disabled = !d.disabled;\n\n                if (data.every(function (series) {\n                  return series.disabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = false;\n                  });\n                }\n              }\n            } else if (vers == 'furious') {\n              if (expanded) {\n                d.disengaged = !d.disengaged;\n                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                d.disabled = d.disengaged || d.userDisabled;\n              } else if (!expanded) {\n                d.disabled = !d.disabled;\n                d.userDisabled = d.disabled;\n                var engaged = data.filter(function (d) {\n                  return !d.disengaged;\n                });\n\n                if (engaged.every(function (series) {\n                  return series.userDisabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = series.userDisabled = false;\n                  });\n                }\n              }\n            }\n\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              }),\n              disengaged: data.map(function (d) {\n                return !!d.disengaged;\n              })\n            });\n          }\n        }).on('dblclick', function (d, i) {\n          if (vers == 'furious' && expanded) return;\n          dispatch.legendDblclick(d, i);\n\n          if (updateState) {\n            // make sure we re-get data in case it was modified\n            var data = series.data(); //the default behavior of NVD3 legends, when double clicking one,\n            // is to set all other series' to false, and make the double clicked series enabled.\n\n            data.forEach(function (series) {\n              series.disabled = true;\n              if (vers == 'furious') series.userDisabled = series.disabled;\n            });\n            d.disabled = false;\n            if (vers == 'furious') d.userDisabled = d.disabled;\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              })\n            });\n          }\n        });\n        series.classed('nv-disabled', function (d) {\n          return d.userDisabled;\n        });\n        series.exit().remove();\n        seriesText.attr('fill', setTextColor).text(function (d) {\n          return keyFormatter(getKey(d));\n        }); //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n        // NEW ALIGNING CODE, TODO: clean up\n\n        var versPadding;\n\n        switch (vers) {\n          case 'furious':\n            versPadding = 23;\n            break;\n\n          case 'classic':\n            versPadding = 20;\n        }\n\n        if (align) {\n          var seriesWidths = [];\n          series.each(function (d, i) {\n            var legendText;\n\n            if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n              var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n              legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n              d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n            } else {\n              legendText = d3.select(this).select('text');\n            }\n\n            var nodeTextLength;\n\n            try {\n              nodeTextLength = legendText.node().getComputedTextLength(); // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\n              if (nodeTextLength <= 0) throw Error();\n            } catch (e) {\n              nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n            }\n\n            seriesWidths.push(nodeTextLength + padding);\n          });\n          var seriesPerRow = 0;\n          var legendWidth = 0;\n          var columnWidths = [];\n\n          while (legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n            columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n            legendWidth += seriesWidths[seriesPerRow++];\n          }\n\n          if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n          while (legendWidth > availableWidth && seriesPerRow > 1) {\n            columnWidths = [];\n            seriesPerRow--;\n\n            for (var k = 0; k < seriesWidths.length; k++) {\n              if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0)) columnWidths[k % seriesPerRow] = seriesWidths[k];\n            }\n\n            legendWidth = columnWidths.reduce(function (prev, cur, index, array) {\n              return prev + cur;\n            });\n          }\n\n          var xPositions = [];\n\n          for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n            xPositions[i] = curX;\n            curX += columnWidths[i];\n          }\n\n          series.attr('transform', function (d, i) {\n            return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n          }); //position legend as far right as possible within the total width\n\n          if (rightAlign) {\n            g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n          } else {\n            g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n          }\n\n          height = margin.top + margin.bottom + Math.ceil(seriesWidths.length / seriesPerRow) * versPadding;\n        } else {\n          var ypos = 5,\n              newxpos = 5,\n              maxwidth = 0,\n              xpos;\n          series.attr('transform', function (d, i) {\n            var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n            xpos = newxpos;\n\n            if (width < margin.left + margin.right + xpos + length) {\n              newxpos = xpos = 5;\n              ypos += versPadding;\n            }\n\n            newxpos += length;\n            if (newxpos > maxwidth) maxwidth = newxpos;\n            return 'translate(' + xpos + ',' + ypos + ')';\n          }); //position legend as far right as possible within the total width\n\n          g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n          height = margin.top + margin.bottom + ypos + 15;\n        }\n\n        if (vers == 'furious') {\n          // Size rectangles after text is placed\n          seriesShape.attr('width', function (d, i) {\n            return seriesText[0][i].getComputedTextLength() + 27;\n          }).attr('height', 18).attr('y', -9).attr('x', -15);\n        }\n\n        seriesShape.style('fill', setBGColor).style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        });\n      });\n\n      function setTextColor(d, i) {\n        if (vers != 'furious') return '#000';\n\n        if (expanded) {\n          return d.disengaged ? color(d, i) : '#fff';\n        } else if (!expanded) {\n          return !!d.disabled ? color(d, i) : '#fff';\n        }\n      }\n\n      function setBGColor(d, i) {\n        if (expanded && vers == 'furious') {\n          return d.disengaged ? '#fff' : color(d, i);\n        } else {\n          return !!d.disabled ? '#fff' : color(d, i);\n        }\n      }\n\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return getKey;\n        },\n        set: function set(_) {\n          getKey = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      align: {\n        get: function get() {\n          return align;\n        },\n        set: function set(_) {\n          align = _;\n        }\n      },\n      rightAlign: {\n        get: function get() {\n          return rightAlign;\n        },\n        set: function set(_) {\n          rightAlign = _;\n        }\n      },\n      maxKeyLength: {\n        get: function get() {\n          return maxKeyLength;\n        },\n        set: function set(_) {\n          maxKeyLength = _;\n        }\n      },\n      padding: {\n        get: function get() {\n          return padding;\n        },\n        set: function set(_) {\n          padding = _;\n        }\n      },\n      updateState: {\n        get: function get() {\n          return updateState;\n        },\n        set: function set(_) {\n          updateState = _;\n        }\n      },\n      radioButtonMode: {\n        get: function get() {\n          return radioButtonMode;\n        },\n        set: function set(_) {\n          radioButtonMode = _;\n        }\n      },\n      expanded: {\n        get: function get() {\n          return expanded;\n        },\n        set: function set(_) {\n          expanded = _;\n        }\n      },\n      vers: {\n        get: function get() {\n          return vers;\n        },\n        set: function set(_) {\n          vers = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; //TODO: consider deprecating and using multibar with single series for this\n\n\n  nv.models.historicalBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceX = [],\n        forceY = [0],\n        padData = false,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'),\n        interactive = true;\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n      selection.each(function (data) {\n        renderWatch.reset();\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [0, availableWidth]);\n        y.domain(yDomain || d3.extent(data[0].values.map(getY).concat(forceY))).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-historicalBar-' + id).data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBar-' + id);\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-bars');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var bars = wrap.select('.nv-bars').selectAll('.nv-bar').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return getX(d, i);\n        });\n        bars.exit().remove();\n        bars.enter().append('rect').attr('x', 0).attr('y', function (d, i) {\n          return nv.utils.NaNtoZero(y(Math.max(0, getY(d, i))));\n        }).attr('height', function (d, i) {\n          return nv.utils.NaNtoZero(Math.abs(y(getY(d, i)) - y(0)));\n        }).attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ',0)';\n        }).on('mouseover', function (d, i) {\n          if (!interactive) return;\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          if (!interactive) return;\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          if (!interactive) return;\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          if (!interactive) return;\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          if (!interactive) return;\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        bars.attr('fill', function (d, i) {\n          return color(d, i);\n        }).attr('class', function (d, i, j) {\n          return (getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive') + ' nv-bar-' + j + '-' + i;\n        }).watchTransition(renderWatch, 'bars').attr('transform', function (d, i) {\n          return 'translate(' + (x(getX(d, i)) - availableWidth / data[0].values.length * .45) + ',0)';\n        }) //TODO: better width calculations that don't assume always uniform data spacing;w\n        .attr('width', availableWidth / data[0].values.length * .9);\n        bars.watchTransition(renderWatch, 'bars').attr('y', function (d, i) {\n          var rval = getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i));\n          return nv.utils.NaNtoZero(rval);\n        }).attr('height', function (d, i) {\n          return nv.utils.NaNtoZero(Math.max(Math.abs(y(getY(d, i)) - y(0)), 1));\n        });\n      });\n      renderWatch.renderEnd('historicalBar immediate');\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      container.select(\".nv-bars .nv-bar-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-bars .nv-bar.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.historicalBarChart = function (bar_model) {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var bars = bar_model || nv.models.historicalBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 90,\n      bottom: 50,\n      left: 90\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = false,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        useInteractiveGuideline = false,\n        x,\n        y,\n        state = {},\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('tooltipHide', 'stateChange', 'changeState', 'renderEnd'),\n        transitionDuration = 250;\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, 0);\n\n    function chart(selection) {\n      selection.each(function (data) {\n        renderWatch.reset();\n        renderWatch.models(bars);\n        if (showXAxis) renderWatch.models(xAxis);\n        if (showYAxis) renderWatch.models(yAxis);\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().duration(transitionDuration).call(chart);\n        };\n\n        chart.container = this; //set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = bars.xScale();\n        y = bars.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-historicalBarChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-historicalBarChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-interactive'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        bars.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(bars); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').transition().call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').transition().call(yAxis);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          bars.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            bars.highlightPoint(pointIndex, true);\n            var point = series.values[pointIndex];\n            if (point === undefined) return;\n            if (singlePoint === undefined) singlePoint = point;\n            if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: chart.y()(point, pointIndex),\n              color: color(series, series.seriesIndex),\n              data: series.values[pointIndex]\n            });\n          });\n          var xValue = xAxis.tickFormat()(chart.x()(singlePoint, pointIndex));\n          interactiveLayer.tooltip.valueFormatter(function (d, i) {\n            return yAxis.tickFormat()(d);\n          }).data({\n            value: xValue,\n            index: pointIndex,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          dispatch.tooltipHide();\n          bars.clearHighlights();\n        });\n        legend.dispatch.on('legendClick', function (d, i) {\n          d.disabled = !d.disabled;\n\n          if (!data.filter(function (d) {\n            return !d.disabled;\n          }).length) {\n            data.map(function (d) {\n              d.disabled = false;\n              wrap.selectAll('.nv-series').classed('disabled', false);\n              return d;\n            });\n          }\n\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          selection.transition().call(chart);\n        });\n        legend.dispatch.on('legendDblclick', function (d) {\n          //Double clicking should always enable current series, and disabled all others.\n          data.forEach(function (d) {\n            d.disabled = true;\n          });\n          d.disabled = false;\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('historicalBarChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    bars.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    bars.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.bars = bars;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          bars.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return transitionDuration;\n        },\n        set: function set(_) {\n          transitionDuration = _;\n          renderWatch.reset(transitionDuration);\n          yAxis.duration(transitionDuration);\n          xAxis.duration(transitionDuration);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (_ === true) {\n            chart.interactive(false);\n          }\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, bars);\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // ohlcChart is just a historical chart with ohlc bars and some tweaks\n\n\n  nv.models.ohlcBarChart = function () {\n    var chart = nv.models.historicalBarChart(nv.models.ohlcBar()); // special default tooltip since we show multiple values per x\n\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function (data) {\n      // we assume only one series exists for this chart\n      var d = data.series[0].data; // match line colors as defined in nv.d3.css\n\n      var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n      return '' + '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' + '<table>' + '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' + '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' + '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' + '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' + '</table>';\n    });\n    return chart;\n  }; // candlestickChart is just a historical chart with candlestick bars and some tweaks\n\n\n  nv.models.candlestickBarChart = function () {\n    var chart = nv.models.historicalBarChart(nv.models.candlestickBar()); // special default tooltip since we show multiple values per x\n\n    chart.useInteractiveGuideline(true);\n    chart.interactiveLayer.tooltip.contentGenerator(function (data) {\n      // we assume only one series exists for this chart\n      var d = data.series[0].data; // match line colors as defined in nv.d3.css\n\n      var color = d.open < d.close ? \"2ca02c\" : \"d62728\";\n      return '' + '<h3 style=\"color: #' + color + '\">' + data.value + '</h3>' + '<table>' + '<tr><td>open:</td><td>' + chart.yAxis.tickFormat()(d.open) + '</td></tr>' + '<tr><td>close:</td><td>' + chart.yAxis.tickFormat()(d.close) + '</td></tr>' + '<tr><td>high</td><td>' + chart.yAxis.tickFormat()(d.high) + '</td></tr>' + '<tr><td>low:</td><td>' + chart.yAxis.tickFormat()(d.low) + '</td></tr>' + '</table>';\n    });\n    return chart;\n  };\n\n  nv.models.legend = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        width = 400,\n        height = 20,\n        getKey = function getKey(d) {\n      return d.key;\n    },\n        keyFormatter = function keyFormatter(d) {\n      return d;\n    },\n        color = nv.utils.getColor(),\n        maxKeyLength = 20 //default value for key lengths\n    ,\n        align = true,\n        padding = 32 //define how much space between legend items. - recommend 32 for furious version\n    ,\n        rightAlign = true,\n        updateState = true //If true, legend will update data.disabled and trigger a 'stateChange' dispatch.\n    ,\n        enableDoubleClick = true //If true, legend will enable double click handling\n    ,\n        radioButtonMode = false //If true, clicking legend items will cause it to behave like a radio button. (only one can be selected at a time)\n    ,\n        expanded = false,\n        dispatch = d3.dispatch('legendClick', 'legendDblclick', 'legendMouseover', 'legendMouseout', 'stateChange'),\n        vers = 'classic' //Options are \"classic\" and \"furious\"\n    ;\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            container = d3.select(this);\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-legend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-legend').append('g');\n        var g = wrap.select('g');\n        if (rightAlign) wrap.attr('transform', 'translate(' + -margin.right + ',' + margin.top + ')');else wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var series = g.selectAll('.nv-series').data(function (d) {\n          if (vers != 'furious') return d;\n          return d.filter(function (n) {\n            return expanded ? true : !n.disengaged;\n          });\n        });\n        var seriesEnter = series.enter().append('g').attr('class', 'nv-series');\n        var seriesShape;\n        var versPadding;\n\n        switch (vers) {\n          case 'furious':\n            versPadding = 23;\n            break;\n\n          case 'classic':\n            versPadding = 20;\n        }\n\n        if (vers == 'classic') {\n          seriesEnter.append('circle').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('r', 5);\n          seriesShape = series.select('.nv-legend-symbol');\n        } else if (vers == 'furious') {\n          seriesEnter.append('rect').style('stroke-width', 2).attr('class', 'nv-legend-symbol').attr('rx', 3).attr('ry', 3);\n          seriesShape = series.select('.nv-legend-symbol');\n          seriesEnter.append('g').attr('class', 'nv-check-box').property('innerHTML', '<path d=\"M0.5,5 L22.5,5 L22.5,26.5 L0.5,26.5 L0.5,5 Z\" class=\"nv-box\"></path><path d=\"M5.5,12.8618467 L11.9185089,19.2803556 L31,0.198864511\" class=\"nv-check\"></path>').attr('transform', 'translate(-10,-8)scale(0.5)');\n          var seriesCheckbox = series.select('.nv-check-box');\n          seriesCheckbox.each(function (d, i) {\n            d3.select(this).selectAll('path').attr('stroke', setTextColor(d, i));\n          });\n        }\n\n        seriesEnter.append('text').attr('text-anchor', 'start').attr('class', 'nv-legend-text').attr('dy', '.32em').attr('dx', '8');\n        var seriesText = series.select('text.nv-legend-text');\n        series.on('mouseover', function (d, i) {\n          dispatch.legendMouseover(d, i); //TODO: Make consistent with other event objects\n        }).on('mouseout', function (d, i) {\n          dispatch.legendMouseout(d, i);\n        }).on('click', function (d, i) {\n          dispatch.legendClick(d, i); // make sure we re-get data in case it was modified\n\n          var data = series.data();\n\n          if (updateState) {\n            if (vers == 'classic') {\n              if (radioButtonMode) {\n                //Radio button mode: set every series to disabled,\n                //  and enable the clicked series.\n                data.forEach(function (series) {\n                  series.disabled = true;\n                });\n                d.disabled = false;\n              } else {\n                d.disabled = !d.disabled;\n\n                if (data.every(function (series) {\n                  return series.disabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = false;\n                  });\n                }\n              }\n            } else if (vers == 'furious') {\n              if (expanded) {\n                d.disengaged = !d.disengaged;\n                d.userDisabled = d.userDisabled == undefined ? !!d.disabled : d.userDisabled;\n                d.disabled = d.disengaged || d.userDisabled;\n              } else if (!expanded) {\n                d.disabled = !d.disabled;\n                d.userDisabled = d.disabled;\n                var engaged = data.filter(function (d) {\n                  return !d.disengaged;\n                });\n\n                if (engaged.every(function (series) {\n                  return series.userDisabled;\n                })) {\n                  //the default behavior of NVD3 legends is, if every single series\n                  // is disabled, turn all series' back on.\n                  data.forEach(function (series) {\n                    series.disabled = series.userDisabled = false;\n                  });\n                }\n              }\n            }\n\n            dispatch.stateChange({\n              disabled: data.map(function (d) {\n                return !!d.disabled;\n              }),\n              disengaged: data.map(function (d) {\n                return !!d.disengaged;\n              })\n            });\n          }\n        }).on('dblclick', function (d, i) {\n          if (enableDoubleClick) {\n            if (vers == 'furious' && expanded) return;\n            dispatch.legendDblclick(d, i);\n\n            if (updateState) {\n              // make sure we re-get data in case it was modified\n              var data = series.data(); //the default behavior of NVD3 legends, when double clicking one,\n              // is to set all other series' to false, and make the double clicked series enabled.\n\n              data.forEach(function (series) {\n                series.disabled = true;\n                if (vers == 'furious') series.userDisabled = series.disabled;\n              });\n              d.disabled = false;\n              if (vers == 'furious') d.userDisabled = d.disabled;\n              dispatch.stateChange({\n                disabled: data.map(function (d) {\n                  return !!d.disabled;\n                })\n              });\n            }\n          }\n        });\n        series.classed('nv-disabled', function (d) {\n          return d.userDisabled;\n        });\n        series.exit().remove();\n        seriesText.attr('fill', setTextColor).text(function (d) {\n          return keyFormatter(getKey(d));\n        }); //TODO: implement fixed-width and max-width options (max-width is especially useful with the align option)\n        // NEW ALIGNING CODE, TODO: clean up\n\n        var legendWidth = 0;\n\n        if (align) {\n          var seriesWidths = [];\n          series.each(function (d, i) {\n            var legendText;\n\n            if (keyFormatter(getKey(d)) && keyFormatter(getKey(d)).length > maxKeyLength) {\n              var trimmedKey = keyFormatter(getKey(d)).substring(0, maxKeyLength);\n              legendText = d3.select(this).select('text').text(trimmedKey + \"...\");\n              d3.select(this).append(\"svg:title\").text(keyFormatter(getKey(d)));\n            } else {\n              legendText = d3.select(this).select('text');\n            }\n\n            var nodeTextLength;\n\n            try {\n              nodeTextLength = legendText.node().getComputedTextLength(); // If the legendText is display:none'd (nodeTextLength == 0), simulate an error so we approximate, instead\n\n              if (nodeTextLength <= 0) throw Error();\n            } catch (e) {\n              nodeTextLength = nv.utils.calcApproxTextWidth(legendText);\n            }\n\n            seriesWidths.push(nodeTextLength + padding);\n          });\n          var seriesPerRow = 0;\n          var columnWidths = [];\n          legendWidth = 0;\n\n          while (legendWidth < availableWidth && seriesPerRow < seriesWidths.length) {\n            columnWidths[seriesPerRow] = seriesWidths[seriesPerRow];\n            legendWidth += seriesWidths[seriesPerRow++];\n          }\n\n          if (seriesPerRow === 0) seriesPerRow = 1; //minimum of one series per row\n\n          while (legendWidth > availableWidth && seriesPerRow > 1) {\n            columnWidths = [];\n            seriesPerRow--;\n\n            for (var k = 0; k < seriesWidths.length; k++) {\n              if (seriesWidths[k] > (columnWidths[k % seriesPerRow] || 0)) columnWidths[k % seriesPerRow] = seriesWidths[k];\n            }\n\n            legendWidth = columnWidths.reduce(function (prev, cur, index, array) {\n              return prev + cur;\n            });\n          }\n\n          var xPositions = [];\n\n          for (var i = 0, curX = 0; i < seriesPerRow; i++) {\n            xPositions[i] = curX;\n            curX += columnWidths[i];\n          }\n\n          series.attr('transform', function (d, i) {\n            return 'translate(' + xPositions[i % seriesPerRow] + ',' + (5 + Math.floor(i / seriesPerRow) * versPadding) + ')';\n          }); //position legend as far right as possible within the total width\n\n          if (rightAlign) {\n            g.attr('transform', 'translate(' + (width - margin.right - legendWidth) + ',' + margin.top + ')');\n          } else {\n            g.attr('transform', 'translate(0' + ',' + margin.top + ')');\n          }\n\n          height = margin.top + margin.bottom + Math.ceil(seriesWidths.length / seriesPerRow) * versPadding;\n        } else {\n          var ypos = 5,\n              newxpos = 5,\n              maxwidth = 0,\n              xpos;\n          series.attr('transform', function (d, i) {\n            var length = d3.select(this).select('text').node().getComputedTextLength() + padding;\n            xpos = newxpos;\n\n            if (width < margin.left + margin.right + xpos + length) {\n              newxpos = xpos = 5;\n              ypos += versPadding;\n            }\n\n            newxpos += length;\n            if (newxpos > maxwidth) maxwidth = newxpos;\n\n            if (legendWidth < xpos + maxwidth) {\n              legendWidth = xpos + maxwidth;\n            }\n\n            return 'translate(' + xpos + ',' + ypos + ')';\n          }); //position legend as far right as possible within the total width\n\n          g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n          height = margin.top + margin.bottom + ypos + 15;\n        }\n\n        if (vers == 'furious') {\n          // Size rectangles after text is placed\n          seriesShape.attr('width', function (d, i) {\n            return seriesText[0][i].getComputedTextLength() + 27;\n          }).attr('height', 18).attr('y', -9).attr('x', -15); // The background for the expanded legend (UI)\n\n          gEnter.insert('rect', ':first-child').attr('class', 'nv-legend-bg').attr('fill', '#eee') // .attr('stroke', '#444')\n          .attr('opacity', 0);\n          var seriesBG = g.select('.nv-legend-bg');\n          seriesBG.transition().duration(300).attr('x', -versPadding).attr('width', legendWidth + versPadding - 12).attr('height', height + 10).attr('y', -margin.top - 10).attr('opacity', expanded ? 1 : 0);\n        }\n\n        seriesShape.style('fill', setBGColor).style('fill-opacity', setBGOpacity).style('stroke', setBGColor);\n      });\n\n      function setTextColor(d, i) {\n        if (vers != 'furious') return '#000';\n\n        if (expanded) {\n          return d.disengaged ? '#000' : '#fff';\n        } else if (!expanded) {\n          if (!d.color) d.color = color(d, i);\n          return !!d.disabled ? d.color : '#fff';\n        }\n      }\n\n      function setBGColor(d, i) {\n        if (expanded && vers == 'furious') {\n          return d.disengaged ? '#eee' : d.color || color(d, i);\n        } else {\n          return d.color || color(d, i);\n        }\n      }\n\n      function setBGOpacity(d, i) {\n        if (expanded && vers == 'furious') {\n          return 1;\n        } else {\n          return !!d.disabled ? 0 : 1;\n        }\n      }\n\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return getKey;\n        },\n        set: function set(_) {\n          getKey = _;\n        }\n      },\n      keyFormatter: {\n        get: function get() {\n          return keyFormatter;\n        },\n        set: function set(_) {\n          keyFormatter = _;\n        }\n      },\n      align: {\n        get: function get() {\n          return align;\n        },\n        set: function set(_) {\n          align = _;\n        }\n      },\n      maxKeyLength: {\n        get: function get() {\n          return maxKeyLength;\n        },\n        set: function set(_) {\n          maxKeyLength = _;\n        }\n      },\n      rightAlign: {\n        get: function get() {\n          return rightAlign;\n        },\n        set: function set(_) {\n          rightAlign = _;\n        }\n      },\n      padding: {\n        get: function get() {\n          return padding;\n        },\n        set: function set(_) {\n          padding = _;\n        }\n      },\n      updateState: {\n        get: function get() {\n          return updateState;\n        },\n        set: function set(_) {\n          updateState = _;\n        }\n      },\n      enableDoubleClick: {\n        get: function get() {\n          return enableDoubleClick;\n        },\n        set: function set(_) {\n          enableDoubleClick = _;\n        }\n      },\n      radioButtonMode: {\n        get: function get() {\n          return radioButtonMode;\n        },\n        set: function set(_) {\n          radioButtonMode = _;\n        }\n      },\n      expanded: {\n        get: function get() {\n          return expanded;\n        },\n        set: function set(_) {\n          expanded = _;\n        }\n      },\n      vers: {\n        get: function get() {\n          return vers;\n        },\n        set: function set(_) {\n          vers = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.line = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter = nv.models.scatter();\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        container = null,\n        strokeWidth = 1.5,\n        color = nv.utils.defaultColor() // a function that returns a color\n    ,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value from a data point\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value from a data point\n    ,\n        defined = function defined(d, i) {\n      return !isNaN(getY(d, i)) && getY(d, i) !== null;\n    } // allows a line to be not continuous when it is not defined\n    ,\n        isArea = function isArea(d) {\n      return d.area;\n    } // decides if a line is an area or just a line\n    ,\n        clipEdge = false // if true, masks lines within x and y scale\n    ,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        interpolate = \"linear\" // controls the line interpolation\n    ,\n        duration = 250,\n        dispatch = d3.dispatch('elementClick', 'elementMouseover', 'elementMouseout', 'renderEnd');\n\n    scatter.pointSize(16) // default size\n    .pointDomain([16, 256]) //set to speed up calculation, needs to be unset if there is a custom size accessor\n    ; //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0,\n        y0 //used to store previous scales\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration); //============================================================\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x = scatter.xScale();\n        y = scatter.yScale();\n        x0 = x0 || x;\n        y0 = y0 || y; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-line').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-line');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        scatter.width(availableWidth).height(availableHeight);\n        var scatterWrap = wrap.select('.nv-scatterWrap');\n        scatterWrap.call(scatter);\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + scatter.id()).append('rect');\n        wrap.select('#nv-edge-clip-' + scatter.id() + ' rect').attr('width', availableWidth).attr('height', availableHeight > 0 ? availableHeight : 0);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n        scatterWrap.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + scatter.id() + ')' : '');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('stroke-width', function (d) {\n          return d.strokeWidth || strokeWidth;\n        }).style('fill-opacity', 1e-6);\n        groups.exit().remove();\n        groups.attr('class', function (d, i) {\n          return (d.classed || '') + ' nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.watchTransition(renderWatch, 'line: groups').style('stroke-opacity', 1).style('fill-opacity', function (d) {\n          return d.fillOpacity || .5;\n        });\n        var areaPaths = groups.selectAll('path.nv-area').data(function (d) {\n          return isArea(d) ? [d] : [];\n        }); // this is done differently than lines because I need to check if series is an area\n\n        areaPaths.enter().append('path').attr('class', 'nv-area').attr('d', function (d) {\n          return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) {\n            return nv.utils.NaNtoZero(x0(getX(d, i)));\n          }).y0(function (d, i) {\n            return nv.utils.NaNtoZero(y0(getY(d, i)));\n          }).y1(function (d, i) {\n            return y0(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]);\n          }) //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n          .apply(this, [d.values]);\n        });\n        groups.exit().selectAll('path.nv-area').remove();\n        areaPaths.watchTransition(renderWatch, 'line: areaPaths').attr('d', function (d) {\n          return d3.svg.area().interpolate(interpolate).defined(defined).x(function (d, i) {\n            return nv.utils.NaNtoZero(x(getX(d, i)));\n          }).y0(function (d, i) {\n            return nv.utils.NaNtoZero(y(getY(d, i)));\n          }).y1(function (d, i) {\n            return y(y.domain()[0] <= 0 ? y.domain()[1] >= 0 ? 0 : y.domain()[1] : y.domain()[0]);\n          }) //.y1(function(d,i) { return y0(0) }) //assuming 0 is within y domain.. may need to tweak this\n          .apply(this, [d.values]);\n        });\n        var linePaths = groups.selectAll('path.nv-line').data(function (d) {\n          return [d.values];\n        });\n        linePaths.enter().append('path').attr('class', 'nv-line').attr('d', d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) {\n          return nv.utils.NaNtoZero(x0(getX(d, i)));\n        }).y(function (d, i) {\n          return nv.utils.NaNtoZero(y0(getY(d, i)));\n        }));\n        linePaths.watchTransition(renderWatch, 'line: linePaths').attr('d', d3.svg.line().interpolate(interpolate).defined(defined).x(function (d, i) {\n          return nv.utils.NaNtoZero(x(getX(d, i)));\n        }).y(function (d, i) {\n          return nv.utils.NaNtoZero(y(getY(d, i)));\n        })); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('line immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter; // Pass through events\n\n    scatter.dispatch.on('elementClick', function () {\n      dispatch.elementClick.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseover', function () {\n      dispatch.elementMouseover.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseout', function () {\n      dispatch.elementMouseout.apply(this, arguments);\n    });\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      defined: {\n        get: function get() {\n          return defined;\n        },\n        set: function set(_) {\n          defined = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          scatter.duration(duration);\n        }\n      },\n      isArea: {\n        get: function get() {\n          return isArea;\n        },\n        set: function set(_) {\n          isArea = d3.functor(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          scatter.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          scatter.y(_);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          scatter.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.lineChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip(),\n        focus = nv.models.focus(nv.models.line());\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        useInteractiveGuideline = false,\n        x,\n        y,\n        focusEnable = false,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        duration = 250; // set options on sub-objects for this chart\n\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    lines.clipEdge(true).duration(0);\n    tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(lines);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n        /* Update `main' graph on brush update. */\n\n\n        focus.dispatch.on(\"onBrush\", function (extent) {\n          onBrush(extent);\n        }); // Setup Scales\n\n        x = lines.xScale();\n        y = lines.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-lineChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-lineChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-background').append('rect');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y nv-axis');\n        focusEnter.append('g').attr('class', 'nv-linesWrap');\n        focusEnter.append('g').attr('class', 'nv-interactive');\n        var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            }\n\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        g.select('.nv-focus .nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        lines.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var linesWrap = g.select('.nv-linesWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })); // Setup Main (Focus) Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n        } //============================================================\n        // Update Axes\n        //============================================================\n\n\n        function updateXAxis() {\n          if (showXAxis) {\n            g.select('.nv-focus .nv-x.nv-axis').transition().duration(duration).call(xAxis);\n          }\n        }\n\n        function updateYAxis() {\n          if (showYAxis) {\n            g.select('.nv-focus .nv-y.nv-axis').transition().duration(duration).call(yAxis);\n          }\n        }\n\n        g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')'); //============================================================\n        // Update Focus\n        //============================================================\n\n        if (!focusEnable && focus.brush.extent() === null) {\n          linesWrap.call(lines);\n          updateXAxis();\n          updateYAxis();\n        } else {\n          focus.width(availableWidth);\n          g.select('.nv-focusWrap').style('display', focusEnable ? 'initial' : 'none').attr('transform', 'translate(0,' + (availableHeight + margin.bottom + focus.margin().top) + ')').call(focus);\n          var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\n          if (extent !== null) {\n            onBrush(extent);\n          }\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          lines.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled && !series.disableTooltip;\n          }).forEach(function (series, i) {\n            var extent = focus.brush.extent() !== null ? focus.brush.empty() ? focus.xScale().domain() : focus.brush.extent() : x.domain();\n            var currentValues = series.values.filter(function (d, i) {\n              // Checks if the x point is between the extents, handling case where extent[0] is greater than extent[1]\n              // (e.g. x domain is manually set to reverse the x-axis)\n              if (extent[0] <= extent[1]) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              } else {\n                return lines.x()(d, i) >= extent[1] && lines.x()(d, i) <= extent[0];\n              }\n            });\n            pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, lines.x());\n            var point = currentValues[pointIndex];\n            var pointYValue = chart.y()(point, pointIndex);\n\n            if (pointYValue !== null) {\n              lines.highlightPoint(i, pointIndex, true);\n            }\n\n            if (point === undefined) return;\n            if (singlePoint === undefined) singlePoint = point;\n            if (pointXLocation === undefined) pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            allData.push({\n              key: series.key,\n              value: pointYValue,\n              color: color(series, series.seriesIndex),\n              data: point\n            });\n          }); //Highlight the tooltip entry based on which point the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var domainExtent = Math.abs(chart.yScale().domain()[0] - chart.yScale().domain()[1]);\n            var threshold = 0.03 * domainExtent;\n            var indexToHighlight = nv.nearestValueIndex(allData.map(function (d) {\n              return d.value;\n            }), yValue, threshold);\n            if (indexToHighlight !== null) allData[indexToHighlight].highlight = true;\n          }\n\n          var defaultValueFormatter = function defaultValueFormatter(d, i) {\n            return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n          };\n\n          interactiveLayer.tooltip.valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter).data({\n            value: chart.x()(singlePoint, pointIndex),\n            index: pointIndex,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on('elementClick', function (e) {\n          var pointXLocation,\n              allData = [];\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series) {\n            var pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            var point = series.values[pointIndex];\n            if (typeof point === 'undefined') return;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex));\n            var yPos = chart.yScale()(chart.y()(point, pointIndex));\n            allData.push({\n              point: point,\n              pointIndex: pointIndex,\n              pos: [pointXLocation, yPos],\n              seriesIndex: series.seriesIndex,\n              series: series\n            });\n          });\n          lines.dispatch.elementClick(allData);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          lines.clearHighlights();\n        });\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight / 3;\n          return 'M' + 0.5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + 0.5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function onBrush(extent) {\n          // Update Main (Focus)\n          var focusLinesWrap = g.select('.nv-focus .nv-linesWrap').datum(data.filter(function (d) {\n            return !d.disabled;\n          }).map(function (d, i) {\n            return {\n              key: d.key,\n              area: d.area,\n              classed: d.classed,\n              values: d.values.filter(function (d, i) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              }),\n              disableTooltip: d.disableTooltip\n            };\n          }));\n          focusLinesWrap.transition().duration(duration).call(lines); // Update Main (Focus) Axes\n\n          updateXAxis();\n          updateYAxis();\n        }\n      });\n      renderWatch.renderEnd('lineChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      if (!evt.series.disableTooltip) {\n        tooltip.data(evt).hidden(false);\n      }\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.lines = lines;\n    chart.legend = legend;\n    chart.focus = focus;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.state = state;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // Focus options, mostly passed onto focus model.\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focus.height();\n        },\n        set: function set(_) {\n          focus.height(_);\n        }\n      },\n      focusShowAxisX: {\n        get: function get() {\n          return focus.showXAxis();\n        },\n        set: function set(_) {\n          focus.showXAxis(_);\n        }\n      },\n      focusShowAxisY: {\n        get: function get() {\n          return focus.showYAxis();\n        },\n        set: function set(_) {\n          focus.showYAxis(_);\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return focus.brushExtent();\n        },\n        set: function set(_) {\n          focus.brushExtent(_);\n        }\n      },\n      // options that require extra logic in the setter\n      focusMargin: {\n        get: function get() {\n          return focus.margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          focus.margin.right = _.right !== undefined ? _.right : focus.margin.right;\n          focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n          focus.margin.left = _.left !== undefined ? _.left : focus.margin.left;\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          lines.duration(duration);\n          focus.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          lines.color(color);\n          focus.color(color);\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return lines.interpolate();\n        },\n        set: function set(_) {\n          lines.interpolate(_);\n          focus.interpolate(_);\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xAxis.tickFormat();\n        },\n        set: function set(_) {\n          xAxis.tickFormat(_);\n          focus.xTickFormat(_);\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yAxis.tickFormat();\n        },\n        set: function set(_) {\n          yAxis.tickFormat(_);\n          focus.yTickFormat(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return lines.x();\n        },\n        set: function set(_) {\n          lines.x(_);\n          focus.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return lines.y();\n        },\n        set: function set(_) {\n          lines.y(_);\n          focus.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (useInteractiveGuideline) {\n            lines.interactive(false);\n            lines.useVoronoi(false);\n          }\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.lineWithFocusChart = function () {\n    return nv.models.lineChart().margin({\n      bottom: 30\n    }).focusEnable(true);\n  };\n\n  nv.models.linePlusBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var lines = nv.models.line(),\n        lines2 = nv.models.line(),\n        bars = nv.models.historicalBar(),\n        bars2 = nv.models.historicalBar(),\n        xAxis = nv.models.axis(),\n        x2Axis = nv.models.axis(),\n        y1Axis = nv.models.axis(),\n        y2Axis = nv.models.axis(),\n        y3Axis = nv.models.axis(),\n        y4Axis = nv.models.axis(),\n        legend = nv.models.legend(),\n        brush = d3.svg.brush(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 30,\n      left: 60\n    },\n        marginTop = null,\n        margin2 = {\n      top: 0,\n      right: 30,\n      bottom: 20,\n      left: 60\n    },\n        width = null,\n        height = null,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        color = nv.utils.defaultColor(),\n        showLegend = true,\n        focusEnable = true,\n        focusShowAxisY = false,\n        focusShowAxisX = true,\n        focusHeight = 50,\n        extent,\n        brushExtent = null,\n        x,\n        x2,\n        y1,\n        y2,\n        y3,\n        y4,\n        noData = null,\n        dispatch = d3.dispatch('brush', 'stateChange', 'changeState'),\n        transitionDuration = 0,\n        state = nv.utils.state(),\n        defaultState = null,\n        legendLeftAxisHint = ' (left axis)',\n        legendRightAxisHint = ' (right axis)',\n        switchYAxisOrder = false;\n\n    lines.clipEdge(true);\n    lines2.interactive(false); // We don't want any points emitted for the focus chart's scatter graph.\n\n    lines2.pointActive(function (d) {\n      return false;\n    });\n    xAxis.orient('bottom').tickPadding(5);\n    y1Axis.orient('left');\n    y2Axis.orient('right');\n    x2Axis.orient('bottom').tickPadding(5);\n    y3Axis.orient('left');\n    y4Axis.orient('right');\n    tooltip.headerEnabled(true).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var getBarsAxis = function getBarsAxis() {\n      return switchYAxisOrder ? {\n        main: y2Axis,\n        focus: y4Axis\n      } : {\n        main: y1Axis,\n        focus: y3Axis\n      };\n    };\n\n    var getLinesAxis = function getLinesAxis() {\n      return switchYAxisOrder ? {\n        main: y1Axis,\n        focus: y3Axis\n      } : {\n        main: y2Axis,\n        focus: y4Axis\n      };\n    };\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var allDisabled = function allDisabled(data) {\n      return data.every(function (series) {\n        return series.disabled;\n      });\n    };\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight1 = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focusHeight : 0),\n            availableHeight2 = focusHeight - margin2.top - margin2.bottom;\n\n        chart.update = function () {\n          container.transition().duration(transitionDuration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        var dataBars = data.filter(function (d) {\n          return !d.disabled && d.bar;\n        });\n        var dataLines = data.filter(function (d) {\n          return !d.bar;\n        }); // removed the !d.disabled clause here to fix Issue #240\n\n        if (dataBars.length && !switchYAxisOrder) {\n          x = bars.xScale();\n        } else {\n          x = lines.xScale();\n        }\n\n        x2 = x2Axis.scale(); // select the scales and series based on the position of the yAxis\n\n        y1 = switchYAxisOrder ? lines.yScale() : bars.yScale();\n        y2 = switchYAxisOrder ? bars.yScale() : lines.yScale();\n        y3 = switchYAxisOrder ? lines2.yScale() : bars2.yScale();\n        y4 = switchYAxisOrder ? bars2.yScale() : lines2.yScale();\n        var series1 = data.filter(function (d) {\n          return !d.disabled && (switchYAxisOrder ? !d.bar : d.bar);\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i)\n            };\n          });\n        });\n        var series2 = data.filter(function (d) {\n          return !d.disabled && (switchYAxisOrder ? d.bar : !d.bar);\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i)\n            };\n          });\n        });\n        x.range([0, availableWidth]);\n        x2.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) {\n          return d.x;\n        })).range([0, availableWidth]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-linePlusBar').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-linePlusBar').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap'); // this is the main chart\n\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        focusEnter.append('g').attr('class', 'nv-barsWrap');\n        focusEnter.append('g').attr('class', 'nv-linesWrap'); // context chart is where you can focus in\n\n        var contextEnter = gEnter.append('g').attr('class', 'nv-context');\n        contextEnter.append('g').attr('class', 'nv-x nv-axis');\n        contextEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        contextEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        contextEnter.append('g').attr('class', 'nv-barsWrap');\n        contextEnter.append('g').attr('class', 'nv-linesWrap');\n        contextEnter.append('g').attr('class', 'nv-brushBackground');\n        contextEnter.append('g').attr('class', 'nv-x nv-brush'); //============================================================\n        // Legend\n        //------------------------------------------------------------\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n          var legendXPosition = legend.align() ? legendWidth : 0;\n          legend.width(legendWidth);\n          g.select('.nv-legendWrap').datum(data.map(function (series) {\n            series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n\n            if (switchYAxisOrder) {\n              series.key = series.originalKey + (series.bar ? legendRightAxisHint : legendLeftAxisHint);\n            } else {\n              series.key = series.originalKey + (series.bar ? legendLeftAxisHint : legendRightAxisHint);\n            }\n\n            return series;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height(); // FIXME: shouldn't this be \"- (focusEnabled ? focusHeight : 0)\"?\n\n            availableHeight1 = nv.utils.availableHeight(height, container, margin) - focusHeight;\n          }\n\n          g.select('.nv-legendWrap').attr('transform', 'translate(' + legendXPosition + ',' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); //============================================================\n        // Context chart (focus chart) components\n        //------------------------------------------------------------\n        // hide or show the focus context chart\n\n        g.select('.nv-context').style('display', focusEnable ? 'initial' : 'none');\n        bars2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && data[i].bar;\n        }));\n        lines2.width(availableWidth).height(availableHeight2).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled && !data[i].bar;\n        }));\n        var bars2Wrap = g.select('.nv-context .nv-barsWrap').datum(dataBars.length ? dataBars : [{\n          values: []\n        }]);\n        var lines2Wrap = g.select('.nv-context .nv-linesWrap').datum(allDisabled(dataLines) ? [{\n          values: []\n        }] : dataLines.filter(function (dataLine) {\n          return !dataLine.disabled;\n        }));\n        g.select('.nv-context').attr('transform', 'translate(0,' + (availableHeight1 + margin.bottom + margin2.top) + ')');\n        bars2Wrap.transition().call(bars2);\n        lines2Wrap.transition().call(lines2); // context (focus chart) axis controls\n\n        if (focusShowAxisX) {\n          x2Axis._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight2, 0);\n\n          g.select('.nv-context .nv-x.nv-axis').attr('transform', 'translate(0,' + y3.range()[0] + ')');\n          g.select('.nv-context .nv-x.nv-axis').transition().call(x2Axis);\n        }\n\n        if (focusShowAxisY) {\n          y3Axis.scale(y3)._ticks(availableHeight2 / 36).tickSize(-availableWidth, 0);\n\n          y4Axis.scale(y4)._ticks(availableHeight2 / 36).tickSize(dataBars.length ? 0 : -availableWidth, 0); // Show the y2 rules only if y1 has none\n\n\n          g.select('.nv-context .nv-y3.nv-axis').style('opacity', dataBars.length ? 1 : 0).attr('transform', 'translate(0,' + x2.range()[0] + ')');\n          g.select('.nv-context .nv-y2.nv-axis').style('opacity', dataLines.length ? 1 : 0).attr('transform', 'translate(' + x2.range()[1] + ',0)');\n          g.select('.nv-context .nv-y1.nv-axis').transition().call(y3Axis);\n          g.select('.nv-context .nv-y2.nv-axis').transition().call(y4Axis);\n        } // Setup Brush\n\n\n        brush.x(x2).on('brush', onBrush);\n        if (brushExtent) brush.extent(brushExtent);\n        var brushBG = g.select('.nv-brushBackground').selectAll('g').data([brushExtent || brush.extent()]);\n        var brushBGenter = brushBG.enter().append('g');\n        brushBGenter.append('rect').attr('class', 'left').attr('x', 0).attr('y', 0).attr('height', availableHeight2);\n        brushBGenter.append('rect').attr('class', 'right').attr('x', 0).attr('y', 0).attr('height', availableHeight2);\n        var gBrush = g.select('.nv-x.nv-brush').call(brush);\n        gBrush.selectAll('rect') //.attr('y', -5)\n        .attr('height', availableHeight2);\n        gBrush.selectAll('.resize').append('path').attr('d', resizePath); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n        // Taken from crossfilter (http://square.github.com/crossfilter/)\n\n        function resizePath(d) {\n          var e = +(d == 'e'),\n              x = e ? 1 : -1,\n              y = availableHeight2 / 3;\n          return 'M' + .5 * x + ',' + y + 'A6,6 0 0 ' + e + ' ' + 6.5 * x + ',' + (y + 6) + 'V' + (2 * y - 6) + 'A6,6 0 0 ' + e + ' ' + .5 * x + ',' + 2 * y + 'Z' + 'M' + 2.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8) + 'M' + 4.5 * x + ',' + (y + 8) + 'V' + (2 * y - 8);\n        }\n\n        function updateBrushBG() {\n          if (!brush.empty()) brush.extent(brushExtent);\n          brushBG.data([brush.empty() ? x2.domain() : brushExtent]).each(function (d, i) {\n            var leftWidth = x2(d[0]) - x2.range()[0],\n                rightWidth = x2.range()[1] - x2(d[1]);\n            d3.select(this).select('.left').attr('width', leftWidth < 0 ? 0 : leftWidth);\n            d3.select(this).select('.right').attr('x', x2(d[1])).attr('width', rightWidth < 0 ? 0 : rightWidth);\n          });\n        }\n\n        function onBrush() {\n          brushExtent = brush.empty() ? null : brush.extent();\n          extent = brush.empty() ? x2.domain() : brush.extent();\n          dispatch.brush({\n            extent: extent,\n            brush: brush\n          });\n          updateBrushBG(); // Prepare Main (Focus) Bars and Lines\n\n          bars.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled && data[i].bar;\n          }));\n          lines.width(availableWidth).height(availableHeight1).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled && !data[i].bar;\n          }));\n          var focusBarsWrap = g.select('.nv-focus .nv-barsWrap').datum(!dataBars.length ? [{\n            values: []\n          }] : dataBars.map(function (d, i) {\n            return {\n              key: d.key,\n              values: d.values.filter(function (d, i) {\n                return bars.x()(d, i) >= extent[0] && bars.x()(d, i) <= extent[1];\n              })\n            };\n          }));\n          var focusLinesWrap = g.select('.nv-focus .nv-linesWrap').datum(allDisabled(dataLines) ? [{\n            values: []\n          }] : dataLines.filter(function (dataLine) {\n            return !dataLine.disabled;\n          }).map(function (d, i) {\n            return {\n              area: d.area,\n              fillOpacity: d.fillOpacity,\n              strokeWidth: d.strokeWidth,\n              key: d.key,\n              values: d.values.filter(function (d, i) {\n                return lines.x()(d, i) >= extent[0] && lines.x()(d, i) <= extent[1];\n              })\n            };\n          })); // Update Main (Focus) X Axis\n\n          if (dataBars.length && !switchYAxisOrder) {\n            x = bars.xScale();\n          } else {\n            x = lines.xScale();\n          }\n\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight1, 0);\n\n          xAxis.domain([Math.ceil(extent[0]), Math.floor(extent[1])]);\n          g.select('.nv-x.nv-axis').transition().duration(transitionDuration).call(xAxis); // Update Main (Focus) Bars and Lines\n\n          focusBarsWrap.transition().duration(transitionDuration).call(bars);\n          focusLinesWrap.transition().duration(transitionDuration).call(lines); // Setup and Update Main (Focus) Y Axes\n\n          g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + y1.range()[0] + ')');\n\n          y1Axis.scale(y1)._ticks(nv.utils.calcTicksY(availableHeight1 / 36, data)).tickSize(-availableWidth, 0);\n\n          y2Axis.scale(y2)._ticks(nv.utils.calcTicksY(availableHeight1 / 36, data)); // Show the y2 rules only if y1 has none\n\n\n          if (!switchYAxisOrder) {\n            y2Axis.tickSize(dataBars.length ? 0 : -availableWidth, 0);\n          } else {\n            y2Axis.tickSize(dataLines.length ? 0 : -availableWidth, 0);\n          } // Calculate opacity of the axis\n\n\n          var barsOpacity = dataBars.length ? 1 : 0;\n          var linesOpacity = dataLines.length && !allDisabled(dataLines) ? 1 : 0;\n          var y1Opacity = switchYAxisOrder ? linesOpacity : barsOpacity;\n          var y2Opacity = switchYAxisOrder ? barsOpacity : linesOpacity;\n          g.select('.nv-focus .nv-y1.nv-axis').style('opacity', y1Opacity);\n          g.select('.nv-focus .nv-y2.nv-axis').style('opacity', y2Opacity).attr('transform', 'translate(' + x.range()[1] + ',0)');\n          g.select('.nv-focus .nv-y1.nv-axis').transition().duration(transitionDuration).call(y1Axis);\n          g.select('.nv-focus .nv-y2.nv-axis').transition().duration(transitionDuration).call(y2Axis);\n        }\n\n        onBrush();\n      });\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    lines.dispatch.on('elementMouseover.tooltip', function (evt) {\n      tooltip.duration(100).valueFormatter(function (d, i) {\n        return getLinesAxis().main.tickFormat()(d, i);\n      }).data(evt).hidden(false);\n    });\n    lines.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.value = chart.x()(evt.data);\n      evt['series'] = {\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.duration(0).valueFormatter(function (d, i) {\n        return getBarsAxis().main.tickFormat()(d, i);\n      }).data(evt).hidden(false);\n    });\n    bars.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    bars.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines = lines;\n    chart.lines2 = lines2;\n    chart.bars = bars;\n    chart.bars2 = bars2;\n    chart.xAxis = xAxis;\n    chart.x2Axis = x2Axis;\n    chart.y1Axis = y1Axis;\n    chart.y2Axis = y2Axis;\n    chart.y3Axis = y3Axis;\n    chart.y4Axis = y4Axis;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return brushExtent;\n        },\n        set: function set(_) {\n          brushExtent = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focusHeight;\n        },\n        set: function set(_) {\n          focusHeight = _;\n        }\n      },\n      focusShowAxisX: {\n        get: function get() {\n          return focusShowAxisX;\n        },\n        set: function set(_) {\n          focusShowAxisX = _;\n        }\n      },\n      focusShowAxisY: {\n        get: function get() {\n          return focusShowAxisY;\n        },\n        set: function set(_) {\n          focusShowAxisY = _;\n        }\n      },\n      legendLeftAxisHint: {\n        get: function get() {\n          return legendLeftAxisHint;\n        },\n        set: function set(_) {\n          legendLeftAxisHint = _;\n        }\n      },\n      legendRightAxisHint: {\n        get: function get() {\n          return legendRightAxisHint;\n        },\n        set: function set(_) {\n          legendRightAxisHint = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      focusMargin: {\n        get: function get() {\n          return margin2;\n        },\n        set: function set(_) {\n          margin2.top = _.top !== undefined ? _.top : margin2.top;\n          margin2.right = _.right !== undefined ? _.right : margin2.right;\n          margin2.bottom = _.bottom !== undefined ? _.bottom : margin2.bottom;\n          margin2.left = _.left !== undefined ? _.left : margin2.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return transitionDuration;\n        },\n        set: function set(_) {\n          transitionDuration = _;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          lines.x(_);\n          lines2.x(_);\n          bars.x(_);\n          bars2.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          lines.y(_);\n          lines2.y(_);\n          bars.y(_);\n          bars2.y(_);\n        }\n      },\n      switchYAxisOrder: {\n        get: function get() {\n          return switchYAxisOrder;\n        },\n        set: function set(_) {\n          // Switch the tick format for the yAxis\n          if (switchYAxisOrder !== _) {\n            var y1 = y1Axis;\n            y1Axis = y2Axis;\n            y2Axis = y1;\n            var y3 = y3Axis;\n            y3Axis = y4Axis;\n            y4Axis = y3;\n          }\n\n          switchYAxisOrder = _;\n          y1Axis.orient('left');\n          y2Axis.orient('right');\n          y3Axis.orient('left');\n          y4Axis.orient('right');\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, lines);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        clipEdge = true,\n        stacked = false,\n        stackOffset = 'zero' // options include 'silhouette', 'wiggle', 'expand', 'zero', or a custom function\n    ,\n        color = nv.utils.defaultColor(),\n        hideable = false,\n        barColor = null // adding the ability to set the color for each rather than the whole group\n    ,\n        disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n    ,\n        duration = 500,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        groupSpacing = 0.1,\n        fillOpacity = 0.75,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0,\n        y0 //used to store previous scales\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration);\n    var last_datalength = 0;\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var nonStackableCount = 0; // This function defines the requirements for render complete\n\n        var endFn = function endFn(d, i) {\n          if (d.series === data.length - 1 && i === data[0].values.length - 1) return true;\n          return false;\n        };\n\n        if (hideable && data.length) hideable = [{\n          values: data[0].values.map(function (d) {\n            return {\n              x: d.x,\n              y: 0,\n              series: d.series,\n              size: 0.01\n            };\n          })\n        }];\n\n        if (stacked) {\n          var parsed = d3.layout.stack().offset(stackOffset).values(function (d) {\n            return d.values;\n          }).y(getY)(!data.length && hideable ? hideable : data);\n          parsed.forEach(function (series, i) {\n            // if series is non-stackable, use un-parsed data\n            if (series.nonStackable) {\n              data[i].nonStackableSeries = nonStackableCount++;\n              parsed[i] = data[i];\n            } else {\n              // don't stack this seires on top of the nonStackable seriees\n              if (i > 0 && parsed[i - 1].nonStackable) {\n                parsed[i].values.map(function (d, j) {\n                  d.y0 -= parsed[i - 1].values[j].y;\n                  d.y1 = d.y0 + d.y;\n                });\n              }\n            }\n          });\n          data = parsed;\n        } //add series index and key to each data point for reference\n\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n            point.key = series.key;\n          });\n        }); // HACK for negative value stacking\n\n        if (stacked && data.length > 0) {\n          data[0].values.map(function (d, i) {\n            var posBase = 0,\n                negBase = 0;\n            data.map(function (d, idx) {\n              if (!data[idx].nonStackable) {\n                var f = d.values[i];\n                f.size = Math.abs(f.y);\n\n                if (f.y < 0) {\n                  f.y1 = negBase;\n                  negBase = negBase - f.size;\n                } else {\n                  f.y1 = f.size + posBase;\n                  posBase = posBase + f.size;\n                }\n              }\n            });\n          });\n        } // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d, idx) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0,\n              y1: d.y1,\n              idx: idx\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableWidth], groupSpacing);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          var domain = d.y; // increase the domain range if this series is stackable\n\n          if (stacked && !data[d.idx].nonStackable) {\n            if (d.y > 0) {\n              domain = d.y1;\n            } else {\n              domain = d.y1 + d.y;\n            }\n          }\n\n          return domain;\n        }).concat(forceY))).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]);\n        x0 = x0 || x;\n        y0 = y0 || y; // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multibar').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return i;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        var exitTransition = renderWatch.transition(groups.exit().selectAll('rect.nv-bar'), 'multibarExit', Math.min(100, duration)).attr('y', function (d, i, j) {\n          var yVal = y0(0) || 0;\n\n          if (stacked) {\n            if (data[d.series] && !data[d.series].nonStackable) {\n              yVal = y0(d.y0);\n            }\n          }\n\n          return yVal;\n        }).attr('height', 0).remove();\n        if (exitTransition.delay) exitTransition.delay(function (d, i) {\n          var delay = i * (duration / (last_datalength + 1)) - i;\n          return delay;\n        });\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.style('stroke-opacity', 1).style('fill-opacity', fillOpacity);\n        var bars = groups.selectAll('rect.nv-bar').data(function (d) {\n          return hideable && !data.length ? hideable.values : d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('rect').attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).attr('x', function (d, i, j) {\n          return stacked && !data[j].nonStackable ? 0 : j * x.rangeBand() / data.length;\n        }).attr('y', function (d, i, j) {\n          return y0(stacked && !data[j].nonStackable ? d.y0 : 0) || 0;\n        }).attr('height', 0).attr('width', function (d, i, j) {\n          return x.rangeBand() / (stacked && !data[j].nonStackable ? 1 : data.length);\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        });\n        bars.style('fill', function (d, i, j) {\n          return color(d, j, i);\n        }).style('stroke', function (d, i, j) {\n          return color(d, j, i);\n        }).on('mouseover', function (d, i, j) {\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i, j) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i, j) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i, j) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i, j) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            series: data[j],\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',0)';\n        });\n\n        if (barColor) {\n          if (!disabled) disabled = data.map(function () {\n            return true;\n          });\n          bars.style('fill', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          }).style('stroke', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          });\n        }\n\n        var barSelection = bars.watchTransition(renderWatch, 'multibar', Math.min(250, duration)).delay(function (d, i) {\n          return i * duration / data[0].values.length;\n        });\n\n        if (stacked) {\n          barSelection.attr('y', function (d, i, j) {\n            var yVal = 0; // if stackable, stack it on top of the previous series\n\n            if (!data[j].nonStackable) {\n              yVal = y(d.y1);\n            } else {\n              if (getY(d, i) < 0) {\n                yVal = y(0);\n              } else {\n                if (y(0) - y(getY(d, i)) < -1) {\n                  yVal = y(0) - 1;\n                } else {\n                  yVal = y(getY(d, i)) || 0;\n                }\n              }\n            }\n\n            return yVal;\n          }).attr('height', function (d, i, j) {\n            if (!data[j].nonStackable) {\n              return Math.max(Math.abs(y(d.y + d.y0) - y(d.y0)), 0);\n            } else {\n              return Math.max(Math.abs(y(getY(d, i)) - y(0)), 0) || 0;\n            }\n          }).attr('x', function (d, i, j) {\n            var width = 0;\n\n            if (data[j].nonStackable) {\n              width = d.series * x.rangeBand() / data.length;\n\n              if (data.length !== nonStackableCount) {\n                width = data[j].nonStackableSeries * x.rangeBand() / (nonStackableCount * 2);\n              }\n            }\n\n            return width;\n          }).attr('width', function (d, i, j) {\n            if (!data[j].nonStackable) {\n              return x.rangeBand();\n            } else {\n              // if all series are nonStacable, take the full width\n              var width = x.rangeBand() / nonStackableCount; // otherwise, nonStackable graph will be only taking the half-width\n              // of the x rangeBand\n\n              if (data.length !== nonStackableCount) {\n                width = x.rangeBand() / (nonStackableCount * 2);\n              }\n\n              return width;\n            }\n          });\n        } else {\n          barSelection.attr('x', function (d, i) {\n            return d.series * x.rangeBand() / data.length;\n          }).attr('width', x.rangeBand() / data.length).attr('y', function (d, i) {\n            return getY(d, i) < 0 ? y(0) : y(0) - y(getY(d, i)) < 1 ? y(0) - 1 : y(getY(d, i)) || 0;\n          }).attr('height', function (d, i) {\n            return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) || 0;\n          });\n        } //store old scales for use in transitions on update\n\n\n        x0 = x.copy();\n        y0 = y.copy(); // keep track of the last data value length for transition calculations\n\n        if (data[0] && data[0].values) {\n          last_datalength = data[0].values.length;\n        }\n      });\n      renderWatch.renderEnd('multibar immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      stacked: {\n        get: function get() {\n          return stacked;\n        },\n        set: function set(_) {\n          stacked = _;\n        }\n      },\n      stackOffset: {\n        get: function get() {\n          return stackOffset;\n        },\n        set: function set(_) {\n          stackOffset = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      disabled: {\n        get: function get() {\n          return disabled;\n        },\n        set: function set(_) {\n          disabled = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      hideable: {\n        get: function get() {\n          return hideable;\n        },\n        set: function set(_) {\n          hideable = _;\n        }\n      },\n      groupSpacing: {\n        get: function get() {\n          return groupSpacing;\n        },\n        set: function set(_) {\n          groupSpacing = _;\n        }\n      },\n      fillOpacity: {\n        get: function get() {\n          return fillOpacity;\n        },\n        set: function set(_) {\n          fillOpacity = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return barColor;\n        },\n        set: function set(_) {\n          barColor = _ ? nv.utils.getColor(_) : null;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBar(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        interactiveLayer = nv.interactiveGuideline(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        controlLabels = {},\n        showLegend = true,\n        legendPosition = null,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        reduceXTicks = true // if false a tick will show for every data point\n    ,\n        staggerLabels = false,\n        wrapLabels = false,\n        rotateLabels = 0,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    },\n        duration = 250,\n        useInteractiveGuideline = false;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(false);\n    xAxis.orient('bottom').tickPadding(7).showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var stacked = false;\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          stacked: stacked\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.stacked !== undefined) stacked = state.stacked;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(multibar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = multibar.xScale();\n        y = multibar.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multiBarWithLegend').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarWithLegend').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap');\n        gEnter.append('g').attr('class', 'nv-interactive'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          if (legendPosition === 'bottom') {\n            legend.width(availableWidth - margin.right);\n            g.select('.nv-legendWrap').datum(data).call(legend);\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')');\n          } else {\n            legend.width(availableWidth - controlWidth());\n            g.select('.nv-legendWrap').datum(data).call(legend);\n\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.grouped || 'Grouped',\n            disabled: multibar.stacked()\n          }, {\n            key: controlLabels.stacked || 'Stacked',\n            disabled: !multibar.stacked()\n          }];\n          controls.width(controlWidth()).color(['#444', '#444', '#444']);\n          g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Main Chart Component(s)\n\n\n        multibar.disabled(data.map(function (series) {\n          return series.disabled;\n        })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.call(multibar); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')');\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis > g').selectAll('g');\n          xTicks.selectAll('line, text').style('opacity', 1);\n\n          if (staggerLabels) {\n            var getTranslate = function getTranslate(x, y) {\n              return \"translate(\" + x + \",\" + y + \")\";\n            };\n\n            var staggerUp = 5,\n                staggerDown = 17; //pixels to stagger by\n            // Issue #140\n\n            xTicks.selectAll(\"text\").attr('transform', function (d, i, j) {\n              return getTranslate(0, j % 2 == 0 ? staggerUp : staggerDown);\n            });\n            var totalInBetweenTicks = d3.selectAll(\".nv-x.nv-axis .nv-wrap g g text\")[0].length;\n            g.selectAll(\".nv-x.nv-axis .nv-axisMaxMin text\").attr(\"transform\", function (d, i) {\n              return getTranslate(0, i === 0 || totalInBetweenTicks % 2 !== 0 ? staggerDown : staggerUp);\n            });\n          }\n\n          if (wrapLabels) {\n            g.selectAll('.tick text').call(nv.utils.wrapTicks, chart.xAxis.rangeBand());\n          }\n\n          if (reduceXTicks) xTicks.filter(function (d, i) {\n            return i % Math.ceil(data[0].values.length / (availableWidth / 100)) !== 0;\n          }).selectAll('text, line').style('opacity', 0);\n          if (rotateLabels) xTicks.selectAll('.tick text').attr('transform', 'rotate(' + rotateLabels + ' 0,0)').style('text-anchor', rotateLabels > 0 ? 'start' : 'end');\n          g.select('.nv-x.nv-axis').selectAll('g.nv-axisMaxMin text').style('opacity', 1);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n\n          switch (d.key) {\n            case 'Grouped':\n            case controlLabels.grouped:\n              multibar.stacked(false);\n              break;\n\n            case 'Stacked':\n            case controlLabels.stacked:\n              multibar.stacked(true);\n              break;\n          }\n\n          state.stacked = multibar.stacked();\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.stacked !== 'undefined') {\n            multibar.stacked(e.stacked);\n            state.stacked = e.stacked;\n            stacked = e.stacked;\n          }\n\n          chart.update();\n        });\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.dispatch.on('elementMousemove', function (e) {\n            if (e.pointXValue == undefined) return;\n            var singlePoint,\n                pointIndex,\n                pointXLocation,\n                xValue,\n                allData = [];\n            data.filter(function (series, i) {\n              series.seriesIndex = i;\n              return !series.disabled;\n            }).forEach(function (series, i) {\n              pointIndex = x.domain().indexOf(e.pointXValue);\n              var point = series.values[pointIndex];\n              if (point === undefined) return;\n              xValue = point.x;\n              if (singlePoint === undefined) singlePoint = point;\n              if (pointXLocation === undefined) pointXLocation = e.mouseX;\n              allData.push({\n                key: series.key,\n                value: chart.y()(point, pointIndex),\n                color: color(series, series.seriesIndex),\n                data: series.values[pointIndex]\n              });\n            });\n            interactiveLayer.tooltip.data({\n              value: xValue,\n              index: pointIndex,\n              series: allData\n            })();\n            interactiveLayer.renderGuideLine(pointXLocation);\n          });\n          interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n            interactiveLayer.tooltip.hidden(true);\n          });\n        } else {\n          multibar.dispatch.on('elementMouseover.tooltip', function (evt) {\n            evt.value = chart.x()(evt.data);\n            evt['series'] = {\n              key: evt.data.key,\n              value: chart.y()(evt.data),\n              color: evt.color\n            };\n            tooltip.data(evt).hidden(false);\n          });\n          multibar.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          multibar.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n        }\n      });\n      renderWatch.renderEnd('multibarchart immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      reduceXTicks: {\n        get: function get() {\n          return reduceXTicks;\n        },\n        set: function set(_) {\n          reduceXTicks = _;\n        }\n      },\n      rotateLabels: {\n        get: function get() {\n          return rotateLabels;\n        },\n        set: function set(_) {\n          rotateLabels = _;\n        }\n      },\n      staggerLabels: {\n        get: function get() {\n          return staggerLabels;\n        },\n        set: function set(_) {\n          staggerLabels = _;\n        }\n      },\n      wrapLabels: {\n        get: function get() {\n          return wrapLabels;\n        },\n        set: function set(_) {\n          wrapLabels = !!_;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          multibar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n        }\n      },\n      barColor: {\n        get: function get() {\n          return multibar.barColor;\n        },\n        set: function set(_) {\n          multibar.barColor(_);\n          legend.color(function (d, i) {\n            return d3.rgb('#ccc').darker(i * 1.5).toString();\n          });\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarHorizontal = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.ordinal(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getYerr = function getYerr(d) {\n      return d.yErr;\n    },\n        forceY = [0] // 0 is forced by default.. this makes sense for the majority of bar graphs... user can always do chart.forceY([]) to remove\n    ,\n        color = nv.utils.defaultColor(),\n        barColor = null // adding the ability to set the color for each rather than the whole group\n    ,\n        disabled // used in conjunction with barColor to communicate from multiBarHorizontalChart what series are disabled\n    ,\n        stacked = false,\n        showValues = false,\n        showBarLabels = false,\n        valuePadding = 60,\n        groupSpacing = 0.1,\n        fillOpacity = 0.75,\n        valueFormat = d3.format(',.2f'),\n        delay = 1200,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        duration = 250,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0, y0; //used to store previous scales\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        if (stacked) data = d3.layout.stack().offset('zero').values(function (d) {\n          return d.values;\n        }).y(getY)(data); //add series index and key to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n            point.key = series.key;\n          });\n        }); // HACK for negative value stacking\n\n        if (stacked) data[0].values.map(function (d, i) {\n          var posBase = 0,\n              negBase = 0;\n          data.map(function (d) {\n            var f = d.values[i];\n            f.size = Math.abs(f.y);\n\n            if (f.y < 0) {\n              f.y1 = negBase - f.size;\n              negBase = negBase - f.size;\n            } else {\n              f.y1 = posBase;\n              posBase = posBase + f.size;\n            }\n          });\n        }); // Setup Scales\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain ? [] : // if we know xDomain and yDomain, no need to calculate\n        data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              y0: d.y0,\n              y1: d.y1\n            };\n          });\n        });\n        x.domain(xDomain || d3.merge(seriesData).map(function (d) {\n          return d.x;\n        })).rangeBands(xRange || [0, availableHeight], groupSpacing);\n        y.domain(yDomain || d3.extent(d3.merge(seriesData).map(function (d) {\n          return stacked ? d.y > 0 ? d.y1 + d.y : d.y1 : d.y;\n        }).concat(forceY)));\n        if (showValues && !stacked) y.range(yRange || [y.domain()[0] < 0 ? valuePadding : 0, availableWidth - (y.domain()[1] > 0 ? valuePadding : 0)]);else y.range(yRange || [0, availableWidth]);\n        x0 = x0 || x;\n        y0 = y0 || d3.scale.linear().domain(y.domain()).range([y(0), y(0)]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-multibarHorizontal').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multibarHorizontal');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-groups');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d, i) {\n          return i;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().watchTransition(renderWatch, 'multibarhorizontal: exit groups').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6).remove();\n        groups.attr('class', function (d, i) {\n          return 'nv-group nv-series-' + i;\n        }).classed('hover', function (d) {\n          return d.hover;\n        }).style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return color(d, i);\n        });\n        groups.watchTransition(renderWatch, 'multibarhorizontal: groups').style('stroke-opacity', 1).style('fill-opacity', fillOpacity);\n        var bars = groups.selectAll('g.nv-bar').data(function (d) {\n          return d.values;\n        });\n        bars.exit().remove();\n        var barsEnter = bars.enter().append('g').attr('transform', function (d, i, j) {\n          return 'translate(' + y0(stacked ? d.y0 : 0) + ',' + (stacked ? 0 : j * x.rangeBand() / data.length + x(getX(d, i))) + ')';\n        });\n        barsEnter.append('rect').attr('width', 0).attr('height', x.rangeBand() / (stacked ? 1 : data.length));\n        bars.on('mouseover', function (d, i) {\n          //TODO: figure out why j works above, but not here\n          d3.select(this).classed('hover', true);\n          dispatch.elementMouseover({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mouseout', function (d, i) {\n          dispatch.elementMouseout({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        }).on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n          d3.event.stopPropagation();\n        }).on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n          d3.event.stopPropagation();\n        });\n\n        if (getYerr(data[0], 0)) {\n          barsEnter.append('polyline');\n          bars.select('polyline').attr('fill', 'none').attr('points', function (d, i) {\n            var xerr = getYerr(d, i),\n                mid = 0.8 * x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n            xerr = xerr.length ? xerr : [-Math.abs(xerr), Math.abs(xerr)];\n            xerr = xerr.map(function (e) {\n              return y(e + (getY(d, i) < 0 ? 0 : getY(d, i))) - y(0);\n            });\n            var a = [[xerr[0], -mid], [xerr[0], mid], [xerr[0], 0], [xerr[1], 0], [xerr[1], -mid], [xerr[1], mid]];\n            return a.map(function (path) {\n              return path.join(',');\n            }).join(' ');\n          }).attr('transform', function (d, i) {\n            var mid = x.rangeBand() / ((stacked ? 1 : data.length) * 2);\n            return 'translate(0, ' + mid + ')';\n          });\n        }\n\n        barsEnter.append('text');\n\n        if (showValues && !stacked) {\n          bars.select('text').attr('text-anchor', function (d, i) {\n            return getY(d, i) < 0 ? 'end' : 'start';\n          }).attr('y', x.rangeBand() / (data.length * 2)).attr('dy', '.32em').text(function (d, i) {\n            var t = valueFormat(getY(d, i)),\n                yerr = getYerr(d, i);\n            if (yerr === undefined) return t;\n            if (!yerr.length) return t + '±' + valueFormat(Math.abs(yerr));\n            return t + '+' + valueFormat(Math.abs(yerr[1])) + '-' + valueFormat(Math.abs(yerr[0]));\n          });\n          bars.watchTransition(renderWatch, 'multibarhorizontal: bars').select('text').attr('x', function (d, i) {\n            return getY(d, i) < 0 ? -4 : y(getY(d, i)) - y(0) + 4;\n          });\n        } else {\n          bars.selectAll('text').text('');\n        }\n\n        if (showBarLabels && !stacked) {\n          barsEnter.append('text').classed('nv-bar-label', true);\n          bars.select('text.nv-bar-label').attr('text-anchor', function (d, i) {\n            return getY(d, i) < 0 ? 'start' : 'end';\n          }).attr('y', x.rangeBand() / (data.length * 2)).attr('dy', '.32em').text(function (d, i) {\n            return getX(d, i);\n          });\n          bars.watchTransition(renderWatch, 'multibarhorizontal: bars').select('text.nv-bar-label').attr('x', function (d, i) {\n            return getY(d, i) < 0 ? y(0) - y(getY(d, i)) + 4 : -4;\n          });\n        } else {\n          bars.selectAll('text.nv-bar-label').text('');\n        }\n\n        bars.attr('class', function (d, i) {\n          return getY(d, i) < 0 ? 'nv-bar negative' : 'nv-bar positive';\n        });\n\n        if (barColor) {\n          if (!disabled) disabled = data.map(function () {\n            return true;\n          });\n          bars.style('fill', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          }).style('stroke', function (d, i, j) {\n            return d3.rgb(barColor(d, i)).darker(disabled.map(function (d, i) {\n              return i;\n            }).filter(function (d, i) {\n              return !disabled[i];\n            })[j]).toString();\n          });\n        }\n\n        if (stacked) bars.watchTransition(renderWatch, 'multibarhorizontal: bars').attr('transform', function (d, i) {\n          return 'translate(' + y(d.y1) + ',' + x(getX(d, i)) + ')';\n        }).select('rect').attr('width', function (d, i) {\n          return Math.abs(y(getY(d, i) + d.y0) - y(d.y0)) || 0;\n        }).attr('height', x.rangeBand());else bars.watchTransition(renderWatch, 'multibarhorizontal: bars').attr('transform', function (d, i) {\n          //TODO: stacked must be all positive or all negative, not both?\n          return 'translate(' + (getY(d, i) < 0 ? y(getY(d, i)) : y(0)) + ',' + (d.series * x.rangeBand() / data.length + x(getX(d, i))) + ')';\n        }).select('rect').attr('height', x.rangeBand() / data.length).attr('width', function (d, i) {\n          return Math.max(Math.abs(y(getY(d, i)) - y(0)), 1) || 0;\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('multibarHorizontal immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      yErr: {\n        get: function get() {\n          return getYerr;\n        },\n        set: function set(_) {\n          getYerr = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      stacked: {\n        get: function get() {\n          return stacked;\n        },\n        set: function set(_) {\n          stacked = _;\n        }\n      },\n      showValues: {\n        get: function get() {\n          return showValues;\n        },\n        set: function set(_) {\n          showValues = _;\n        }\n      },\n      // this shows the group name, seems pointless?\n      //showBarLabels:    {get: function(){return showBarLabels;}, set: function(_){showBarLabels=_;}},\n      disabled: {\n        get: function get() {\n          return disabled;\n        },\n        set: function set(_) {\n          disabled = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      valuePadding: {\n        get: function get() {\n          return valuePadding;\n        },\n        set: function set(_) {\n          valuePadding = _;\n        }\n      },\n      groupSpacing: {\n        get: function get() {\n          return groupSpacing;\n        },\n        set: function set(_) {\n          groupSpacing = _;\n        }\n      },\n      fillOpacity: {\n        get: function get() {\n          return fillOpacity;\n        },\n        set: function set(_) {\n          fillOpacity = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return barColor;\n        },\n        set: function set(_) {\n          barColor = _ ? nv.utils.getColor(_) : null;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiBarHorizontalChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var multibar = nv.models.multiBarHorizontal(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend().height(30),\n        controls = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        controlsPosition = 'top',\n        controlLabels = {},\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        stacked = false,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    },\n        duration = 250;\n\n    state.stacked = false; // DEPRECATED Maintained for backward compatibility\n\n    multibar.stacked(stacked);\n    xAxis.orient('left').tickPadding(5).showMaxMin(false).tickFormat(function (d) {\n      return d;\n    });\n    yAxis.orient('bottom').tickFormat(d3.format(',.1f'));\n    tooltip.duration(0).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }).headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    });\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          stacked: stacked\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.stacked !== undefined) stacked = state.stacked;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(multibar);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        stacked = multibar.stacked();\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = multibar.xScale();\n        y = multibar.yScale().clamp(true); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-multiBarHorizontalChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-multiBarHorizontalChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis').append('g').attr('class', 'nv-zeroLine').append('line');\n        gEnter.append('g').attr('class', 'nv-barsWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth - controlWidth());\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + (availableHeight + xAxis.height()) + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + controlWidth() + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.grouped || 'Grouped',\n            disabled: multibar.stacked()\n          }, {\n            key: controlLabels.stacked || 'Stacked',\n            disabled: !multibar.stacked()\n          }];\n          controls.width(controlWidth()).color(['#444', '#444', '#444']);\n\n          if (controlsPosition === 'bottom') {\n            margin.bottom = xAxis.height() + legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + (availableHeight + xAxis.height()) + ')').call(controls);\n          } else if (controlsPosition === 'top') {\n            g.select('.nv-controlsWrap').datum(controlsData).attr('transform', 'translate(0,' + -margin.top + ')').call(controls);\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        multibar.disabled(data.map(function (series) {\n          return series.disabled;\n        })).width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var barsWrap = g.select('.nv-barsWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        }));\n        barsWrap.transition().call(multibar); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksY(availableHeight / 24, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-x.nv-axis').call(xAxis);\n          var xTicks = g.select('.nv-x.nv-axis').selectAll('g');\n          xTicks.selectAll('line, text');\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-y.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')');\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Zero line\n\n\n        g.select(\".nv-zeroLine line\").attr(\"x1\", y(0)).attr(\"x2\", y(0)).attr(\"y1\", 0).attr(\"y2\", -availableHeight); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n\n          switch (d.key) {\n            case 'Grouped':\n            case controlLabels.grouped:\n              multibar.stacked(false);\n              break;\n\n            case 'Stacked':\n            case controlLabels.stacked:\n              multibar.stacked(true);\n              break;\n          }\n\n          state.stacked = multibar.stacked();\n          dispatch.stateChange(state);\n          stacked = multibar.stacked();\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.stacked !== 'undefined') {\n            multibar.stacked(e.stacked);\n            state.stacked = e.stacked;\n            stacked = e.stacked;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('multibar horizontal chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    multibar.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.value = chart.x()(evt.data);\n      evt['series'] = {\n        key: evt.data.key,\n        value: chart.y()(evt.data),\n        color: evt.color\n      };\n      tooltip.data(evt).hidden(false);\n    });\n    multibar.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    multibar.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.multibar = multibar;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.state = state;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      controlsPosition: {\n        get: function get() {\n          return controlsPosition;\n        },\n        set: function set(_) {\n          controlsPosition = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          multibar.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n        }\n      },\n      barColor: {\n        get: function get() {\n          return multibar.barColor;\n        },\n        set: function set(_) {\n          multibar.barColor(_);\n          legend.color(function (d, i) {\n            return d3.rgb('#ccc').darker(i * 1.5).toString();\n          });\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, multibar);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.multiChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        color = nv.utils.defaultColor(),\n        width = null,\n        height = null,\n        showLegend = true,\n        noData = null,\n        yDomain1,\n        yDomain2,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        interpolate = 'linear',\n        useVoronoi = true,\n        interactiveLayer = nv.interactiveGuideline(),\n        useInteractiveGuideline = false,\n        legendRightAxisHint = ' (right axis)',\n        duration = 250; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x = d3.scale.linear(),\n        yScale1 = d3.scale.linear(),\n        yScale2 = d3.scale.linear(),\n        lines1 = nv.models.line().yScale(yScale1).duration(duration),\n        lines2 = nv.models.line().yScale(yScale2).duration(duration),\n        scatters1 = nv.models.scatter().yScale(yScale1).duration(duration),\n        scatters2 = nv.models.scatter().yScale(yScale2).duration(duration),\n        bars1 = nv.models.multiBar().stacked(false).yScale(yScale1).duration(duration),\n        bars2 = nv.models.multiBar().stacked(false).yScale(yScale2).duration(duration),\n        stack1 = nv.models.stackedArea().yScale(yScale1).duration(duration),\n        stack2 = nv.models.stackedArea().yScale(yScale2).duration(duration),\n        xAxis = nv.models.axis().scale(x).orient('bottom').tickPadding(5).duration(duration),\n        yAxis1 = nv.models.axis().scale(yScale1).orient('left').duration(duration),\n        yAxis2 = nv.models.axis().scale(yScale2).orient('right').duration(duration),\n        legend = nv.models.legend().height(30),\n        tooltip = nv.models.tooltip(),\n        dispatch = d3.dispatch();\n    var charts = [lines1, lines2, scatters1, scatters2, bars1, bars2, stack1, stack2];\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n\n        chart.update = function () {\n          container.transition().call(chart);\n        };\n\n        chart.container = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        var dataLines1 = data.filter(function (d) {\n          return d.type == 'line' && d.yAxis == 1;\n        });\n        var dataLines2 = data.filter(function (d) {\n          return d.type == 'line' && d.yAxis == 2;\n        });\n        var dataScatters1 = data.filter(function (d) {\n          return d.type == 'scatter' && d.yAxis == 1;\n        });\n        var dataScatters2 = data.filter(function (d) {\n          return d.type == 'scatter' && d.yAxis == 2;\n        });\n        var dataBars1 = data.filter(function (d) {\n          return d.type == 'bar' && d.yAxis == 1;\n        });\n        var dataBars2 = data.filter(function (d) {\n          return d.type == 'bar' && d.yAxis == 2;\n        });\n        var dataStack1 = data.filter(function (d) {\n          return d.type == 'area' && d.yAxis == 1;\n        });\n        var dataStack2 = data.filter(function (d) {\n          return d.type == 'area' && d.yAxis == 2;\n        }); // Display noData message if there's nothing to show.\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var series1 = data.filter(function (d) {\n          return !d.disabled && d.yAxis == 1;\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d),\n              y: getY(d)\n            };\n          });\n        });\n        var series2 = data.filter(function (d) {\n          return !d.disabled && d.yAxis == 2;\n        }).map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d),\n              y: getY(d)\n            };\n          });\n        });\n        x.domain(d3.extent(d3.merge(series1.concat(series2)), function (d) {\n          return d.x;\n        })).range([0, availableWidth]);\n        var wrap = container.selectAll('g.wrap.multiChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'wrap nvd3 multiChart').append('g');\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y1 nv-axis');\n        gEnter.append('g').attr('class', 'nv-y2 nv-axis');\n        gEnter.append('g').attr('class', 'stack1Wrap');\n        gEnter.append('g').attr('class', 'stack2Wrap');\n        gEnter.append('g').attr('class', 'bars1Wrap');\n        gEnter.append('g').attr('class', 'bars2Wrap');\n        gEnter.append('g').attr('class', 'scatters1Wrap');\n        gEnter.append('g').attr('class', 'scatters2Wrap');\n        gEnter.append('g').attr('class', 'lines1Wrap');\n        gEnter.append('g').attr('class', 'lines2Wrap');\n        gEnter.append('g').attr('class', 'legendWrap');\n        gEnter.append('g').attr('class', 'nv-interactive');\n        var g = wrap.select('g');\n        var color_array = data.map(function (d, i) {\n          return data[i].color || color(d, i);\n        }); // Legend\n\n        if (!showLegend) {\n          g.select('.legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = legend.align() ? availableWidth / 2 : availableWidth;\n          var legendXPosition = legend.align() ? legendWidth : 0;\n          legend.width(legendWidth);\n          legend.color(color_array);\n          g.select('.legendWrap').datum(data.map(function (series) {\n            series.originalKey = series.originalKey === undefined ? series.key : series.originalKey;\n            series.key = series.originalKey + (series.yAxis == 1 ? '' : legendRightAxisHint);\n            return series;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          g.select('.legendWrap').attr('transform', 'translate(' + legendXPosition + ',' + -margin.top + ')');\n        }\n\n        lines1.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'line';\n        }));\n        lines2.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'line';\n        }));\n        scatters1.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'scatter';\n        }));\n        scatters2.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'scatter';\n        }));\n        bars1.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'bar';\n        }));\n        bars2.width(availableWidth).height(availableHeight).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'bar';\n        }));\n        stack1.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 1 && data[i].type == 'area';\n        }));\n        stack2.width(availableWidth).height(availableHeight).interpolate(interpolate).color(color_array.filter(function (d, i) {\n          return !data[i].disabled && data[i].yAxis == 2 && data[i].type == 'area';\n        }));\n        g.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var lines1Wrap = g.select('.lines1Wrap').datum(dataLines1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var scatters1Wrap = g.select('.scatters1Wrap').datum(dataScatters1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var bars1Wrap = g.select('.bars1Wrap').datum(dataBars1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var stack1Wrap = g.select('.stack1Wrap').datum(dataStack1.filter(function (d) {\n          return !d.disabled;\n        }));\n        var lines2Wrap = g.select('.lines2Wrap').datum(dataLines2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var scatters2Wrap = g.select('.scatters2Wrap').datum(dataScatters2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var bars2Wrap = g.select('.bars2Wrap').datum(dataBars2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var stack2Wrap = g.select('.stack2Wrap').datum(dataStack2.filter(function (d) {\n          return !d.disabled;\n        }));\n        var extraValue1BarStacked = [];\n\n        if (bars1.stacked() && dataBars1.length) {\n          var extraValue1BarStacked = dataBars1.filter(function (d) {\n            return !d.disabled;\n          }).map(function (a) {\n            return a.values;\n          });\n          if (extraValue1BarStacked.length > 0) extraValue1BarStacked = extraValue1BarStacked.reduce(function (a, b) {\n            return a.map(function (aVal, i) {\n              return {\n                x: aVal.x,\n                y: aVal.y + b[i].y\n              };\n            });\n          });\n        }\n\n        if (dataBars1.length) {\n          extraValue1BarStacked.push({\n            x: 0,\n            y: 0\n          });\n        }\n\n        var extraValue2BarStacked = [];\n\n        if (bars2.stacked() && dataBars2.length) {\n          var extraValue2BarStacked = dataBars2.filter(function (d) {\n            return !d.disabled;\n          }).map(function (a) {\n            return a.values;\n          });\n          if (extraValue2BarStacked.length > 0) extraValue2BarStacked = extraValue2BarStacked.reduce(function (a, b) {\n            return a.map(function (aVal, i) {\n              return {\n                x: aVal.x,\n                y: aVal.y + b[i].y\n              };\n            });\n          });\n        }\n\n        if (dataBars2.length) {\n          extraValue2BarStacked.push({\n            x: 0,\n            y: 0\n          });\n        }\n\n        yScale1.domain(yDomain1 || d3.extent(d3.merge(series1).concat(extraValue1BarStacked), function (d) {\n          return d.y;\n        })).range([0, availableHeight]);\n        yScale2.domain(yDomain2 || d3.extent(d3.merge(series2).concat(extraValue2BarStacked), function (d) {\n          return d.y;\n        })).range([0, availableHeight]);\n        lines1.yDomain(yScale1.domain());\n        scatters1.yDomain(yScale1.domain());\n        bars1.yDomain(yScale1.domain());\n        stack1.yDomain(yScale1.domain());\n        lines2.yDomain(yScale2.domain());\n        scatters2.yDomain(yScale2.domain());\n        bars2.yDomain(yScale2.domain());\n        stack2.yDomain(yScale2.domain());\n\n        if (dataStack1.length) {\n          d3.transition(stack1Wrap).call(stack1);\n        }\n\n        if (dataStack2.length) {\n          d3.transition(stack2Wrap).call(stack2);\n        }\n\n        if (dataBars1.length) {\n          d3.transition(bars1Wrap).call(bars1);\n        }\n\n        if (dataBars2.length) {\n          d3.transition(bars2Wrap).call(bars2);\n        }\n\n        if (dataLines1.length) {\n          d3.transition(lines1Wrap).call(lines1);\n        }\n\n        if (dataLines2.length) {\n          d3.transition(lines2Wrap).call(lines2);\n        }\n\n        if (dataScatters1.length) {\n          d3.transition(scatters1Wrap).call(scatters1);\n        }\n\n        if (dataScatters2.length) {\n          d3.transition(scatters2Wrap).call(scatters2);\n        }\n\n        xAxis._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n        g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')');\n        d3.transition(g.select('.nv-x.nv-axis')).call(xAxis);\n\n        yAxis1._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n        d3.transition(g.select('.nv-y1.nv-axis')).call(yAxis1);\n\n        yAxis2._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n        d3.transition(g.select('.nv-y2.nv-axis')).call(yAxis2);\n        g.select('.nv-y1.nv-axis').classed('nv-disabled', series1.length ? false : true).attr('transform', 'translate(' + x.range()[0] + ',0)');\n        g.select('.nv-y2.nv-axis').classed('nv-disabled', series2.length ? false : true).attr('transform', 'translate(' + x.range()[1] + ',0)');\n        legend.dispatch.on('stateChange', function (newState) {\n          chart.update();\n        });\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        } //============================================================\n        // Event Handling/Dispatching\n        //------------------------------------------------------------\n\n\n        function mouseover_line(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = evt.point.x;\n          evt.series = {\n            value: evt.point.y,\n            color: evt.point.color,\n            key: evt.series.key\n          };\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_scatter(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = evt.point.x;\n          evt.series = {\n            value: evt.point.y,\n            color: evt.point.color,\n            key: evt.series.key\n          };\n          tooltip.duration(100).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_stack(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.point['x'] = stack1.x()(evt.point);\n          evt.point['y'] = stack1.y()(evt.point);\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function mouseover_bar(evt) {\n          var yaxis = evt.series.yAxis === 2 ? yAxis2 : yAxis1;\n          evt.value = bars1.x()(evt.data);\n          evt['series'] = {\n            value: bars1.y()(evt.data),\n            color: evt.color,\n            key: evt.data.key\n          };\n          tooltip.duration(0).headerFormatter(function (d, i) {\n            return xAxis.tickFormat()(d, i);\n          }).valueFormatter(function (d, i) {\n            return yaxis.tickFormat()(d, i);\n          }).data(evt).hidden(false);\n        }\n\n        function clearHighlights() {\n          for (var i = 0, il = charts.length; i < il; i++) {\n            var chart = charts[i];\n\n            try {\n              chart.clearHighlights();\n            } catch (e) {}\n          }\n        }\n\n        function highlightPoint(serieIndex, pointIndex, b) {\n          for (var i = 0, il = charts.length; i < il; i++) {\n            var chart = charts[i];\n\n            try {\n              chart.highlightPoint(serieIndex, pointIndex, b);\n            } catch (e) {}\n          }\n        }\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.dispatch.on('elementMousemove', function (e) {\n            clearHighlights();\n            var singlePoint,\n                pointIndex,\n                pointXLocation,\n                allData = [];\n            data.filter(function (series, i) {\n              series.seriesIndex = i;\n              return !series.disabled;\n            }).forEach(function (series, i) {\n              var extent = x.domain();\n              var currentValues = series.values.filter(function (d, i) {\n                return chart.x()(d, i) >= extent[0] && chart.x()(d, i) <= extent[1];\n              });\n              pointIndex = nv.interactiveBisect(currentValues, e.pointXValue, chart.x());\n              var point = currentValues[pointIndex];\n              var pointYValue = chart.y()(point, pointIndex);\n\n              if (pointYValue !== null) {\n                highlightPoint(i, pointIndex, true);\n              }\n\n              if (point === undefined) return;\n              if (singlePoint === undefined) singlePoint = point;\n              if (pointXLocation === undefined) pointXLocation = x(chart.x()(point, pointIndex));\n              allData.push({\n                key: series.key,\n                value: pointYValue,\n                color: color(series, series.seriesIndex),\n                data: point,\n                yAxis: series.yAxis == 2 ? yAxis2 : yAxis1\n              });\n            });\n\n            var defaultValueFormatter = function defaultValueFormatter(d, i) {\n              var yAxis = allData[i].yAxis;\n              return d == null ? \"N/A\" : yAxis.tickFormat()(d);\n            };\n\n            interactiveLayer.tooltip.headerFormatter(function (d, i) {\n              return xAxis.tickFormat()(d, i);\n            }).valueFormatter(interactiveLayer.tooltip.valueFormatter() || defaultValueFormatter).data({\n              value: chart.x()(singlePoint, pointIndex),\n              index: pointIndex,\n              series: allData\n            })();\n            interactiveLayer.renderGuideLine(pointXLocation);\n          });\n          interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n            clearHighlights();\n          });\n        } else {\n          lines1.dispatch.on('elementMouseover.tooltip', mouseover_line);\n          lines2.dispatch.on('elementMouseover.tooltip', mouseover_line);\n          lines1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          lines2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          scatters1.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n          scatters2.dispatch.on('elementMouseover.tooltip', mouseover_scatter);\n          scatters1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          scatters2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          stack1.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n          stack2.dispatch.on('elementMouseover.tooltip', mouseover_stack);\n          stack1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          stack2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars1.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n          bars2.dispatch.on('elementMouseover.tooltip', mouseover_bar);\n          bars1.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars2.dispatch.on('elementMouseout.tooltip', function (evt) {\n            tooltip.hidden(true);\n          });\n          bars1.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n          bars2.dispatch.on('elementMousemove.tooltip', function (evt) {\n            tooltip();\n          });\n        }\n      });\n      return chart;\n    } //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.legend = legend;\n    chart.lines1 = lines1;\n    chart.lines2 = lines2;\n    chart.scatters1 = scatters1;\n    chart.scatters2 = scatters2;\n    chart.bars1 = bars1;\n    chart.bars2 = bars2;\n    chart.stack1 = stack1;\n    chart.stack2 = stack2;\n    chart.xAxis = xAxis;\n    chart.yAxis1 = yAxis1;\n    chart.yAxis2 = yAxis2;\n    chart.tooltip = tooltip;\n    chart.interactiveLayer = interactiveLayer;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      yDomain1: {\n        get: function get() {\n          return yDomain1;\n        },\n        set: function set(_) {\n          yDomain1 = _;\n        }\n      },\n      yDomain2: {\n        get: function get() {\n          return yDomain2;\n        },\n        set: function set(_) {\n          yDomain2 = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      legendRightAxisHint: {\n        get: function get() {\n          return legendRightAxisHint;\n        },\n        set: function set(_) {\n          legendRightAxisHint = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n          lines1.x(_);\n          lines2.x(_);\n          scatters1.x(_);\n          scatters2.x(_);\n          bars1.x(_);\n          bars2.x(_);\n          stack1.x(_);\n          stack2.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n          lines1.y(_);\n          lines2.y(_);\n          scatters1.y(_);\n          scatters2.y(_);\n          stack1.y(_);\n          stack2.y(_);\n          bars1.y(_);\n          bars2.y(_);\n        }\n      },\n      useVoronoi: {\n        get: function get() {\n          return useVoronoi;\n        },\n        set: function set(_) {\n          useVoronoi = _;\n          lines1.useVoronoi(_);\n          lines2.useVoronoi(_);\n          stack1.useVoronoi(_);\n          stack2.useVoronoi(_);\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = _;\n\n          if (useInteractiveGuideline) {\n            lines1.interactive(false);\n            lines1.useVoronoi(false);\n            lines2.interactive(false);\n            lines2.useVoronoi(false);\n            stack1.interactive(false);\n            stack1.useVoronoi(false);\n            stack2.interactive(false);\n            stack2.useVoronoi(false);\n            scatters1.interactive(false);\n            scatters2.interactive(false);\n          }\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          [lines1, lines2, stack1, stack2, scatters1, scatters2, xAxis, yAxis1, yAxis2].forEach(function (model) {\n            model.duration(duration);\n          });\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.ohlcBar = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        getOpen = function getOpen(d) {\n      return d.open;\n    },\n        getClose = function getClose(d) {\n      return d.close;\n    },\n        getHigh = function getHigh(d) {\n      return d.high;\n    },\n        getLow = function getLow(d) {\n      return d.low;\n    },\n        forceX = [],\n        forceY = [],\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        clipEdge = true,\n        color = nv.utils.defaultColor(),\n        interactive = false,\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd', 'chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); // ohlc bar width.\n\n        var w = availableWidth / data[0].values.length * .9; // Setup Scales\n\n        x.domain(xDomain || d3.extent(data[0].values.map(getX).concat(forceX)));\n        if (padData) x.range(xRange || [availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5) / data[0].values.length]);else x.range(xRange || [5 + w / 2, availableWidth - w / 2 - 5]);\n        y.domain(yDomain || [d3.min(data[0].values.map(getLow).concat(forceY)), d3.max(data[0].values.map(getHigh).concat(forceY))]).range(yRange || [availableHeight, 0]); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] + y.domain()[0] * 0.01, y.domain()[1] - y.domain()[1] * 0.01]) : y.domain([-1, 1]); // Setup containers and skeleton of chart\n\n        var wrap = d3.select(this).selectAll('g.nv-wrap.nv-ohlcBar').data([data[0].values]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-ohlcBar');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-ticks');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        defsEnter.append('clipPath').attr('id', 'nv-chart-clip-path-' + id).append('rect');\n        wrap.select('#nv-chart-clip-path-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-chart-clip-path-' + id + ')' : '');\n        var ticks = wrap.select('.nv-ticks').selectAll('.nv-tick').data(function (d) {\n          return d;\n        });\n        ticks.exit().remove();\n        ticks.enter().append('path').attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        }).attr('d', function (d, i) {\n          return 'm0,0l0,' + (y(getOpen(d, i)) - y(getHigh(d, i))) + 'l' + -w / 2 + ',0l' + w / 2 + ',0l0,' + (y(getLow(d, i)) - y(getOpen(d, i))) + 'l0,' + (y(getClose(d, i)) - y(getLow(d, i))) + 'l' + w / 2 + ',0l' + -w / 2 + ',0z';\n        }).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',' + y(getHigh(d, i)) + ')';\n        }).attr('fill', function (d, i) {\n          return color[0];\n        }).attr('stroke', function (d, i) {\n          return color[0];\n        }).attr('x', 0).attr('y', function (d, i) {\n          return y(Math.max(0, getY(d, i)));\n        }).attr('height', function (d, i) {\n          return Math.abs(y(getY(d, i)) - y(0));\n        }); // the bar colors are controlled by CSS currently\n\n        ticks.attr('class', function (d, i, j) {\n          return (getOpen(d, i) > getClose(d, i) ? 'nv-tick negative' : 'nv-tick positive') + ' nv-tick-' + j + '-' + i;\n        });\n        d3.transition(ticks).attr('transform', function (d, i) {\n          return 'translate(' + x(getX(d, i)) + ',' + y(getHigh(d, i)) + ')';\n        }).attr('d', function (d, i) {\n          var w = availableWidth / data[0].values.length * .9;\n          return 'm0,0l0,' + (y(getOpen(d, i)) - y(getHigh(d, i))) + 'l' + -w / 2 + ',0l' + w / 2 + ',0l0,' + (y(getLow(d, i)) - y(getOpen(d, i))) + 'l0,' + (y(getClose(d, i)) - y(getLow(d, i))) + 'l' + w / 2 + ',0l' + -w / 2 + ',0z';\n        });\n      });\n      return chart;\n    } //Create methods to allow outside functions to highlight a specific bar.\n\n\n    chart.highlightPoint = function (pointIndex, isHoverOver) {\n      chart.clearHighlights();\n      container.select(\".nv-ohlcBar .nv-tick-0-\" + pointIndex).classed(\"hover\", isHoverOver);\n    };\n\n    chart.clearHighlights = function () {\n      container.select(\".nv-ohlcBar .nv-tick.hover\").classed(\"hover\", false);\n    }; //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = _;\n        }\n      },\n      open: {\n        get: function get() {\n          return getOpen();\n        },\n        set: function set(_) {\n          getOpen = _;\n        }\n      },\n      close: {\n        get: function get() {\n          return getClose();\n        },\n        set: function set(_) {\n          getClose = _;\n        }\n      },\n      high: {\n        get: function get() {\n          return getHigh;\n        },\n        set: function set(_) {\n          getHigh = _;\n        }\n      },\n      low: {\n        get: function get() {\n          return getLow;\n        },\n        set: function set(_) {\n          getLow = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  }; // Code adapted from Jason Davies' \"Parallel Coordinates\"\n  // http://bl.ocks.org/jasondavies/1341281\n\n\n  nv.models.parallelCoordinates = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 30,\n      right: 0,\n      bottom: 10,\n      left: 0\n    },\n        width = null,\n        height = null,\n        availableWidth = null,\n        availableHeight = null,\n        x = d3.scale.ordinal(),\n        y = {},\n        undefinedValuesLabel = \"undefined values\",\n        dimensionData = [],\n        enabledDimensions = [],\n        dimensionNames = [],\n        displayBrush = true,\n        color = nv.utils.defaultColor(),\n        filters = [],\n        active = [],\n        dragging = [],\n        axisWithUndefinedValues = [],\n        lineTension = 1,\n        foreground,\n        background,\n        dimensions,\n        line = d3.svg.line(),\n        axis = d3.svg.axis(),\n        dispatch = d3.dispatch('brushstart', 'brush', 'brushEnd', 'dimensionsOrder', \"stateChange\", 'elementClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd', 'activeChanged'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var container = d3.select(this);\n        availableWidth = nv.utils.availableWidth(width, container, margin);\n        availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); //Convert old data to new format (name, values)\n\n        if (data[0].values === undefined) {\n          var newData = [];\n          data.forEach(function (d) {\n            var val = {};\n            var key = Object.keys(d);\n            key.forEach(function (k) {\n              if (k !== \"name\") val[k] = d[k];\n            });\n            newData.push({\n              key: d.name,\n              values: val\n            });\n          });\n          data = newData;\n        }\n\n        var dataValues = data.map(function (d) {\n          return d.values;\n        });\n\n        if (active.length === 0) {\n          active = data;\n        }\n\n        ; //set all active before first brush call\n\n        dimensionNames = dimensionData.sort(function (a, b) {\n          return a.currentPosition - b.currentPosition;\n        }).map(function (d) {\n          return d.key;\n        });\n        enabledDimensions = dimensionData.filter(function (d) {\n          return !d.disabled;\n        }); // Setup Scales\n\n        x.rangePoints([0, availableWidth], 1).domain(enabledDimensions.map(function (d) {\n          return d.key;\n        })); //Set as true if all values on an axis are missing.\n        // Extract the list of dimensions and create a scale for each.\n\n        var oldDomainMaxValue = {};\n        var displayMissingValuesline = false;\n        var currentTicks = [];\n        dimensionNames.forEach(function (d) {\n          var extent = d3.extent(dataValues, function (p) {\n            return +p[d];\n          });\n          var min = extent[0];\n          var max = extent[1];\n          var onlyUndefinedValues = false; //If there is no values to display on an axis, set the extent to 0\n\n          if (isNaN(min) || isNaN(max)) {\n            onlyUndefinedValues = true;\n            min = 0;\n            max = 0;\n          } //Scale axis if there is only one value\n\n\n          if (min === max) {\n            min = min - 1;\n            max = max + 1;\n          }\n\n          var f = filters.filter(function (k) {\n            return k.dimension == d;\n          });\n\n          if (f.length !== 0) {\n            //If there is only NaN values, keep the existing domain.\n            if (onlyUndefinedValues) {\n              min = y[d].domain()[0];\n              max = y[d].domain()[1];\n            } //If the brush extent is > max (< min), keep the extent value.\n            else if (!f[0].hasOnlyNaN && displayBrush) {\n                min = min > f[0].extent[0] ? f[0].extent[0] : min;\n                max = max < f[0].extent[1] ? f[0].extent[1] : max;\n              } //If there is NaN values brushed be sure the brush extent is on the domain.\n              else if (f[0].hasNaN) {\n                  max = max < f[0].extent[1] ? f[0].extent[1] : max;\n                  oldDomainMaxValue[d] = y[d].domain()[1];\n                  displayMissingValuesline = true;\n                }\n          } //Use 90% of (availableHeight - 12) for the axis range, 12 reprensenting the space necessary to display \"undefined values\" text.\n          //The remaining 10% are used to display the missingValue line.\n\n\n          y[d] = d3.scale.linear().domain([min, max]).range([(availableHeight - 12) * 0.9, 0]);\n          axisWithUndefinedValues = [];\n          y[d].brush = d3.svg.brush().y(y[d]).on('brushstart', brushstart).on('brush', brush).on('brushend', brushend);\n        }); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinates').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinates');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates background');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates foreground');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinates missingValuesline');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        line.interpolate('cardinal').tension(lineTension);\n        axis.orient('left');\n        var axisDrag = d3.behavior.drag().on('dragstart', dragStart).on('drag', dragMove).on('dragend', dragEnd); //Add missing value line at the bottom of the chart\n\n        var missingValuesline, missingValueslineText;\n        var step = x.range()[1] - x.range()[0];\n        step = isNaN(step) ? x.range()[0] : step;\n\n        if (!isNaN(step)) {\n          var lineData = [0 + step / 2, availableHeight - 12, availableWidth - step / 2, availableHeight - 12];\n          missingValuesline = wrap.select('.missingValuesline').selectAll('line').data([lineData]);\n          missingValuesline.enter().append('line');\n          missingValuesline.exit().remove();\n          missingValuesline.attr(\"x1\", function (d) {\n            return d[0];\n          }).attr(\"y1\", function (d) {\n            return d[1];\n          }).attr(\"x2\", function (d) {\n            return d[2];\n          }).attr(\"y2\", function (d) {\n            return d[3];\n          }); //Add the text \"undefined values\" under the missing value line\n\n          missingValueslineText = wrap.select('.missingValuesline').selectAll('text').data([undefinedValuesLabel]);\n          missingValueslineText.append('text').data([undefinedValuesLabel]);\n          missingValueslineText.enter().append('text');\n          missingValueslineText.exit().remove();\n          missingValueslineText.attr(\"y\", availableHeight) //To have the text right align with the missingValues line, substract 92 representing the text size.\n          .attr(\"x\", availableWidth - 92 - step / 2).text(function (d) {\n            return d;\n          });\n        } // Add grey background lines for context.\n\n\n        background = wrap.select('.background').selectAll('path').data(data);\n        background.enter().append('path');\n        background.exit().remove();\n        background.attr('d', path); // Add blue foreground lines for focus.\n\n        foreground = wrap.select('.foreground').selectAll('path').data(data);\n        foreground.enter().append('path');\n        foreground.exit().remove();\n        foreground.attr('d', path).style(\"stroke-width\", function (d, i) {\n          if (isNaN(d.strokeWidth)) {\n            d.strokeWidth = 1;\n          }\n\n          return d.strokeWidth;\n        }).attr('stroke', function (d, i) {\n          return d.color || color(d, i);\n        });\n        foreground.on(\"mouseover\", function (d, i) {\n          d3.select(this).classed('hover', true).style(\"stroke-width\", d.strokeWidth + 2 + \"px\").style(\"stroke-opacity\", 1);\n          dispatch.elementMouseover({\n            label: d.name,\n            color: d.color || color(d, i),\n            values: d.values,\n            dimensions: enabledDimensions\n          });\n        });\n        foreground.on(\"mouseout\", function (d, i) {\n          d3.select(this).classed('hover', false).style(\"stroke-width\", d.strokeWidth + \"px\").style(\"stroke-opacity\", 0.7);\n          dispatch.elementMouseout({\n            label: d.name,\n            index: i\n          });\n        });\n        foreground.on('mousemove', function (d, i) {\n          dispatch.elementMousemove();\n        });\n        foreground.on('click', function (d) {\n          dispatch.elementClick({\n            id: d.id\n          });\n        }); // Add a group element for each dimension.\n\n        dimensions = g.selectAll('.dimension').data(enabledDimensions);\n        var dimensionsEnter = dimensions.enter().append('g').attr('class', 'nv-parallelCoordinates dimension');\n        dimensions.attr('transform', function (d) {\n          return 'translate(' + x(d.key) + ',0)';\n        });\n        dimensionsEnter.append('g').attr('class', 'nv-axis'); // Add an axis and title.\n\n        dimensionsEnter.append('text').attr('class', 'nv-label').style(\"cursor\", \"move\").attr('dy', '-1em').attr('text-anchor', 'middle').on(\"mouseover\", function (d, i) {\n          dispatch.elementMouseover({\n            label: d.tooltip || d.key,\n            color: d.color\n          });\n        }).on(\"mouseout\", function (d, i) {\n          dispatch.elementMouseout({\n            label: d.tooltip\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove();\n        }).call(axisDrag);\n        dimensionsEnter.append('g').attr('class', 'nv-brushBackground');\n        dimensions.exit().remove();\n        dimensions.select('.nv-label').text(function (d) {\n          return d.key;\n        }); // Add and store a brush for each axis.\n\n        restoreBrush(displayBrush);\n        var actives = dimensionNames.filter(function (p) {\n          return !y[p].brush.empty();\n        }),\n            extents = actives.map(function (p) {\n          return y[p].brush.extent();\n        });\n        var formerActive = active.slice(0); //Restore active values\n\n        active = [];\n        foreground.style(\"display\", function (d) {\n          var isActive = actives.every(function (p, i) {\n            if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) {\n              return true;\n            }\n\n            return extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1] && !isNaN(parseFloat(d.values[p]));\n          });\n          if (isActive) active.push(d);\n          return !isActive ? \"none\" : null;\n        });\n\n        if (filters.length > 0 || !nv.utils.arrayEquals(active, formerActive)) {\n          dispatch.activeChanged(active);\n        } // Returns the path for a given data point.\n\n\n        function path(d) {\n          return line(enabledDimensions.map(function (p) {\n            //If value if missing, put the value on the missing value line\n            if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key])) || displayMissingValuesline) {\n              var domain = y[p.key].domain();\n              var range = y[p.key].range();\n              var min = domain[0] - (domain[1] - domain[0]) / 9; //If it's not already the case, allow brush to select undefined values\n\n              if (axisWithUndefinedValues.indexOf(p.key) < 0) {\n                var newscale = d3.scale.linear().domain([min, domain[1]]).range([availableHeight - 12, range[1]]);\n                y[p.key].brush.y(newscale);\n                axisWithUndefinedValues.push(p.key);\n              }\n\n              if (isNaN(d.values[p.key]) || isNaN(parseFloat(d.values[p.key]))) {\n                return [x(p.key), y[p.key](min)];\n              }\n            } //If parallelCoordinate contain missing values show the missing values line otherwise, hide it.\n\n\n            if (missingValuesline !== undefined) {\n              if (axisWithUndefinedValues.length > 0 || displayMissingValuesline) {\n                missingValuesline.style(\"display\", \"inline\");\n                missingValueslineText.style(\"display\", \"inline\");\n              } else {\n                missingValuesline.style(\"display\", \"none\");\n                missingValueslineText.style(\"display\", \"none\");\n              }\n            }\n\n            return [x(p.key), y[p.key](d.values[p.key])];\n          }));\n        }\n\n        function restoreBrush(visible) {\n          filters.forEach(function (f) {\n            //If filter brushed NaN values, keep the brush on the bottom of the axis.\n            var brushDomain = y[f.dimension].brush.y().domain();\n\n            if (f.hasOnlyNaN) {\n              f.extent[1] = (y[f.dimension].domain()[1] - brushDomain[0]) * (f.extent[1] - f.extent[0]) / (oldDomainMaxValue[f.dimension] - f.extent[0]) + brushDomain[0];\n            }\n\n            if (f.hasNaN) {\n              f.extent[0] = brushDomain[0];\n            }\n\n            if (visible) y[f.dimension].brush.extent(f.extent);\n          });\n          dimensions.select('.nv-brushBackground').each(function (d) {\n            d3.select(this).call(y[d.key].brush);\n          }).selectAll('rect').attr('x', -8).attr('width', 16);\n          updateTicks();\n        } // Handles a brush event, toggling the display of foreground lines.\n\n\n        function brushstart() {\n          //If brush aren't visible, show it before brushing again.\n          if (displayBrush === false) {\n            displayBrush = true;\n            restoreBrush(true);\n          }\n        } // Handles a brush event, toggling the display of foreground lines.\n\n\n        function brush() {\n          actives = dimensionNames.filter(function (p) {\n            return !y[p].brush.empty();\n          });\n          extents = actives.map(function (p) {\n            return y[p].brush.extent();\n          });\n          filters = []; //erase current filters\n\n          actives.forEach(function (d, i) {\n            filters[i] = {\n              dimension: d,\n              extent: extents[i],\n              hasNaN: false,\n              hasOnlyNaN: false\n            };\n          });\n          active = []; //erase current active list\n\n          foreground.style('display', function (d) {\n            var isActive = actives.every(function (p, i) {\n              if ((isNaN(d.values[p]) || isNaN(parseFloat(d.values[p]))) && extents[i][0] == y[p].brush.y().domain()[0]) return true;\n              return extents[i][0] <= d.values[p] && d.values[p] <= extents[i][1] && !isNaN(parseFloat(d.values[p]));\n            });\n            if (isActive) active.push(d);\n            return isActive ? null : 'none';\n          });\n          updateTicks();\n          dispatch.brush({\n            filters: filters,\n            active: active\n          });\n        }\n\n        function brushend() {\n          var hasActiveBrush = actives.length > 0 ? true : false;\n          filters.forEach(function (f) {\n            if (f.extent[0] === y[f.dimension].brush.y().domain()[0] && axisWithUndefinedValues.indexOf(f.dimension) >= 0) f.hasNaN = true;\n            if (f.extent[1] < y[f.dimension].domain()[0]) f.hasOnlyNaN = true;\n          });\n          dispatch.brushEnd(active, hasActiveBrush);\n        }\n\n        function updateTicks() {\n          dimensions.select('.nv-axis').each(function (d, i) {\n            var f = filters.filter(function (k) {\n              return k.dimension == d.key;\n            });\n            currentTicks[d.key] = y[d.key].domain(); //If brush are available, display brush extent\n\n            if (f.length != 0 && displayBrush) {\n              currentTicks[d.key] = [];\n              if (f[0].extent[1] > y[d.key].domain()[0]) currentTicks[d.key] = [f[0].extent[1]];\n              if (f[0].extent[0] >= y[d.key].domain()[0]) currentTicks[d.key].push(f[0].extent[0]);\n            }\n\n            d3.select(this).call(axis.scale(y[d.key]).tickFormat(d.format).tickValues(currentTicks[d.key]));\n          });\n        }\n\n        function dragStart(d) {\n          dragging[d.key] = this.parentNode.__origin__ = x(d.key);\n          background.attr(\"visibility\", \"hidden\");\n        }\n\n        function dragMove(d) {\n          dragging[d.key] = Math.min(availableWidth, Math.max(0, this.parentNode.__origin__ += d3.event.x));\n          foreground.attr(\"d\", path);\n          enabledDimensions.sort(function (a, b) {\n            return dimensionPosition(a.key) - dimensionPosition(b.key);\n          });\n          enabledDimensions.forEach(function (d, i) {\n            return d.currentPosition = i;\n          });\n          x.domain(enabledDimensions.map(function (d) {\n            return d.key;\n          }));\n          dimensions.attr(\"transform\", function (d) {\n            return \"translate(\" + dimensionPosition(d.key) + \")\";\n          });\n        }\n\n        function dragEnd(d, i) {\n          delete this.parentNode.__origin__;\n          delete dragging[d.key];\n          d3.select(this.parentNode).attr(\"transform\", \"translate(\" + x(d.key) + \")\");\n          foreground.attr(\"d\", path);\n          background.attr(\"d\", path).attr(\"visibility\", null);\n          dispatch.dimensionsOrder(enabledDimensions);\n        }\n\n        function dimensionPosition(d) {\n          var v = dragging[d];\n          return v == null ? x(d) : v;\n        }\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      dimensionData: {\n        get: function get() {\n          return dimensionData;\n        },\n        set: function set(_) {\n          dimensionData = _;\n        }\n      },\n      displayBrush: {\n        get: function get() {\n          return displayBrush;\n        },\n        set: function set(_) {\n          displayBrush = _;\n        }\n      },\n      filters: {\n        get: function get() {\n          return filters;\n        },\n        set: function set(_) {\n          filters = _;\n        }\n      },\n      active: {\n        get: function get() {\n          return active;\n        },\n        set: function set(_) {\n          active = _;\n        }\n      },\n      lineTension: {\n        get: function get() {\n          return lineTension;\n        },\n        set: function set(_) {\n          lineTension = _;\n        }\n      },\n      undefinedValuesLabel: {\n        get: function get() {\n          return undefinedValuesLabel;\n        },\n        set: function set(_) {\n          undefinedValuesLabel = _;\n        }\n      },\n      // deprecated options\n      dimensions: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.key;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensions', 'use dimensionData instead');\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (k) {\n              dimensionData.push({\n                key: k\n              });\n            });\n          } else {\n            _.forEach(function (k, i) {\n              dimensionData[i].key = k;\n            });\n          }\n        }\n      },\n      dimensionNames: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.key;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensionNames', 'use dimensionData instead');\n          dimensionNames = [];\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (k) {\n              dimensionData.push({\n                key: k\n              });\n            });\n          } else {\n            _.forEach(function (k, i) {\n              dimensionData[i].key = k;\n            });\n          }\n        }\n      },\n      dimensionFormats: {\n        get: function get() {\n          return dimensionData.map(function (d) {\n            return d.format;\n          });\n        },\n        set: function set(_) {\n          // deprecated after 1.8.1\n          nv.deprecated('dimensionFormats', 'use dimensionData instead');\n\n          if (dimensionData.length === 0) {\n            _.forEach(function (f) {\n              dimensionData.push({\n                format: f\n              });\n            });\n          } else {\n            _.forEach(function (f, i) {\n              dimensionData[i].format = f;\n            });\n          }\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.parallelCoordinatesChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var parallelCoordinates = nv.models.parallelCoordinates();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n    var dimensionTooltip = nv.models.tooltip();\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        showLegend = true,\n        color = nv.utils.defaultColor(),\n        state = nv.utils.state(),\n        dimensionData = [],\n        displayBrush = true,\n        defaultState = null,\n        noData = null,\n        nanValue = \"undefined\",\n        dispatch = d3.dispatch('dimensionsOrder', 'brushEnd', 'stateChange', 'changeState', 'renderEnd'),\n        controlWidth = function controlWidth() {\n      return showControls ? 180 : 0;\n    }; //============================================================\n    //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) {\n          data.forEach(function (series, i) {\n            series.disabled = !state.active[i];\n          });\n        }\n      };\n    };\n\n    tooltip.contentGenerator(function (data) {\n      var str = '<table><thead><tr><td class=\"legend-color-guide\"><div style=\"background-color:' + data.color + '\"></div></td><td><strong>' + data.key + '</strong></td></tr></thead>';\n\n      if (data.series.length !== 0) {\n        str = str + '<tbody><tr><td height =\"10px\"></td></tr>';\n        data.series.forEach(function (d) {\n          str = str + '<tr><td class=\"legend-color-guide\"><div style=\"background-color:' + d.color + '\"></div></td><td class=\"key\">' + d.key + '</td><td class=\"value\">' + d.value + '</td></tr>';\n        });\n        str = str + '</tbody>';\n      }\n\n      str = str + '</table>';\n      return str;\n    }); //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(parallelCoordinates);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(dimensionData), chart.update).getter(stateGetter(dimensionData)).update(); //set state.disabled\n\n        state.disabled = dimensionData.map(function (d) {\n          return !!d.disabled;\n        }); //Keep dimensions position in memory\n\n        dimensionData = dimensionData.map(function (d) {\n          d.disabled = !!d.disabled;\n          return d;\n        });\n        dimensionData.forEach(function (d, i) {\n          d.originalPosition = isNaN(d.originalPosition) ? i : d.originalPosition;\n          d.currentPosition = isNaN(d.currentPosition) ? i : d.currentPosition;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } //------------------------------------------------------------\n        // Setup containers and skeleton of chart\n\n\n        var wrap = container.selectAll('g.nv-wrap.nv-parallelCoordinatesChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-parallelCoordinatesChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-parallelCoordinatesWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        g.select(\"rect\").attr(\"width\", availableWidth).attr(\"height\", availableHeight > 0 ? availableHeight : 0); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          legend.width(availableWidth).color(function (d) {\n            return \"rgb(188,190,192)\";\n          });\n          g.select('.nv-legendWrap').datum(dimensionData.sort(function (a, b) {\n            return a.originalPosition - b.originalPosition;\n          })).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate( 0 ,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        parallelCoordinates.width(availableWidth).height(availableHeight).dimensionData(dimensionData).displayBrush(displayBrush);\n        var parallelCoordinatesWrap = g.select('.nv-parallelCoordinatesWrap ').datum(data);\n        parallelCoordinatesWrap.transition().call(parallelCoordinates); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n        //Display reset brush button\n\n        parallelCoordinates.dispatch.on('brushEnd', function (active, hasActiveBrush) {\n          if (hasActiveBrush) {\n            displayBrush = true;\n            dispatch.brushEnd(active);\n          } else {\n            displayBrush = false;\n          }\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); //Update dimensions order and display reset sorting button\n\n        parallelCoordinates.dispatch.on('dimensionsOrder', function (e) {\n          dimensionData.sort(function (a, b) {\n            return a.currentPosition - b.currentPosition;\n          });\n          var isSorted = false;\n          dimensionData.forEach(function (d, i) {\n            d.currentPosition = i;\n            if (d.currentPosition !== d.originalPosition) isSorted = true;\n          });\n          dispatch.dimensionsOrder(dimensionData, isSorted);\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            dimensionData.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('parraleleCoordinateChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    parallelCoordinates.dispatch.on('elementMouseover.tooltip', function (evt) {\n      var tp = {\n        key: evt.label,\n        color: evt.color,\n        series: []\n      };\n\n      if (evt.values) {\n        Object.keys(evt.values).forEach(function (d) {\n          var dim = evt.dimensions.filter(function (dd) {\n            return dd.key === d;\n          })[0];\n\n          if (dim) {\n            var v;\n\n            if (isNaN(evt.values[d]) || isNaN(parseFloat(evt.values[d]))) {\n              v = nanValue;\n            } else {\n              v = dim.format(evt.values[d]);\n            }\n\n            tp.series.push({\n              idx: dim.currentPosition,\n              key: d,\n              value: v,\n              color: dim.color\n            });\n          }\n        });\n        tp.series.sort(function (a, b) {\n          return a.idx - b.idx;\n        });\n      }\n\n      tooltip.data(tp).hidden(false);\n    });\n    parallelCoordinates.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    parallelCoordinates.dispatch.on('elementMousemove.tooltip', function () {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.parallelCoordinates = parallelCoordinates;\n    chart.legend = legend;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      dimensionData: {\n        get: function get() {\n          return dimensionData;\n        },\n        set: function set(_) {\n          dimensionData = _;\n        }\n      },\n      displayBrush: {\n        get: function get() {\n          return displayBrush;\n        },\n        set: function set(_) {\n          displayBrush = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      nanValue: {\n        get: function get() {\n          return nanValue;\n        },\n        set: function set(_) {\n          nanValue = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          parallelCoordinates.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, parallelCoordinates);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.pie = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 500,\n        height = 500,\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        color = nv.utils.defaultColor(),\n        valueFormat = d3.format(',.2f'),\n        showLabels = true,\n        labelsOutside = false,\n        labelType = \"key\",\n        labelThreshold = .02 //if slice percentage is under this, don't show label\n    ,\n        hideOverlapLabels = false //Hide labels that don't fit in slice\n    ,\n        donut = false,\n        title = false,\n        growOnHover = true,\n        titleOffset = 0,\n        labelSunbeamLayout = false,\n        startAngle = false,\n        padAngle = false,\n        endAngle = false,\n        cornerRadius = 0,\n        donutRatio = 0.5,\n        duration = 250,\n        arcsRadius = [],\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'elementMousemove', 'renderEnd');\n\n    var arcs = [];\n    var arcsOver = []; //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom,\n            radius = Math.min(availableWidth, availableHeight) / 2,\n            arcsRadiusOuter = [],\n            arcsRadiusInner = [];\n        container = d3.select(this);\n\n        if (arcsRadius.length === 0) {\n          var outer = radius - radius / 10;\n          var inner = donutRatio * radius;\n\n          for (var i = 0; i < data[0].length; i++) {\n            arcsRadiusOuter.push(outer);\n            arcsRadiusInner.push(inner);\n          }\n        } else {\n          if (growOnHover) {\n            arcsRadiusOuter = arcsRadius.map(function (d) {\n              return (d.outer - d.outer / 10) * radius;\n            });\n            arcsRadiusInner = arcsRadius.map(function (d) {\n              return (d.inner - d.inner / 10) * radius;\n            });\n            donutRatio = d3.min(arcsRadius.map(function (d) {\n              return d.inner - d.inner / 10;\n            }));\n          } else {\n            arcsRadiusOuter = arcsRadius.map(function (d) {\n              return d.outer * radius;\n            });\n            arcsRadiusInner = arcsRadius.map(function (d) {\n              return d.inner * radius;\n            });\n            donutRatio = d3.min(arcsRadius.map(function (d) {\n              return d.inner;\n            }));\n          }\n        }\n\n        nv.utils.initSVG(container); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('.nv-wrap.nv-pie').data(data);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pie nv-chart-' + id);\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        var g_pie = gEnter.append('g').attr('class', 'nv-pie');\n        gEnter.append('g').attr('class', 'nv-pieLabels');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        g.select('.nv-pie').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')');\n        g.select('.nv-pieLabels').attr('transform', 'translate(' + availableWidth / 2 + ',' + availableHeight / 2 + ')'); //\n\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        arcs = [];\n        arcsOver = [];\n\n        for (var i = 0; i < data[0].length; i++) {\n          var arc = d3.svg.arc().outerRadius(arcsRadiusOuter[i]);\n          var arcOver = d3.svg.arc().outerRadius(arcsRadiusOuter[i] + 5);\n\n          if (startAngle !== false) {\n            arc.startAngle(startAngle);\n            arcOver.startAngle(startAngle);\n          }\n\n          if (endAngle !== false) {\n            arc.endAngle(endAngle);\n            arcOver.endAngle(endAngle);\n          }\n\n          if (donut) {\n            arc.innerRadius(arcsRadiusInner[i]);\n            arcOver.innerRadius(arcsRadiusInner[i]);\n          }\n\n          if (arc.cornerRadius && cornerRadius) {\n            arc.cornerRadius(cornerRadius);\n            arcOver.cornerRadius(cornerRadius);\n          }\n\n          arcs.push(arc);\n          arcsOver.push(arcOver);\n        } // Setup the Pie chart and choose the data element\n\n\n        var pie = d3.layout.pie().sort(null).value(function (d) {\n          return d.disabled ? 0 : getY(d);\n        }); // padAngle added in d3 3.5\n\n        if (pie.padAngle && padAngle) {\n          pie.padAngle(padAngle);\n        } // if title is specified and donut, put it in the middle\n\n\n        if (donut && title) {\n          g_pie.append(\"text\").attr('class', 'nv-pie-title');\n          wrap.select('.nv-pie-title').style(\"text-anchor\", \"middle\").text(function (d) {\n            return title;\n          }).style(\"font-size\", Math.min(availableWidth, availableHeight) * donutRatio * 2 / (title.length + 2) + \"px\").attr(\"dy\", \"0.35em\") // trick to vertically center text\n          .attr('transform', function (d, i) {\n            return 'translate(0, ' + titleOffset + ')';\n          });\n        }\n\n        var slices = wrap.select('.nv-pie').selectAll('.nv-slice').data(pie);\n        var pieLabels = wrap.select('.nv-pieLabels').selectAll('.nv-label').data(pie);\n        slices.exit().remove();\n        pieLabels.exit().remove();\n        var ae = slices.enter().append('g');\n        ae.attr('class', 'nv-slice');\n        ae.on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n\n          if (growOnHover) {\n            d3.select(this).select(\"path\").transition().duration(70).attr(\"d\", arcsOver[i]);\n          }\n\n          dispatch.elementMouseover({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            percent: (d.endAngle - d.startAngle) / (2 * Math.PI)\n          });\n        });\n        ae.on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n\n          if (growOnHover) {\n            d3.select(this).select(\"path\").transition().duration(50).attr(\"d\", arcs[i]);\n          }\n\n          dispatch.elementMouseout({\n            data: d.data,\n            index: i\n          });\n        });\n        ae.on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d.data,\n            index: i\n          });\n        });\n        ae.on('click', function (d, i) {\n          var element = this;\n          dispatch.elementClick({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\"),\n            event: d3.event,\n            element: element\n          });\n        });\n        ae.on('dblclick', function (d, i) {\n          dispatch.elementDblClick({\n            data: d.data,\n            index: i,\n            color: d3.select(this).style(\"fill\")\n          });\n        });\n        slices.attr('fill', function (d, i) {\n          return color(d.data, i);\n        });\n        slices.attr('stroke', function (d, i) {\n          return color(d.data, i);\n        });\n        var paths = ae.append('path').each(function (d) {\n          this._current = d;\n        });\n        slices.select('path').transition().duration(duration).attr('d', function (d, i) {\n          return arcs[i](d);\n        }).attrTween('d', arcTween);\n\n        if (showLabels) {\n          // This does the normal label\n          var labelsArc = [];\n\n          for (var i = 0; i < data[0].length; i++) {\n            labelsArc.push(arcs[i]);\n\n            if (labelsOutside) {\n              if (donut) {\n                labelsArc[i] = d3.svg.arc().outerRadius(arcs[i].outerRadius());\n                if (startAngle !== false) labelsArc[i].startAngle(startAngle);\n                if (endAngle !== false) labelsArc[i].endAngle(endAngle);\n              }\n            } else if (!donut) {\n              labelsArc[i].innerRadius(0);\n            }\n          }\n\n          pieLabels.enter().append(\"g\").classed(\"nv-label\", true).each(function (d, i) {\n            var group = d3.select(this);\n            group.attr('transform', function (d, i) {\n              if (labelSunbeamLayout) {\n                d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\n                d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\n                var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\n                if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                  rotateAngle -= 90;\n                } else {\n                  rotateAngle += 90;\n                }\n\n                return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n              } else {\n                d.outerRadius = radius + 10; // Set Outer Coordinate\n\n                d.innerRadius = radius + 15; // Set Inner Coordinate\n\n                return 'translate(' + labelsArc[i].centroid(d) + ')';\n              }\n            });\n            group.append('rect').style('stroke', '#fff').style('fill', '#fff').attr(\"rx\", 3).attr(\"ry\", 3);\n            group.append('text').style('text-anchor', labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end' : 'middle') //center the text on it's origin or begin/end if orthogonal aligned\n            .style('fill', '#000');\n          });\n          var labelLocationHash = {};\n          var avgHeight = 14;\n          var avgWidth = 140;\n\n          var createHashKey = function createHashKey(coordinates) {\n            return Math.floor(coordinates[0] / avgWidth) * avgWidth + ',' + Math.floor(coordinates[1] / avgHeight) * avgHeight;\n          };\n\n          var getSlicePercentage = function getSlicePercentage(d) {\n            return (d.endAngle - d.startAngle) / (2 * Math.PI);\n          };\n\n          pieLabels.watchTransition(renderWatch, 'pie labels').attr('transform', function (d, i) {\n            if (labelSunbeamLayout) {\n              d.outerRadius = arcsRadiusOuter[i] + 10; // Set Outer Coordinate\n\n              d.innerRadius = arcsRadiusOuter[i] + 15; // Set Inner Coordinate\n\n              var rotateAngle = (d.startAngle + d.endAngle) / 2 * (180 / Math.PI);\n\n              if ((d.startAngle + d.endAngle) / 2 < Math.PI) {\n                rotateAngle -= 90;\n              } else {\n                rotateAngle += 90;\n              }\n\n              return 'translate(' + labelsArc[i].centroid(d) + ') rotate(' + rotateAngle + ')';\n            } else {\n              d.outerRadius = radius + 10; // Set Outer Coordinate\n\n              d.innerRadius = radius + 15; // Set Inner Coordinate\n\n              /*\n              Overlapping pie labels are not good. What this attempts to do is, prevent overlapping.\n              Each label location is hashed, and if a hash collision occurs, we assume an overlap.\n              Adjust the label's y-position to remove the overlap.\n              */\n\n              var center = labelsArc[i].centroid(d);\n              var percent = getSlicePercentage(d);\n\n              if (d.value && percent >= labelThreshold) {\n                var hashKey = createHashKey(center);\n\n                if (labelLocationHash[hashKey]) {\n                  center[1] -= avgHeight;\n                }\n\n                labelLocationHash[createHashKey(center)] = true;\n              }\n\n              return 'translate(' + center + ')';\n            }\n          });\n          pieLabels.select(\".nv-label text\").style('text-anchor', function (d, i) {\n            //center the text on it's origin or begin/end if orthogonal aligned\n            return labelSunbeamLayout ? (d.startAngle + d.endAngle) / 2 < Math.PI ? 'start' : 'end' : 'middle';\n          }).text(function (d, i) {\n            var percent = getSlicePercentage(d);\n            var label = '';\n            if (!d.value || percent < labelThreshold) return '';\n\n            if (typeof labelType === 'function') {\n              label = labelType(d, i, {\n                'key': getX(d.data),\n                'value': getY(d.data),\n                'percent': valueFormat(percent)\n              });\n            } else {\n              switch (labelType) {\n                case 'key':\n                  label = getX(d.data);\n                  break;\n\n                case 'value':\n                  label = valueFormat(getY(d.data));\n                  break;\n\n                case 'percent':\n                  label = d3.format('%')(percent);\n                  break;\n              }\n            }\n\n            return label;\n          });\n\n          if (hideOverlapLabels) {\n            pieLabels.each(function (d, i) {\n              if (!this.getBBox) return;\n              var bb = this.getBBox(),\n                  center = labelsArc[i].centroid(d);\n              var topLeft = {\n                x: center[0] + bb.x,\n                y: center[1] + bb.y\n              };\n              var topRight = {\n                x: topLeft.x + bb.width,\n                y: topLeft.y\n              };\n              var bottomLeft = {\n                x: topLeft.x,\n                y: topLeft.y + bb.height\n              };\n              var bottomRight = {\n                x: topLeft.x + bb.width,\n                y: topLeft.y + bb.height\n              };\n              d.visible = nv.utils.pointIsInArc(topLeft, d, arc) && nv.utils.pointIsInArc(topRight, d, arc) && nv.utils.pointIsInArc(bottomLeft, d, arc) && nv.utils.pointIsInArc(bottomRight, d, arc);\n            }).style('display', function (d) {\n              return d.visible ? null : 'none';\n            });\n          }\n        } // Computes the angle of an arc, converting from radians to degrees.\n\n\n        function angle(d) {\n          var a = (d.startAngle + d.endAngle) * 90 / Math.PI - 90;\n          return a > 90 ? a - 180 : a;\n        }\n\n        function arcTween(a, idx) {\n          a.endAngle = isNaN(a.endAngle) ? 0 : a.endAngle;\n          a.startAngle = isNaN(a.startAngle) ? 0 : a.startAngle;\n          if (!donut) a.innerRadius = 0;\n          var i = d3.interpolate(this._current, a);\n          this._current = i(0);\n          return function (t) {\n            return arcs[idx](i(t));\n          };\n        }\n      });\n      renderWatch.renderEnd('pie immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      arcsRadius: {\n        get: function get() {\n          return arcsRadius;\n        },\n        set: function set(_) {\n          arcsRadius = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      title: {\n        get: function get() {\n          return title;\n        },\n        set: function set(_) {\n          title = _;\n        }\n      },\n      titleOffset: {\n        get: function get() {\n          return titleOffset;\n        },\n        set: function set(_) {\n          titleOffset = _;\n        }\n      },\n      labelThreshold: {\n        get: function get() {\n          return labelThreshold;\n        },\n        set: function set(_) {\n          labelThreshold = _;\n        }\n      },\n      hideOverlapLabels: {\n        get: function get() {\n          return hideOverlapLabels;\n        },\n        set: function set(_) {\n          hideOverlapLabels = _;\n        }\n      },\n      valueFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n        }\n      },\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      endAngle: {\n        get: function get() {\n          return endAngle;\n        },\n        set: function set(_) {\n          endAngle = _;\n        }\n      },\n      startAngle: {\n        get: function get() {\n          return startAngle;\n        },\n        set: function set(_) {\n          startAngle = _;\n        }\n      },\n      padAngle: {\n        get: function get() {\n          return padAngle;\n        },\n        set: function set(_) {\n          padAngle = _;\n        }\n      },\n      cornerRadius: {\n        get: function get() {\n          return cornerRadius;\n        },\n        set: function set(_) {\n          cornerRadius = _;\n        }\n      },\n      donutRatio: {\n        get: function get() {\n          return donutRatio;\n        },\n        set: function set(_) {\n          donutRatio = _;\n        }\n      },\n      labelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n        }\n      },\n      labelSunbeamLayout: {\n        get: function get() {\n          return labelSunbeamLayout;\n        },\n        set: function set(_) {\n          labelSunbeamLayout = _;\n        }\n      },\n      donut: {\n        get: function get() {\n          return donut;\n        },\n        set: function set(_) {\n          donut = _;\n        }\n      },\n      growOnHover: {\n        get: function get() {\n          return growOnHover;\n        },\n        set: function set(_) {\n          growOnHover = _;\n        }\n      },\n      // depreciated after 1.7.1\n      pieLabelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n          nv.deprecated('pieLabelsOutside', 'use labelsOutside instead');\n        }\n      },\n      // depreciated after 1.7.1\n      donutLabelsOutside: {\n        get: function get() {\n          return labelsOutside;\n        },\n        set: function set(_) {\n          labelsOutside = _;\n          nv.deprecated('donutLabelsOutside', 'use labelsOutside instead');\n        }\n      },\n      // deprecated after 1.7.1\n      labelFormat: {\n        get: function get() {\n          return valueFormat;\n        },\n        set: function set(_) {\n          valueFormat = _;\n          nv.deprecated('labelFormat', 'use valueFormat instead');\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = typeof _.top != 'undefined' ? _.top : margin.top;\n          margin.right = typeof _.right != 'undefined' ? _.right : margin.right;\n          margin.bottom = typeof _.bottom != 'undefined' ? _.bottom : margin.bottom;\n          margin.left = typeof _.left != 'undefined' ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      labelType: {\n        get: function get() {\n          return labelType;\n        },\n        set: function set(_) {\n          labelType = _ || 'key';\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.pieChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var pie = nv.models.pie();\n    var legend = nv.models.legend();\n    var tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 20,\n      left: 20\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        showTooltipPercent = false,\n        showLegend = true,\n        legendPosition = \"top\",\n        color = nv.utils.defaultColor(),\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        duration = 250,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd');\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d, i) {\n      return pie.valueFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) {\n          data.forEach(function (series, i) {\n            series.disabled = !state.active[i];\n          });\n        }\n      };\n    }; //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(pie);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var that = this;\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.transition().call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); //set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup containers and skeleton of chart\n\n\n        var wrap = container.selectAll('g.nv-wrap.nv-pieChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-pieChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-pieWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          if (legendPosition === \"top\") {\n            legend.width(availableWidth).key(pie.x());\n            wrap.select('.nv-legendWrap').datum(data).call(legend);\n\n            if (!marginTop && legend.height() !== margin.top) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin);\n            }\n\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n          } else if (legendPosition === \"right\") {\n            var legendWidth = nv.models.legend().width();\n\n            if (availableWidth / 2 < legendWidth) {\n              legendWidth = availableWidth / 2;\n            }\n\n            legend.height(availableHeight).key(pie.x());\n            legend.width(legendWidth);\n            availableWidth -= legend.width();\n            wrap.select('.nv-legendWrap').datum(data).call(legend).attr('transform', 'translate(' + availableWidth + ',0)');\n          } else if (legendPosition === \"bottom\") {\n            legend.width(availableWidth).key(pie.x());\n            wrap.select('.nv-legendWrap').datum(data).call(legend);\n            margin.bottom = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n            wrap.select('.nv-legendWrap').attr('transform', 'translate(0,' + availableHeight + ')');\n          }\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        pie.width(availableWidth).height(availableHeight);\n        var pieWrap = g.select('.nv-pieWrap').datum([data]);\n        d3.transition(pieWrap).call(pie); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        });\n      });\n      renderWatch.renderEnd('pieChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    pie.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt['series'] = {\n        key: chart.x()(evt.data),\n        value: chart.y()(evt.data),\n        color: evt.color,\n        percent: evt.percent\n      };\n\n      if (!showTooltipPercent) {\n        delete evt.percent;\n        delete evt.series.percent;\n      }\n\n      tooltip.data(evt).hidden(false);\n    });\n    pie.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    pie.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.legend = legend;\n    chart.dispatch = dispatch;\n    chart.pie = pie;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart); // use Object get/set functionality to map between vars and chart functions\n\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showTooltipPercent: {\n        get: function get() {\n          return showTooltipPercent;\n        },\n        set: function set(_) {\n          showTooltipPercent = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      // options that require extra logic in the setter\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = _;\n          legend.color(color);\n          pie.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          pie.duration(duration);\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, pie);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sankey = function () {\n    'use strict'; // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sankey = {},\n        nodeWidth = 24,\n        nodePadding = 8,\n        size = [1, 1],\n        nodes = [],\n        links = [],\n        sinksRight = true;\n\n    var layout = function layout(iterations) {\n      computeNodeLinks();\n      computeNodeValues();\n      computeNodeBreadths();\n      computeNodeDepths(iterations);\n    };\n\n    var relayout = function relayout() {\n      computeLinkDepths();\n    }; // SVG path data generator, to be used as 'd' attribute on 'path' element selection.\n\n\n    var link = function link() {\n      var curvature = .5;\n\n      function link(d) {\n        var x0 = d.source.x + d.source.dx,\n            x1 = d.target.x,\n            xi = d3.interpolateNumber(x0, x1),\n            x2 = xi(curvature),\n            x3 = xi(1 - curvature),\n            y0 = d.source.y + d.sy + d.dy / 2,\n            y1 = d.target.y + d.ty + d.dy / 2;\n        var linkPath = 'M' + x0 + ',' + y0 + 'C' + x2 + ',' + y0 + ' ' + x3 + ',' + y1 + ' ' + x1 + ',' + y1;\n        return linkPath;\n      }\n\n      link.curvature = function (_) {\n        if (!arguments.length) return curvature;\n        curvature = +_;\n        return link;\n      };\n\n      return link;\n    }; // Y-position of the middle of a node.\n\n\n    var center = function center(node) {\n      return node.y + node.dy / 2;\n    }; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n    // Populate the sourceLinks and targetLinks for each node.\n    // Also, if the source and target are not objects, assume they are indices.\n\n\n    function computeNodeLinks() {\n      nodes.forEach(function (node) {\n        // Links that have this node as source.\n        node.sourceLinks = []; // Links that have this node as target.\n\n        node.targetLinks = [];\n      });\n      links.forEach(function (link) {\n        var source = link.source,\n            target = link.target;\n        if (typeof source === 'number') source = link.source = nodes[link.source];\n        if (typeof target === 'number') target = link.target = nodes[link.target];\n        source.sourceLinks.push(link);\n        target.targetLinks.push(link);\n      });\n    } // Compute the value (size) of each node by summing the associated links.\n\n\n    function computeNodeValues() {\n      nodes.forEach(function (node) {\n        node.value = Math.max(d3.sum(node.sourceLinks, value), d3.sum(node.targetLinks, value));\n      });\n    } // Iteratively assign the breadth (x-position) for each node.\n    // Nodes are assigned the maximum breadth of incoming neighbors plus one;\n    // nodes with no incoming links are assigned breadth zero, while\n    // nodes with no outgoing links are assigned the maximum breadth.\n\n\n    function computeNodeBreadths() {\n      //\n      var remainingNodes = nodes,\n          nextNodes,\n          x = 0; // Work from left to right.\n      // Keep updating the breath (x-position) of nodes that are target of recently updated nodes.\n      //\n\n      while (remainingNodes.length && x < nodes.length) {\n        nextNodes = [];\n        remainingNodes.forEach(function (node) {\n          node.x = x;\n          node.dx = nodeWidth;\n          node.sourceLinks.forEach(function (link) {\n            if (nextNodes.indexOf(link.target) < 0) {\n              nextNodes.push(link.target);\n            }\n          });\n        });\n        remainingNodes = nextNodes;\n        ++x; //\n      } // Optionally move pure sinks always to the right.\n\n\n      if (sinksRight) {\n        moveSinksRight(x);\n      }\n\n      scaleNodeBreadths((size[0] - nodeWidth) / (x - 1));\n    }\n\n    function moveSourcesRight() {\n      nodes.forEach(function (node) {\n        if (!node.targetLinks.length) {\n          node.x = d3.min(node.sourceLinks, function (d) {\n            return d.target.x;\n          }) - 1;\n        }\n      });\n    }\n\n    function moveSinksRight(x) {\n      nodes.forEach(function (node) {\n        if (!node.sourceLinks.length) {\n          node.x = x - 1;\n        }\n      });\n    }\n\n    function scaleNodeBreadths(kx) {\n      nodes.forEach(function (node) {\n        node.x *= kx;\n      });\n    } // Compute the depth (y-position) for each node.\n\n\n    function computeNodeDepths(iterations) {\n      // Group nodes by breath.\n      var nodesByBreadth = d3.nest().key(function (d) {\n        return d.x;\n      }).sortKeys(d3.ascending).entries(nodes).map(function (d) {\n        return d.values;\n      }); //\n\n      initializeNodeDepth();\n      resolveCollisions();\n      computeLinkDepths();\n\n      for (var alpha = 1; iterations > 0; --iterations) {\n        relaxRightToLeft(alpha *= .99);\n        resolveCollisions();\n        computeLinkDepths();\n        relaxLeftToRight(alpha);\n        resolveCollisions();\n        computeLinkDepths();\n      }\n\n      function initializeNodeDepth() {\n        // Calculate vertical scaling factor.\n        var ky = d3.min(nodesByBreadth, function (nodes) {\n          return (size[1] - (nodes.length - 1) * nodePadding) / d3.sum(nodes, value);\n        });\n        nodesByBreadth.forEach(function (nodes) {\n          nodes.forEach(function (node, i) {\n            node.y = i;\n            node.dy = node.value * ky;\n          });\n        });\n        links.forEach(function (link) {\n          link.dy = link.value * ky;\n        });\n      }\n\n      function relaxLeftToRight(alpha) {\n        nodesByBreadth.forEach(function (nodes, breadth) {\n          nodes.forEach(function (node) {\n            if (node.targetLinks.length) {\n              // Value-weighted average of the y-position of source node centers linked to this node.\n              var y = d3.sum(node.targetLinks, weightedSource) / d3.sum(node.targetLinks, value);\n              node.y += (y - center(node)) * alpha;\n            }\n          });\n        });\n\n        function weightedSource(link) {\n          return (link.source.y + link.sy + link.dy / 2) * link.value;\n        }\n      }\n\n      function relaxRightToLeft(alpha) {\n        nodesByBreadth.slice().reverse().forEach(function (nodes) {\n          nodes.forEach(function (node) {\n            if (node.sourceLinks.length) {\n              // Value-weighted average of the y-positions of target nodes linked to this node.\n              var y = d3.sum(node.sourceLinks, weightedTarget) / d3.sum(node.sourceLinks, value);\n              node.y += (y - center(node)) * alpha;\n            }\n          });\n        });\n\n        function weightedTarget(link) {\n          return (link.target.y + link.ty + link.dy / 2) * link.value;\n        }\n      }\n\n      function resolveCollisions() {\n        nodesByBreadth.forEach(function (nodes) {\n          var node,\n              dy,\n              y0 = 0,\n              n = nodes.length,\n              i; // Push any overlapping nodes down.\n\n          nodes.sort(ascendingDepth);\n\n          for (i = 0; i < n; ++i) {\n            node = nodes[i];\n            dy = y0 - node.y;\n            if (dy > 0) node.y += dy;\n            y0 = node.y + node.dy + nodePadding;\n          } // If the bottommost node goes outside the bounds, push it back up.\n\n\n          dy = y0 - nodePadding - size[1];\n\n          if (dy > 0) {\n            y0 = node.y -= dy; // Push any overlapping nodes back up.\n\n            for (i = n - 2; i >= 0; --i) {\n              node = nodes[i];\n              dy = node.y + node.dy + nodePadding - y0;\n              if (dy > 0) node.y -= dy;\n              y0 = node.y;\n            }\n          }\n        });\n      }\n\n      function ascendingDepth(a, b) {\n        return a.y - b.y;\n      }\n    } // Compute y-offset of the source endpoint (sy) and target endpoints (ty) of links,\n    // relative to the source/target node's y-position.\n\n\n    function computeLinkDepths() {\n      nodes.forEach(function (node) {\n        node.sourceLinks.sort(ascendingTargetDepth);\n        node.targetLinks.sort(ascendingSourceDepth);\n      });\n      nodes.forEach(function (node) {\n        var sy = 0,\n            ty = 0;\n        node.sourceLinks.forEach(function (link) {\n          link.sy = sy;\n          sy += link.dy;\n        });\n        node.targetLinks.forEach(function (link) {\n          link.ty = ty;\n          ty += link.dy;\n        });\n      });\n\n      function ascendingSourceDepth(a, b) {\n        return a.source.y - b.source.y;\n      }\n\n      function ascendingTargetDepth(a, b) {\n        return a.target.y - b.target.y;\n      }\n    } // Value property accessor.\n\n\n    function value(x) {\n      return x.value;\n    }\n\n    sankey.options = nv.utils.optionsFunc.bind(sankey);\n    sankey._options = Object.create({}, {\n      nodeWidth: {\n        get: function get() {\n          return nodeWidth;\n        },\n        set: function set(_) {\n          nodeWidth = +_;\n        }\n      },\n      nodePadding: {\n        get: function get() {\n          return nodePadding;\n        },\n        set: function set(_) {\n          nodePadding = _;\n        }\n      },\n      nodes: {\n        get: function get() {\n          return nodes;\n        },\n        set: function set(_) {\n          nodes = _;\n        }\n      },\n      links: {\n        get: function get() {\n          return links;\n        },\n        set: function set(_) {\n          links = _;\n        }\n      },\n      size: {\n        get: function get() {\n          return size;\n        },\n        set: function set(_) {\n          size = _;\n        }\n      },\n      sinksRight: {\n        get: function get() {\n          return sinksRight;\n        },\n        set: function set(_) {\n          sinksRight = _;\n        }\n      },\n      layout: {\n        get: function get() {\n          layout(32);\n        },\n        set: function set(_) {\n          layout(_);\n        }\n      },\n      relayout: {\n        get: function get() {\n          relayout();\n        },\n        set: function set(_) {}\n      },\n      center: {\n        get: function get() {\n          return center();\n        },\n        set: function set(_) {\n          if (typeof _ === 'function') {\n            center = _;\n          }\n        }\n      },\n      link: {\n        get: function get() {\n          return link();\n        },\n        set: function set(_) {\n          if (typeof _ === 'function') {\n            link = _;\n          }\n\n          return link();\n        }\n      }\n    });\n    nv.utils.initOptions(sankey);\n    return sankey;\n  };\n\n  nv.models.sankeyChart = function () {\n    \"use strict\"; // Sources:\n    // - https://bost.ocks.org/mike/sankey/\n    // - https://github.com/soxofaan/d3-plugin-captain-sankey\n    //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 5,\n      right: 0,\n      bottom: 5,\n      left: 0\n    },\n        sankey = nv.models.sankey(),\n        width = 600,\n        height = 400,\n        nodeWidth = 36,\n        nodePadding = 40,\n        units = 'units',\n        center = undefined; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var formatNumber = d3.format(',.0f'); // zero decimal places\n\n    var format = function format(d) {\n      return formatNumber(d) + ' ' + units;\n    };\n\n    var color = d3.scale.category20();\n\n    var linkTitle = function linkTitle(d) {\n      return d.source.name + ' → ' + d.target.name + '\\n' + format(d.value);\n    };\n\n    var nodeFillColor = function nodeFillColor(d) {\n      return d.color = color(d.name.replace(/ .*/, ''));\n    };\n\n    var nodeStrokeColor = function nodeStrokeColor(d) {\n      return d3.rgb(d.color).darker(2);\n    };\n\n    var nodeTitle = function nodeTitle(d) {\n      return d.name + '\\n' + format(d.value);\n    };\n\n    var showError = function showError(element, message) {\n      element.append('text').attr('x', 0).attr('y', 0).attr('class', 'nvd3-sankey-chart-error').attr('text-anchor', 'middle').text(message);\n    };\n\n    function chart(selection) {\n      selection.each(function (data) {\n        var testData = {\n          nodes: [{\n            'node': 1,\n            'name': 'Test 1'\n          }, {\n            'node': 2,\n            'name': 'Test 2'\n          }, {\n            'node': 3,\n            'name': 'Test 3'\n          }, {\n            'node': 4,\n            'name': 'Test 4'\n          }, {\n            'node': 5,\n            'name': 'Test 5'\n          }, {\n            'node': 6,\n            'name': 'Test 6'\n          }],\n          links: [{\n            'source': 0,\n            'target': 1,\n            'value': 2295\n          }, {\n            'source': 0,\n            'target': 5,\n            'value': 1199\n          }, {\n            'source': 1,\n            'target': 2,\n            'value': 1119\n          }, {\n            'source': 1,\n            'target': 5,\n            'value': 1176\n          }, {\n            'source': 2,\n            'target': 3,\n            'value': 487\n          }, {\n            'source': 2,\n            'target': 5,\n            'value': 632\n          }, {\n            'source': 3,\n            'target': 4,\n            'value': 301\n          }, {\n            'source': 3,\n            'target': 5,\n            'value': 186\n          }]\n        }; // Error handling\n\n        var isDataValid = false;\n        var dataAvailable = false; // check if data is valid\n\n        if ((typeof data['nodes'] === 'object' && data['nodes'].length) >= 0 && (typeof data['links'] === 'object' && data['links'].length) >= 0) {\n          isDataValid = true;\n        } // check if data is available\n\n\n        if (data['nodes'] && data['nodes'].length > 0 && data['links'] && data['links'].length > 0) {\n          dataAvailable = true;\n        } // show error\n\n\n        if (!isDataValid) {\n          console.error('NVD3 Sankey chart error:', 'invalid data format for', data);\n          console.info('Valid data format is: ', testData, JSON.stringify(testData));\n          showError(selection, 'Error loading chart, data is invalid');\n          return false;\n        } // TODO use nv.utils.noData\n\n\n        if (!dataAvailable) {\n          showError(selection, 'No data available');\n          return false;\n        } // No errors, continue\n        // append the svg canvas to the page\n\n\n        var svg = selection.append('svg').attr('width', width).attr('height', height).append('g').attr('class', 'nvd3 nv-wrap nv-sankeyChart'); // Set the sankey diagram properties\n\n        sankey.nodeWidth(nodeWidth).nodePadding(nodePadding).size([width, height]);\n        var path = sankey.link();\n        sankey.nodes(data.nodes).links(data.links).layout(32).center(center); // add in the links\n\n        var link = svg.append('g').selectAll('.link').data(data.links).enter().append('path').attr('class', 'link').attr('d', path).style('stroke-width', function (d) {\n          return Math.max(1, d.dy);\n        }).sort(function (a, b) {\n          return b.dy - a.dy;\n        }); // add the link titles\n\n        link.append('title').text(linkTitle); // add in the nodes\n\n        var node = svg.append('g').selectAll('.node').data(data.nodes).enter().append('g').attr('class', 'node').attr('transform', function (d) {\n          return 'translate(' + d.x + ',' + d.y + ')';\n        }).call(d3.behavior.drag().origin(function (d) {\n          return d;\n        }).on('dragstart', function () {\n          this.parentNode.appendChild(this);\n        }).on('drag', dragmove)); // add the rectangles for the nodes\n\n        node.append('rect').attr('height', function (d) {\n          return d.dy;\n        }).attr('width', sankey.nodeWidth()).style('fill', nodeFillColor).style('stroke', nodeStrokeColor).append('title').text(nodeTitle); // add in the title for the nodes\n\n        node.append('text').attr('x', -6).attr('y', function (d) {\n          return d.dy / 2;\n        }).attr('dy', '.35em').attr('text-anchor', 'end').attr('transform', null).text(function (d) {\n          return d.name;\n        }).filter(function (d) {\n          return d.x < width / 2;\n        }).attr('x', 6 + sankey.nodeWidth()).attr('text-anchor', 'start'); // the function for moving the nodes\n\n        function dragmove(d) {\n          d3.select(this).attr('transform', 'translate(' + d.x + ',' + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + ')');\n          sankey.relayout();\n          link.attr('d', path);\n        }\n      });\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      units: {\n        get: function get() {\n          return units;\n        },\n        set: function set(_) {\n          units = _;\n        }\n      },\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      format: {\n        get: function get() {\n          return format;\n        },\n        set: function set(_) {\n          format = _;\n        }\n      },\n      linkTitle: {\n        get: function get() {\n          return linkTitle;\n        },\n        set: function set(_) {\n          linkTitle = _;\n        }\n      },\n      nodeWidth: {\n        get: function get() {\n          return nodeWidth;\n        },\n        set: function set(_) {\n          nodeWidth = _;\n        }\n      },\n      nodePadding: {\n        get: function get() {\n          return nodePadding;\n        },\n        set: function set(_) {\n          nodePadding = _;\n        }\n      },\n      center: {\n        get: function get() {\n          return center;\n        },\n        set: function set(_) {\n          center = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      nodeStyle: {\n        get: function get() {\n          return {};\n        },\n        set: function set(_) {\n          nodeFillColor = _.fillColor !== undefined ? _.fillColor : nodeFillColor;\n          nodeStrokeColor = _.strokeColor !== undefined ? _.strokeColor : nodeStrokeColor;\n          nodeTitle = _.title !== undefined ? _.title : nodeTitle;\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.scatter = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor() // chooses color\n    ,\n        pointBorderColor = null,\n        id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't select one\n    ,\n        container = null,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        z = d3.scale.linear() //linear because d3.svg.shape.size is treated as area\n    ,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value\n    ,\n        getSize = function getSize(d) {\n      return d.size || 1;\n    } // accessor to get the point size\n    ,\n        getShape = function getShape(d) {\n      return d.shape || 'circle';\n    } // accessor to get point shape\n    ,\n        forceX = [] // List of numbers to Force into the X scale (ie. 0, or a max / min, etc.)\n    ,\n        forceY = [] // List of numbers to Force into the Y scale\n    ,\n        forceSize = [] // List of numbers to Force into the Size scale\n    ,\n        interactive = true // If true, plots a voronoi overlay for advanced point intersection\n    ,\n        pointActive = function pointActive(d) {\n      return !d.notActive;\n    } // any points that return false will be filtered out\n    ,\n        padData = false // If true, adds half a data points width to front and back, for lining up a line chart with a bar chart\n    ,\n        padDataOuter = .1 //outerPadding to imitate ordinal scale outer padding\n    ,\n        clipEdge = false // if true, masks points within x and y scale\n    ,\n        clipVoronoi = true // if true, masks each point with a circle... can turn off to slightly increase performance\n    ,\n        showVoronoi = false // display the voronoi areas\n    ,\n        clipRadius = function clipRadius() {\n      return 25;\n    } // function to get the radius for voronoi point clips\n    ,\n        xDomain = null // Override x domain (skips the calculation from data)\n    ,\n        yDomain = null // Override y domain\n    ,\n        xRange = null // Override x range\n    ,\n        yRange = null // Override y range\n    ,\n        sizeDomain = null // Override point size domain\n    ,\n        sizeRange = null,\n        singlePoint = false,\n        dispatch = d3.dispatch('elementClick', 'elementDblClick', 'elementMouseover', 'elementMouseout', 'renderEnd'),\n        useVoronoi = true,\n        duration = 250,\n        interactiveUpdateDelay = 300,\n        showLabels = false; //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var x0,\n        y0,\n        z0 // used to store previous scales\n    ,\n        xDom,\n        yDom // used to store previous domains\n    ,\n        width0,\n        height0,\n        timeoutID,\n        needsUpdate = false // Flag for when the points are visually updating, but the interactive layer is behind, to disable tooltips\n    ,\n        renderWatch = nv.utils.renderWatch(dispatch, duration),\n        _sizeRange_def = [16, 256],\n        _cache = {}; //============================================================\n    // Diff and Cache Utilities\n    //------------------------------------------------------------\n    // getDiffs is used to filter unchanged points from the update\n    // selection. It implicitly updates it's cache when called and\n    // therefor the diff is based upon the previous invocation NOT\n    // the previous update.\n    //\n    // getDiffs takes a point as its first argument followed by n\n    // key getter pairs (d, [key, get... key, get]) this approach\n    // was chosen for efficiency. (The filter will call it a LOT).\n    //\n    // It is important to call delCache on point exit to prevent a\n    // memory leak. It is also needed to prevent invalid caches if\n    // a new point uses the same series and point id key.\n    //\n    // Argument Performance Concerns:\n    // - Object property lists for key getter pairs would be very\n    // expensive (points * objects for the GC every update).\n    // - ES6 function names for implicit keys would be nice but\n    // they are not guaranteed to be unique.\n    // - function.toString to obtain implicit keys is possible\n    // but long object keys are not free (internal hash).\n    // - Explicit key without objects are the most efficient.\n\n    function getCache(d) {\n      var key, val;\n      key = d[0].series + ':' + d[1];\n      val = _cache[key] = _cache[key] || {};\n      return val;\n    }\n\n    function delCache(d) {\n      var key, val;\n      key = d[0].series + ':' + d[1];\n      delete _cache[key];\n    }\n\n    function getDiffs(d) {\n      var i,\n          key,\n          val,\n          cache = getCache(d),\n          diffs = false;\n\n      for (i = 1; i < arguments.length; i += 2) {\n        key = arguments[i];\n        val = arguments[i + 1](d[0], d[1]);\n\n        if (cache[key] !== val || !cache.hasOwnProperty(key)) {\n          cache[key] = val;\n          diffs = true;\n        }\n      }\n\n      return diffs;\n    }\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n        nv.utils.initSVG(container); //add series index to each data point for reference\n\n        data.forEach(function (series, i) {\n          series.values.forEach(function (point) {\n            point.series = i;\n          });\n        }); // Setup Scales\n\n        var logScale = typeof chart.yScale().base === \"function\"; // Only log scale has a method \"base()\"\n        // remap and flatten the data for use in calculating the scales' domains\n\n        var seriesData = xDomain && yDomain && sizeDomain ? [] : // if we know xDomain and yDomain and sizeDomain, no need to calculate.... if Size is constant remember to set sizeDomain to speed up performance\n        d3.merge(data.map(function (d) {\n          return d.values.map(function (d, i) {\n            return {\n              x: getX(d, i),\n              y: getY(d, i),\n              size: getSize(d, i)\n            };\n          });\n        }));\n        x.domain(xDomain || d3.extent(seriesData.map(function (d) {\n          return d.x;\n        }).concat(forceX)));\n        if (padData && data[0]) x.range(xRange || [(availableWidth * padDataOuter + availableWidth) / (2 * data[0].values.length), availableWidth - availableWidth * (1 + padDataOuter) / (2 * data[0].values.length)]); //x.range([availableWidth * .5 / data[0].values.length, availableWidth * (data[0].values.length - .5)  / data[0].values.length ]);\n        else x.range(xRange || [0, availableWidth]);\n\n        if (logScale) {\n          var min = d3.min(seriesData.map(function (d) {\n            if (d.y !== 0) return d.y;\n          }));\n          y.clamp(true).domain(yDomain || d3.extent(seriesData.map(function (d) {\n            if (d.y !== 0) return d.y;else return min * 0.1;\n          }).concat(forceY))).range(yRange || [availableHeight, 0]);\n        } else {\n          y.domain(yDomain || d3.extent(seriesData.map(function (d) {\n            return d.y;\n          }).concat(forceY))).range(yRange || [availableHeight, 0]);\n        }\n\n        z.domain(sizeDomain || d3.extent(seriesData.map(function (d) {\n          return d.size;\n        }).concat(forceSize))).range(sizeRange || _sizeRange_def); // If scale's domain don't have a range, slightly adjust to make one... so a chart can show a single data point\n\n        singlePoint = x.domain()[0] === x.domain()[1] || y.domain()[0] === y.domain()[1];\n        if (x.domain()[0] === x.domain()[1]) x.domain()[0] ? x.domain([x.domain()[0] - x.domain()[0] * 0.01, x.domain()[1] + x.domain()[1] * 0.01]) : x.domain([-1, 1]);\n        if (y.domain()[0] === y.domain()[1]) y.domain()[0] ? y.domain([y.domain()[0] - y.domain()[0] * 0.01, y.domain()[1] + y.domain()[1] * 0.01]) : y.domain([-1, 1]);\n\n        if (isNaN(x.domain()[0])) {\n          x.domain([-1, 1]);\n        }\n\n        if (isNaN(y.domain()[0])) {\n          y.domain([-1, 1]);\n        }\n\n        x0 = x0 || x;\n        y0 = y0 || y;\n        z0 = z0 || z;\n        var scaleDiff = x(1) !== x0(1) || y(1) !== y0(1) || z(1) !== z0(1);\n        width0 = width0 || width;\n        height0 = height0 || height;\n        var sizeDiff = width0 !== width || height0 !== height; // Domain Diffs\n\n        xDom = xDom || [];\n        var domainDiff = xDom[0] !== x.domain()[0] || xDom[1] !== x.domain()[1];\n        xDom = x.domain();\n        yDom = yDom || [];\n        domainDiff = domainDiff || yDom[0] !== y.domain()[0] || yDom[1] !== y.domain()[1];\n        yDom = y.domain(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-scatter').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatter nv-chart-' + id);\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.classed('nv-single-point', singlePoint);\n        gEnter.append('g').attr('class', 'nv-groups');\n        gEnter.append('g').attr('class', 'nv-point-paths');\n        wrapEnter.append('g').attr('class', 'nv-point-clips');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect').attr('transform', 'translate( -10, -10)');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth + 20).attr('height', availableHeight > 0 ? availableHeight + 20 : 0);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n\n        function updateInteractiveLayer() {\n          // Always clear needs-update flag regardless of whether or not\n          // we will actually do anything (avoids needless invocations).\n          needsUpdate = false;\n          if (!interactive) return false; // inject series and point index for reference into voronoi\n\n          if (useVoronoi === true) {\n            // nuke all voronoi paths on reload and recreate them\n            wrap.select('.nv-point-paths').selectAll('path').remove();\n            var vertices = d3.merge(data.map(function (group, groupIndex) {\n              return group.values.map(function (point, pointIndex) {\n                // *Adding noise to make duplicates very unlikely\n                // *Injecting series and point index for reference\n                // *Adding a 'jitter' to the points, because there's an issue in d3.geom.voronoi.\n                var pX = getX(point, pointIndex);\n                var pY = getY(point, pointIndex);\n                return [nv.utils.NaNtoZero(x(pX)) + Math.random() * 1e-4, nv.utils.NaNtoZero(y(pY)) + Math.random() * 1e-4, groupIndex, pointIndex, point];\n              }).filter(function (pointArray, pointIndex) {\n                return pointActive(pointArray[4], pointIndex); // Issue #237.. move filter to after map, so pointIndex is correct!\n              });\n            }));\n            if (vertices.length == 0) return false; // No active points, we're done\n\n            if (vertices.length < 3) {\n              // Issue #283 - Adding 2 dummy points to the voronoi b/c voronoi requires min 3 points to work\n              vertices.push([x.range()[0] - 20, y.range()[0] - 20, null, null]);\n              vertices.push([x.range()[1] + 20, y.range()[1] + 20, null, null]);\n              vertices.push([x.range()[0] - 20, y.range()[0] + 20, null, null]);\n              vertices.push([x.range()[1] + 20, y.range()[1] - 20, null, null]);\n            } // keep voronoi sections from going more than 10 outside of graph\n            // to avoid overlap with other things like legend etc\n\n\n            var bounds = d3.geom.polygon([[-10, -10], [-10, height + 10], [width + 10, height + 10], [width + 10, -10]]); // delete duplicates from vertices - essential assumption for d3.geom.voronoi\n\n            var epsilon = 1e-4; // Uses 1e-4 to determine equivalence.\n\n            vertices = vertices.sort(function (a, b) {\n              return a[0] - b[0] || a[1] - b[1];\n            });\n\n            for (var i = 0; i < vertices.length - 1;) {\n              if (Math.abs(vertices[i][0] - vertices[i + 1][0]) < epsilon && Math.abs(vertices[i][1] - vertices[i + 1][1]) < epsilon) {\n                vertices.splice(i + 1, 1);\n              } else {\n                i++;\n              }\n            }\n\n            var voronoi = d3.geom.voronoi(vertices).map(function (d, i) {\n              return {\n                'data': bounds.clip(d),\n                'series': vertices[i][2],\n                'point': vertices[i][3]\n              };\n            });\n            var pointPaths = wrap.select('.nv-point-paths').selectAll('path').data(voronoi);\n            var vPointPaths = pointPaths.enter().append(\"svg:path\").attr(\"d\", function (d) {\n              if (!d || !d.data || d.data.length === 0) return 'M 0 0';else return \"M\" + d.data.join(\",\") + \"Z\";\n            }).attr(\"id\", function (d, i) {\n              return \"nv-path-\" + i;\n            }).attr(\"clip-path\", function (d, i) {\n              return \"url(#nv-clip-\" + id + \"-\" + i + \")\";\n            }); // good for debugging point hover issues\n\n            if (showVoronoi) {\n              vPointPaths.style(\"fill\", d3.rgb(230, 230, 230)).style('fill-opacity', 0.4).style('stroke-opacity', 1).style(\"stroke\", d3.rgb(200, 200, 200));\n            }\n\n            if (clipVoronoi) {\n              // voronoi sections are already set to clip,\n              // just create the circles with the IDs they expect\n              wrap.select('.nv-point-clips').selectAll('*').remove(); // must do * since it has sub-dom\n\n              var pointClips = wrap.select('.nv-point-clips').selectAll('clipPath').data(vertices);\n              var vPointClips = pointClips.enter().append(\"svg:clipPath\").attr(\"id\", function (d, i) {\n                return \"nv-clip-\" + id + \"-\" + i;\n              }).append(\"svg:circle\").attr('cx', function (d) {\n                return d[0];\n              }).attr('cy', function (d) {\n                return d[1];\n              }).attr('r', clipRadius);\n            }\n\n            var mouseEventCallback = function mouseEventCallback(el, d, mDispatch) {\n              if (needsUpdate) return 0;\n              var series = data[d.series];\n              if (series === undefined) return;\n              var point = series.values[d.point];\n              point['color'] = color(series, d.series); // standardize attributes for tooltip.\n\n              point['x'] = getX(point);\n              point['y'] = getY(point); // can't just get box of event node since it's actually a voronoi polygon\n\n              var box = container.node().getBoundingClientRect();\n              var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n              var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\n              var pos = {\n                left: x(getX(point, d.point)) + box.left + scrollLeft + margin.left + 10,\n                top: y(getY(point, d.point)) + box.top + scrollTop + margin.top + 10\n              };\n              mDispatch({\n                point: point,\n                series: series,\n                pos: pos,\n                relativePos: [x(getX(point, d.point)) + margin.left, y(getY(point, d.point)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: d.point,\n                event: d3.event,\n                element: el\n              });\n            };\n\n            pointPaths.on('click', function (d) {\n              mouseEventCallback(this, d, dispatch.elementClick);\n            }).on('dblclick', function (d) {\n              mouseEventCallback(this, d, dispatch.elementDblClick);\n            }).on('mouseover', function (d) {\n              mouseEventCallback(this, d, dispatch.elementMouseover);\n            }).on('mouseout', function (d, i) {\n              mouseEventCallback(this, d, dispatch.elementMouseout);\n            });\n          } else {\n            // add event handlers to points instead voronoi paths\n            wrap.select('.nv-groups').selectAll('.nv-group').selectAll('.nv-point') //.data(dataWithPoints)\n            //.style('pointer-events', 'auto') // recativate events, disabled by css\n            .on('click', function (d, i) {\n              //nv.log('test', d, i);\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              var element = this;\n              dispatch.elementClick({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                event: d3.event,\n                element: element\n              });\n            }).on('dblclick', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementDblClick({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i\n              });\n            }).on('mouseover', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementMouseover({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                color: color(d, i)\n              });\n            }).on('mouseout', function (d, i) {\n              if (needsUpdate || !data[d.series]) return 0; //check if this is a dummy point\n\n              var series = data[d.series],\n                  point = series.values[i];\n              dispatch.elementMouseout({\n                point: point,\n                series: series,\n                pos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                //TODO: make this pos base on the page\n                relativePos: [x(getX(point, i)) + margin.left, y(getY(point, i)) + margin.top],\n                seriesIndex: d.series,\n                pointIndex: i,\n                color: color(d, i)\n              });\n            });\n          }\n        }\n\n        needsUpdate = true;\n        var groups = wrap.select('.nv-groups').selectAll('.nv-group').data(function (d) {\n          return d;\n        }, function (d) {\n          return d.key;\n        });\n        groups.enter().append('g').style('stroke-opacity', 1e-6).style('fill-opacity', 1e-6);\n        groups.exit().remove();\n        groups.attr('class', function (d, i) {\n          return (d.classed || '') + ' nv-group nv-series-' + i;\n        }).classed('nv-noninteractive', !interactive).classed('hover', function (d) {\n          return d.hover;\n        });\n        groups.watchTransition(renderWatch, 'scatter: groups').style('fill', function (d, i) {\n          return color(d, i);\n        }).style('stroke', function (d, i) {\n          return d.pointBorderColor || pointBorderColor || color(d, i);\n        }).style('stroke-opacity', 1).style('fill-opacity', .5); // create the points, maintaining their IDs from the original data set\n\n        var points = groups.selectAll('path.nv-point').data(function (d) {\n          return d.values.map(function (point, pointIndex) {\n            return [point, pointIndex];\n          }).filter(function (pointArray, pointIndex) {\n            return pointActive(pointArray[0], pointIndex);\n          });\n        });\n        points.enter().append('path').attr('class', function (d) {\n          return 'nv-point nv-point-' + d[1];\n        }).style('fill', function (d) {\n          return d.color;\n        }).style('stroke', function (d) {\n          return d.color;\n        }).attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x0(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y0(getY(d[0], d[1]))) + ')';\n        }).attr('d', nv.utils.symbol().type(function (d) {\n          return getShape(d[0]);\n        }).size(function (d) {\n          return z(getSize(d[0], d[1]));\n        }));\n        points.exit().each(delCache).remove();\n        groups.exit().selectAll('path.nv-point').watchTransition(renderWatch, 'scatter exit').attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n        }).remove(); //============================================================\n        // Point Update Optimisation Notes\n        //------------------------------------------------------------\n        // The following update selections are filtered with getDiffs\n        // (defined at the top of this file) this brings a performance\n        // benefit for charts with large data sets that accumulate a\n        // subset of changes or additions over time.\n        //\n        // Uneccesary and expensive DOM calls are avoided by culling\n        // unchanged points from the selection in exchange for the\n        // cheaper overhead of caching and diffing each point first.\n        //\n        // Due to the way D3 and NVD3 work, other global changes need\n        // to be considered in addition to local point properties.\n        // This is a potential source of bugs (if any of the global\n        // changes that possibly affect points are missed).\n        // Update Point Positions [x, y]\n\n        points.filter(function (d) {\n          // getDiffs must always be called to update cache\n          return getDiffs(d, 'x', getX, 'y', getY) || scaleDiff || sizeDiff || domainDiff;\n        }).watchTransition(renderWatch, 'scatter points').attr('transform', function (d) {\n          return 'translate(' + nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n        }); // Update Point Appearance [shape, size]\n\n        points.filter(function (d) {\n          // getDiffs must always be called to update cache\n          return getDiffs(d, 'shape', getShape, 'size', getSize) || scaleDiff || sizeDiff || domainDiff;\n        }).watchTransition(renderWatch, 'scatter points').attr('d', nv.utils.symbol().type(function (d) {\n          return getShape(d[0]);\n        }).size(function (d) {\n          return z(getSize(d[0], d[1]));\n        })); // add label a label to scatter chart\n\n        if (showLabels) {\n          var titles = groups.selectAll('.nv-label').data(function (d) {\n            return d.values.map(function (point, pointIndex) {\n              return [point, pointIndex];\n            }).filter(function (pointArray, pointIndex) {\n              return pointActive(pointArray[0], pointIndex);\n            });\n          });\n          titles.enter().append('text').style('fill', function (d, i) {\n            return d.color;\n          }).style('stroke-opacity', 0).style('fill-opacity', 1).attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x0(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y0(getY(d[0], d[1]))) + ')';\n          }).text(function (d, i) {\n            return d[0].label;\n          });\n          titles.exit().remove();\n          groups.exit().selectAll('path.nv-label').watchTransition(renderWatch, 'scatter exit').attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n          }).remove();\n          titles.each(function (d) {\n            d3.select(this).classed('nv-label', true).classed('nv-label-' + d[1], false).classed('hover', false);\n          });\n          titles.watchTransition(renderWatch, 'scatter labels').attr('transform', function (d) {\n            var dx = nv.utils.NaNtoZero(x(getX(d[0], d[1]))) + Math.sqrt(z(getSize(d[0], d[1])) / Math.PI) + 2;\n            return 'translate(' + dx + ',' + nv.utils.NaNtoZero(y(getY(d[0], d[1]))) + ')';\n          });\n        } // Delay updating the invisible interactive layer for smoother animation\n\n\n        if (interactiveUpdateDelay) {\n          clearTimeout(timeoutID); // stop repeat calls to updateInteractiveLayer\n\n          timeoutID = setTimeout(updateInteractiveLayer, interactiveUpdateDelay);\n        } else {\n          updateInteractiveLayer();\n        } //store old scales for use in transitions on update\n\n\n        x0 = x.copy();\n        y0 = y.copy();\n        z0 = z.copy();\n        width0 = width;\n        height0 = height;\n      });\n      renderWatch.renderEnd('scatter immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart); // utility function calls provided by this chart\n\n    chart._calls = new function () {\n      this.clearHighlights = function () {\n        nv.dom.write(function () {\n          container.selectAll(\".nv-point.hover\").classed(\"hover\", false);\n        });\n        return null;\n      };\n\n      this.highlightPoint = function (seriesIndex, pointIndex, isHoverOver) {\n        nv.dom.write(function () {\n          container.select('.nv-groups').selectAll(\".nv-series-\" + seriesIndex).selectAll(\".nv-point-\" + pointIndex).classed(\"hover\", isHoverOver);\n        });\n      };\n    }(); // trigger calls from events too\n\n    dispatch.on('elementMouseover.point', function (d) {\n      if (interactive) chart._calls.highlightPoint(d.seriesIndex, d.pointIndex, true);\n    });\n    dispatch.on('elementMouseout.point', function (d) {\n      if (interactive) chart._calls.highlightPoint(d.seriesIndex, d.pointIndex, false);\n    });\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      pointScale: {\n        get: function get() {\n          return z;\n        },\n        set: function set(_) {\n          z = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      pointDomain: {\n        get: function get() {\n          return sizeDomain;\n        },\n        set: function set(_) {\n          sizeDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      pointRange: {\n        get: function get() {\n          return sizeRange;\n        },\n        set: function set(_) {\n          sizeRange = _;\n        }\n      },\n      forceX: {\n        get: function get() {\n          return forceX;\n        },\n        set: function set(_) {\n          forceX = _;\n        }\n      },\n      forceY: {\n        get: function get() {\n          return forceY;\n        },\n        set: function set(_) {\n          forceY = _;\n        }\n      },\n      forcePoint: {\n        get: function get() {\n          return forceSize;\n        },\n        set: function set(_) {\n          forceSize = _;\n        }\n      },\n      interactive: {\n        get: function get() {\n          return interactive;\n        },\n        set: function set(_) {\n          interactive = _;\n        }\n      },\n      pointActive: {\n        get: function get() {\n          return pointActive;\n        },\n        set: function set(_) {\n          pointActive = _;\n        }\n      },\n      padDataOuter: {\n        get: function get() {\n          return padDataOuter;\n        },\n        set: function set(_) {\n          padDataOuter = _;\n        }\n      },\n      padData: {\n        get: function get() {\n          return padData;\n        },\n        set: function set(_) {\n          padData = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      clipVoronoi: {\n        get: function get() {\n          return clipVoronoi;\n        },\n        set: function set(_) {\n          clipVoronoi = _;\n        }\n      },\n      clipRadius: {\n        get: function get() {\n          return clipRadius;\n        },\n        set: function set(_) {\n          clipRadius = _;\n        }\n      },\n      showVoronoi: {\n        get: function get() {\n          return showVoronoi;\n        },\n        set: function set(_) {\n          showVoronoi = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      interactiveUpdateDelay: {\n        get: function get() {\n          return interactiveUpdateDelay;\n        },\n        set: function set(_) {\n          interactiveUpdateDelay = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      pointBorderColor: {\n        get: function get() {\n          return pointBorderColor;\n        },\n        set: function set(_) {\n          pointBorderColor = _;\n        }\n      },\n      // simple functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      pointSize: {\n        get: function get() {\n          return getSize;\n        },\n        set: function set(_) {\n          getSize = d3.functor(_);\n        }\n      },\n      pointShape: {\n        get: function get() {\n          return getShape;\n        },\n        set: function set(_) {\n          getShape = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      useVoronoi: {\n        get: function get() {\n          return useVoronoi;\n        },\n        set: function set(_) {\n          useVoronoi = _;\n\n          if (useVoronoi === false) {\n            clipVoronoi = false;\n          }\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.scatterChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var scatter = nv.models.scatter(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        distX = nv.models.distribution(),\n        distY = nv.models.distribution(),\n        tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 50,\n      left: 75\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        container = null,\n        color = nv.utils.defaultColor(),\n        x = scatter.xScale(),\n        y = scatter.yScale(),\n        showDistX = false,\n        showDistY = false,\n        showLegend = true,\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        state = nv.utils.state(),\n        defaultState = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        noData = null,\n        duration = 250,\n        showLabels = false;\n    scatter.xScale(x).yScale(y);\n    xAxis.orient('bottom').tickPadding(10);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left').tickPadding(10);\n    distX.axis('x');\n    distY.axis('y');\n    tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    }); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var x0,\n        y0,\n        renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          })\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      if (showDistX) renderWatch.models(distX);\n      if (showDistY) renderWatch.models(distY);\n      selection.each(function (data) {\n        var that = this;\n        container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) container.call(chart);else container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disableddisabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display noData message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          renderWatch.renderEnd('scatter immediate');\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = scatter.xScale();\n        y = scatter.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-scatterChart').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-scatterChart nv-chart-' + scatter.id());\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g'); // background for pointer events\n\n        gEnter.append('rect').attr('class', 'nvd3 nv-background').style(\"pointer-events\", \"none\");\n        gEnter.append('g').attr('class', 'nv-x nv-axis');\n        gEnter.append('g').attr('class', 'nv-y nv-axis');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        gEnter.append('g').attr('class', 'nv-regressionLinesWrap');\n        gEnter.append('g').attr('class', 'nv-distWrap');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } // Legend\n\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = availableWidth;\n          legend.width(legendWidth);\n          wrap.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (!marginTop && legend.height() !== margin.top) {\n            margin.top = legend.height();\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n          }\n\n          wrap.select('.nv-legendWrap').attr('transform', 'translate(0' + ',' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        scatter.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          d.color = d.color || color(d, i);\n          return d.color;\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        })).showLabels(showLabels);\n        wrap.select('.nv-scatterWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })).call(scatter);\n        wrap.select('.nv-regressionLinesWrap').attr('clip-path', 'url(#nv-edge-clip-' + scatter.id() + ')');\n        var regWrap = wrap.select('.nv-regressionLinesWrap').selectAll('.nv-regLines').data(function (d) {\n          return d;\n        });\n        regWrap.enter().append('g').attr('class', 'nv-regLines');\n        var regLine = regWrap.selectAll('.nv-regLine').data(function (d) {\n          return [d];\n        });\n        regLine.enter().append('line').attr('class', 'nv-regLine').style('stroke-opacity', 0); // don't add lines unless we have slope and intercept to use\n\n        regLine.filter(function (d) {\n          return d.intercept && d.slope;\n        }).watchTransition(renderWatch, 'scatterPlusLineChart: regline').attr('x1', x.range()[0]).attr('x2', x.range()[1]).attr('y1', function (d, i) {\n          return y(x.domain()[0] * d.slope + d.intercept);\n        }).attr('y2', function (d, i) {\n          return y(x.domain()[1] * d.slope + d.intercept);\n        }).style('stroke', function (d, i, j) {\n          return color(d, j);\n        }).style('stroke-opacity', function (d, i) {\n          return d.disabled || typeof d.slope === 'undefined' || typeof d.intercept === 'undefined' ? 0 : 1;\n        }); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n\n          g.select('.nv-x.nv-axis').attr('transform', 'translate(0,' + y.range()[0] + ')').call(xAxis);\n        }\n\n        if (showYAxis) {\n          yAxis.scale(y)._ticks(nv.utils.calcTicksY(availableHeight / 36, data)).tickSize(-availableWidth, 0);\n\n          g.select('.nv-y.nv-axis').call(yAxis);\n        } // Setup Distribution\n\n\n        if (showDistX) {\n          distX.getData(scatter.x()).scale(x).width(availableWidth).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled;\n          }));\n          gEnter.select('.nv-distWrap').append('g').attr('class', 'nv-distributionX');\n          g.select('.nv-distributionX').attr('transform', 'translate(0,' + y.range()[0] + ')').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(distX);\n        }\n\n        if (showDistY) {\n          distY.getData(scatter.y()).scale(y).width(availableHeight).color(data.map(function (d, i) {\n            return d.color || color(d, i);\n          }).filter(function (d, i) {\n            return !data[i].disabled;\n          }));\n          gEnter.select('.nv-distWrap').append('g').attr('class', 'nv-distributionY');\n          g.select('.nv-distributionY').attr('transform', 'translate(' + (rightAlignYAxis ? availableWidth : -distY.size()) + ',0)').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(distY);\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined') {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          chart.update();\n        }); // mouseover needs availableHeight so we just keep scatter mouse events inside the chart block\n\n        scatter.dispatch.on('elementMouseout.tooltip', function (evt) {\n          tooltip.hidden(true);\n          container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', 0);\n          container.select('.nv-chart-' + scatter.id() + ' .nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', distY.size());\n        });\n        scatter.dispatch.on('elementMouseover.tooltip', function (evt) {\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-distx-' + evt.pointIndex).attr('y1', evt.relativePos[1] - availableHeight);\n          container.select('.nv-series-' + evt.seriesIndex + ' .nv-disty-' + evt.pointIndex).attr('x2', evt.relativePos[0] + distX.size());\n          tooltip.data(evt).hidden(false);\n        }); //store old scales for use in transitions on update\n\n        x0 = x.copy();\n        y0 = y.copy();\n      });\n      renderWatch.renderEnd('scatter with line immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.legend = legend;\n    chart.xAxis = xAxis;\n    chart.yAxis = yAxis;\n    chart.distX = distX;\n    chart.distY = distY;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      container: {\n        get: function get() {\n          return container;\n        },\n        set: function set(_) {\n          container = _;\n        }\n      },\n      showDistX: {\n        get: function get() {\n          return showDistX;\n        },\n        set: function set(_) {\n          showDistX = _;\n        }\n      },\n      showDistY: {\n        get: function get() {\n          return showDistY;\n        },\n        set: function set(_) {\n          showDistY = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(_ ? 'right' : 'left');\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          distX.color(color);\n          distY.color(color);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sparkline = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 2,\n      right: 0,\n      bottom: 2,\n      left: 0\n    },\n        width = 400,\n        height = 32,\n        container = null,\n        animate = true,\n        x = d3.scale.linear(),\n        y = d3.scale.linear(),\n        getX = function getX(d) {\n      return d.x;\n    },\n        getY = function getY(d) {\n      return d.y;\n    },\n        color = nv.utils.getColor(['#000']),\n        xDomain,\n        yDomain,\n        xRange,\n        yRange,\n        showMinMaxPoints = true,\n        showCurrentPoint = true,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x.domain(xDomain || d3.extent(data, getX)).range(xRange || [0, availableWidth]);\n        y.domain(yDomain || d3.extent(data, getY)).range(yRange || [availableHeight, 0]); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-sparkline').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparkline');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        var paths = wrap.selectAll('path').data(function (d) {\n          return [d];\n        });\n        paths.enter().append('path');\n        paths.exit().remove();\n        paths.style('stroke', function (d, i) {\n          return d.color || color(d, i);\n        }).attr('d', d3.svg.line().x(function (d, i) {\n          return x(getX(d, i));\n        }).y(function (d, i) {\n          return y(getY(d, i));\n        })); // TODO: Add CURRENT data point (Need Min, Mac, Current / Most recent)\n\n        var points = wrap.selectAll('circle.nv-point').data(function (data) {\n          var yValues = data.map(function (d, i) {\n            return getY(d, i);\n          });\n\n          function pointIndex(index) {\n            if (index != -1) {\n              var result = data[index];\n              result.pointIndex = index;\n              return result;\n            } else {\n              return null;\n            }\n          }\n\n          var maxPoint = pointIndex(yValues.lastIndexOf(y.domain()[1])),\n              minPoint = pointIndex(yValues.indexOf(y.domain()[0])),\n              currentPoint = pointIndex(yValues.length - 1);\n          return [showMinMaxPoints ? minPoint : null, showMinMaxPoints ? maxPoint : null, showCurrentPoint ? currentPoint : null].filter(function (d) {\n            return d != null;\n          });\n        });\n        points.enter().append('circle');\n        points.exit().remove();\n        points.attr('cx', function (d, i) {\n          return x(getX(d, d.pointIndex));\n        }).attr('cy', function (d, i) {\n          return y(getY(d, d.pointIndex));\n        }).attr('r', 2).attr('class', function (d, i) {\n          return getX(d, d.pointIndex) == x.domain()[1] ? 'nv-point nv-currentValue' : getY(d, d.pointIndex) == y.domain()[0] ? 'nv-point nv-minValue' : 'nv-point nv-maxValue';\n        });\n      });\n      renderWatch.renderEnd('sparkline immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xDomain: {\n        get: function get() {\n          return xDomain;\n        },\n        set: function set(_) {\n          xDomain = _;\n        }\n      },\n      yDomain: {\n        get: function get() {\n          return yDomain;\n        },\n        set: function set(_) {\n          yDomain = _;\n        }\n      },\n      xRange: {\n        get: function get() {\n          return xRange;\n        },\n        set: function set(_) {\n          xRange = _;\n        }\n      },\n      yRange: {\n        get: function get() {\n          return yRange;\n        },\n        set: function set(_) {\n          yRange = _;\n        }\n      },\n      xScale: {\n        get: function get() {\n          return x;\n        },\n        set: function set(_) {\n          x = _;\n        }\n      },\n      yScale: {\n        get: function get() {\n          return y;\n        },\n        set: function set(_) {\n          y = _;\n        }\n      },\n      animate: {\n        get: function get() {\n          return animate;\n        },\n        set: function set(_) {\n          animate = _;\n        }\n      },\n      showMinMaxPoints: {\n        get: function get() {\n          return showMinMaxPoints;\n        },\n        set: function set(_) {\n          showMinMaxPoints = _;\n        }\n      },\n      showCurrentPoint: {\n        get: function get() {\n          return showCurrentPoint;\n        },\n        set: function set(_) {\n          showCurrentPoint = _;\n        }\n      },\n      //functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    chart.dispatch = dispatch;\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sparklinePlus = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sparkline = nv.models.sparkline();\n    var margin = {\n      top: 15,\n      right: 100,\n      bottom: 10,\n      left: 50\n    },\n        width = null,\n        height = null,\n        x,\n        y,\n        index = [],\n        paused = false,\n        xTickFormat = d3.format(',r'),\n        yTickFormat = d3.format(',.2f'),\n        showLastValue = true,\n        alignValue = true,\n        rightAlignValue = false,\n        noData = null,\n        dispatch = d3.dispatch('renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(sparkline);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          container.call(chart);\n        };\n\n        chart.container = this; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        var currentValue = sparkline.y()(data[data.length - 1], data.length - 1); // Setup Scales\n\n        x = sparkline.xScale();\n        y = sparkline.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-sparklineplus').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-sparklineplus');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-sparklineWrap');\n        gEnter.append('g').attr('class', 'nv-valueWrap');\n        gEnter.append('g').attr('class', 'nv-hoverArea');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Main Chart Component(s)\n\n        var sparklineWrap = g.select('.nv-sparklineWrap');\n        sparkline.width(availableWidth).height(availableHeight);\n        sparklineWrap.call(sparkline);\n\n        if (showLastValue) {\n          var valueWrap = g.select('.nv-valueWrap');\n          var value = valueWrap.selectAll('.nv-currentValue').data([currentValue]);\n          value.enter().append('text').attr('class', 'nv-currentValue').attr('dx', rightAlignValue ? -8 : 8).attr('dy', '.9em').style('text-anchor', rightAlignValue ? 'end' : 'start');\n          value.attr('x', availableWidth + (rightAlignValue ? margin.right : 0)).attr('y', alignValue ? function (d) {\n            return y(d);\n          } : 0).style('fill', sparkline.color()(data[data.length - 1], data.length - 1)).text(yTickFormat(currentValue));\n        }\n\n        gEnter.select('.nv-hoverArea').append('rect').on('mousemove', sparklineHover).on('click', function () {\n          paused = !paused;\n        }).on('mouseout', function () {\n          index = [];\n          updateValueLine();\n        });\n        g.select('.nv-hoverArea rect').attr('transform', function (d) {\n          return 'translate(' + -margin.left + ',' + -margin.top + ')';\n        }).attr('width', availableWidth + margin.left + margin.right).attr('height', availableHeight + margin.top); //index is currently global (within the chart), may or may not keep it that way\n\n        function updateValueLine() {\n          if (paused) return;\n          var hoverValue = g.selectAll('.nv-hoverValue').data(index);\n          var hoverEnter = hoverValue.enter().append('g').attr('class', 'nv-hoverValue').style('stroke-opacity', 0).style('fill-opacity', 0);\n          hoverValue.exit().transition().duration(250).style('stroke-opacity', 0).style('fill-opacity', 0).remove();\n          hoverValue.attr('transform', function (d) {\n            return 'translate(' + x(sparkline.x()(data[d], d)) + ',0)';\n          }).transition().duration(250).style('stroke-opacity', 1).style('fill-opacity', 1);\n          if (!index.length) return;\n          hoverEnter.append('line').attr('x1', 0).attr('y1', -margin.top).attr('x2', 0).attr('y2', availableHeight);\n          hoverEnter.append('text').attr('class', 'nv-xValue').attr('x', -6).attr('y', -margin.top).attr('text-anchor', 'end').attr('dy', '.9em');\n          g.select('.nv-hoverValue .nv-xValue').text(xTickFormat(sparkline.x()(data[index[0]], index[0])));\n          hoverEnter.append('text').attr('class', 'nv-yValue').attr('x', 6).attr('y', -margin.top).attr('text-anchor', 'start').attr('dy', '.9em');\n          g.select('.nv-hoverValue .nv-yValue').text(yTickFormat(sparkline.y()(data[index[0]], index[0])));\n        }\n\n        function sparklineHover() {\n          if (paused) return;\n          var pos = d3.mouse(this)[0] - margin.left;\n\n          function getClosestIndex(data, x) {\n            var distance = Math.abs(sparkline.x()(data[0], 0) - x);\n            var closestIndex = 0;\n\n            for (var i = 0; i < data.length; i++) {\n              if (Math.abs(sparkline.x()(data[i], i) - x) < distance) {\n                distance = Math.abs(sparkline.x()(data[i], i) - x);\n                closestIndex = i;\n              }\n            }\n\n            return closestIndex;\n          }\n\n          index = [getClosestIndex(data, Math.round(x.invert(pos)))];\n          updateValueLine();\n        }\n      });\n      renderWatch.renderEnd('sparklinePlus immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n\n    chart.dispatch = dispatch;\n    chart.sparkline = sparkline;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      xTickFormat: {\n        get: function get() {\n          return xTickFormat;\n        },\n        set: function set(_) {\n          xTickFormat = _;\n        }\n      },\n      yTickFormat: {\n        get: function get() {\n          return yTickFormat;\n        },\n        set: function set(_) {\n          yTickFormat = _;\n        }\n      },\n      showLastValue: {\n        get: function get() {\n          return showLastValue;\n        },\n        set: function set(_) {\n          showLastValue = _;\n        }\n      },\n      alignValue: {\n        get: function get() {\n          return alignValue;\n        },\n        set: function set(_) {\n          alignValue = _;\n        }\n      },\n      rightAlignValue: {\n        get: function get() {\n          return rightAlignValue;\n        },\n        set: function set(_) {\n          rightAlignValue = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, sparkline);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedArea = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 960,\n        height = 500,\n        color = nv.utils.defaultColor() // a function that computes the color\n    ,\n        id = Math.floor(Math.random() * 100000) //Create semi-unique ID incase user doesn't selet one\n    ,\n        container = null,\n        getX = function getX(d) {\n      return d.x;\n    } // accessor to get the x value from a data point\n    ,\n        getY = function getY(d) {\n      return d.y;\n    } // accessor to get the y value from a data point\n    ,\n        defined = function defined(d, i) {\n      return !isNaN(getY(d, i)) && getY(d, i) !== null;\n    } // allows a line to be not continuous when it is not defined\n    ,\n        style = 'stack',\n        offset = 'zero',\n        order = 'default',\n        interpolate = 'linear' // controls the line interpolation\n    ,\n        clipEdge = false // if true, masks lines within x and y scale\n    ,\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        scatter = nv.models.scatter(),\n        duration = 250,\n        dispatch = d3.dispatch('areaClick', 'areaMouseover', 'areaMouseout', 'renderEnd', 'elementClick', 'elementMouseover', 'elementMouseout');\n\n    scatter.pointSize(2.2) // default size\n    .pointDomain([2.2, 2.2]) // all the same size by default\n    ;\n    /************************************\n     * offset:\n     *   'wiggle' (stream)\n     *   'zero' (stacked)\n     *   'expand' (normalize to 100%)\n     *   'silhouette' (simple centered)\n     *\n     * order:\n     *   'inside-out' (stream)\n     *   'default' (input order)\n     ************************************/\n\n    var renderWatch = nv.utils.renderWatch(dispatch, duration);\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(scatter);\n      selection.each(function (data) {\n        var availableWidth = width - margin.left - margin.right,\n            availableHeight = height - margin.top - margin.bottom;\n        container = d3.select(this);\n        nv.utils.initSVG(container); // Setup Scales\n\n        x = scatter.xScale();\n        y = scatter.yScale();\n        var dataRaw = data; // Injecting point index into each point because d3.layout.stack().out does not give index\n\n        data.forEach(function (aseries, i) {\n          aseries.seriesIndex = i;\n          aseries.values = aseries.values.map(function (d, j) {\n            d.index = j;\n            d.seriesIndex = i;\n            return d;\n          });\n        });\n        var dataFiltered = data.filter(function (series) {\n          return !series.disabled;\n        });\n        data = d3.layout.stack().order(order).offset(offset).values(function (d) {\n          return d.values;\n        }) //TODO: make values customizeable in EVERY model in this fashion\n        .x(getX).y(getY).out(function (d, y0, y) {\n          d.display = {\n            y: y,\n            y0: y0\n          };\n        })(dataFiltered); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-stackedarea').data([data]);\n        var wrapEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedarea');\n        var defsEnter = wrapEnter.append('defs');\n        var gEnter = wrapEnter.append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-areaWrap');\n        gEnter.append('g').attr('class', 'nv-scatterWrap');\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // If the user has not specified forceY, make sure 0 is included in the domain\n        // Otherwise, use user-specified values for forceY\n\n        if (scatter.forceY().length == 0) {\n          scatter.forceY().push(0);\n        }\n\n        scatter.width(availableWidth).height(availableHeight).x(getX).y(function (d) {\n          if (d.display !== undefined) {\n            return d.display.y + d.display.y0;\n          }\n        }).color(data.map(function (d, i) {\n          d.color = d.color || color(d, d.seriesIndex);\n          return d.color;\n        }));\n        var scatterWrap = g.select('.nv-scatterWrap').datum(data);\n        scatterWrap.call(scatter);\n        defsEnter.append('clipPath').attr('id', 'nv-edge-clip-' + id).append('rect');\n        wrap.select('#nv-edge-clip-' + id + ' rect').attr('width', availableWidth).attr('height', availableHeight);\n        g.attr('clip-path', clipEdge ? 'url(#nv-edge-clip-' + id + ')' : '');\n        var area = d3.svg.area().defined(defined).x(function (d, i) {\n          return x(getX(d, i));\n        }).y0(function (d) {\n          return y(d.display.y0);\n        }).y1(function (d) {\n          return y(d.display.y + d.display.y0);\n        }).interpolate(interpolate);\n        var zeroArea = d3.svg.area().defined(defined).x(function (d, i) {\n          return x(getX(d, i));\n        }).y0(function (d) {\n          return y(d.display.y0);\n        }).y1(function (d) {\n          return y(d.display.y0);\n        });\n        var path = g.select('.nv-areaWrap').selectAll('path.nv-area').data(function (d) {\n          return d;\n        });\n        path.enter().append('path').attr('class', function (d, i) {\n          return 'nv-area nv-area-' + i;\n        }).attr('d', function (d, i) {\n          return zeroArea(d.values, d.seriesIndex);\n        }).on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true);\n          dispatch.areaMouseover({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.areaMouseout({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        }).on('click', function (d, i) {\n          d3.select(this).classed('hover', false);\n          dispatch.areaClick({\n            point: d,\n            series: d.key,\n            pos: [d3.event.pageX, d3.event.pageY],\n            seriesIndex: d.seriesIndex\n          });\n        });\n        path.exit().remove();\n        path.style('fill', function (d, i) {\n          return d.color || color(d, d.seriesIndex);\n        }).style('stroke', function (d, i) {\n          return d.color || color(d, d.seriesIndex);\n        });\n        path.watchTransition(renderWatch, 'stackedArea path').attr('d', function (d, i) {\n          return area(d.values, i);\n        }); //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n        scatter.dispatch.on('elementMouseover.area', function (e) {\n          g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', true);\n        });\n        scatter.dispatch.on('elementMouseout.area', function (e) {\n          g.select('.nv-chart-' + id + ' .nv-area-' + e.seriesIndex).classed('hover', false);\n        }); //Special offset functions\n\n        chart.d3_stackedOffset_stackPercent = function (stackData) {\n          var n = stackData.length,\n              //How many series\n          m = stackData[0].length,\n              //how many points per series\n          i,\n              j,\n              o,\n              y0 = [];\n\n          for (j = 0; j < m; ++j) {\n            //Looping through all points\n            for (i = 0, o = 0; i < dataRaw.length; i++) {\n              //looping through all series\n              o += getY(dataRaw[i].values[j]); //total y value of all series at a certian point in time.\n            }\n\n            if (o) for (i = 0; i < n; i++) {\n              //(total y value of all series at point in time i) != 0\n              stackData[i][j][1] /= o;\n            } else {\n              //(total y value of all series at point in time i) == 0\n              for (i = 0; i < n; i++) {\n                stackData[i][j][1] = 0;\n              }\n            }\n          }\n\n          for (j = 0; j < m; ++j) {\n            y0[j] = 0;\n          }\n\n          return y0;\n        };\n      });\n      renderWatch.renderEnd('stackedArea immediate');\n      return chart;\n    } //============================================================\n    // Global getters and setters\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    scatter.dispatch.on('elementClick', function () {\n      dispatch.elementClick.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseover', function () {\n      dispatch.elementMouseover.apply(this, arguments);\n    });\n    scatter.dispatch.on('elementMouseout', function () {\n      dispatch.elementMouseout.apply(this, arguments);\n    });\n\n    chart.interpolate = function (_) {\n      if (!arguments.length) return interpolate;\n      interpolate = _;\n      return chart;\n    };\n\n    chart.duration = function (_) {\n      if (!arguments.length) return duration;\n      duration = _;\n      renderWatch.reset(duration);\n      scatter.duration(duration);\n      return chart;\n    };\n\n    chart.dispatch = dispatch;\n    chart.scatter = scatter;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      defined: {\n        get: function get() {\n          return defined;\n        },\n        set: function set(_) {\n          defined = _;\n        }\n      },\n      clipEdge: {\n        get: function get() {\n          return clipEdge;\n        },\n        set: function set(_) {\n          clipEdge = _;\n        }\n      },\n      offset: {\n        get: function get() {\n          return offset;\n        },\n        set: function set(_) {\n          offset = _;\n        }\n      },\n      order: {\n        get: function get() {\n          return order;\n        },\n        set: function set(_) {\n          order = _;\n        }\n      },\n      interpolate: {\n        get: function get() {\n          return interpolate;\n        },\n        set: function set(_) {\n          interpolate = _;\n        }\n      },\n      // simple functor options\n      x: {\n        get: function get() {\n          return getX;\n        },\n        set: function set(_) {\n          getX = d3.functor(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return getY;\n        },\n        set: function set(_) {\n          getY = d3.functor(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      },\n      style: {\n        get: function get() {\n          return style;\n        },\n        set: function set(_) {\n          style = _;\n\n          switch (style) {\n            case 'stack':\n              chart.offset('zero');\n              chart.order('default');\n              break;\n\n            case 'stream':\n              chart.offset('wiggle');\n              chart.order('inside-out');\n              break;\n\n            case 'stream-center':\n              chart.offset('silhouette');\n              chart.order('inside-out');\n              break;\n\n            case 'expand':\n              chart.offset('expand');\n              chart.order('default');\n              break;\n\n            case 'stack_percent':\n              chart.offset(chart.d3_stackedOffset_stackPercent);\n              chart.order('default');\n              break;\n          }\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          scatter.duration(duration);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, scatter);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedAreaChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var stacked = nv.models.stackedArea(),\n        xAxis = nv.models.axis(),\n        yAxis = nv.models.axis(),\n        legend = nv.models.legend(),\n        controls = nv.models.legend(),\n        interactiveLayer = nv.interactiveGuideline(),\n        tooltip = nv.models.tooltip(),\n        focus = nv.models.focus(nv.models.stackedArea());\n    var margin = {\n      top: 10,\n      right: 25,\n      bottom: 50,\n      left: 60\n    },\n        marginTop = null,\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showControls = true,\n        showLegend = true,\n        legendPosition = 'top',\n        showXAxis = true,\n        showYAxis = true,\n        rightAlignYAxis = false,\n        focusEnable = false,\n        useInteractiveGuideline = false,\n        showTotalInTooltip = true,\n        totalLabel = 'TOTAL',\n        x //can be accessed via chart.xScale()\n    ,\n        y //can be accessed via chart.yScale()\n    ,\n        state = nv.utils.state(),\n        defaultState = null,\n        noData = null,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'),\n        controlWidth = 250,\n        controlOptions = ['Stacked', 'Stream', 'Expanded'],\n        controlLabels = {},\n        duration = 250;\n    state.style = stacked.style();\n    xAxis.orient('bottom').tickPadding(7);\n    yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n    tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return yAxis.tickFormat()(d, i);\n    });\n    interactiveLayer.tooltip.headerFormatter(function (d, i) {\n      return xAxis.tickFormat()(d, i);\n    }).valueFormatter(function (d, i) {\n      return d == null ? \"N/A\" : yAxis.tickFormat()(d, i);\n    });\n    var oldYTickFormat = null,\n        oldValueFormatter = null;\n    controls.updateState(false); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    var style = stacked.style();\n\n    var stateGetter = function stateGetter(data) {\n      return function () {\n        return {\n          active: data.map(function (d) {\n            return !d.disabled;\n          }),\n          style: stacked.style()\n        };\n      };\n    };\n\n    var stateSetter = function stateSetter(data) {\n      return function (state) {\n        if (state.style !== undefined) style = state.style;\n        if (state.active !== undefined) data.forEach(function (series, i) {\n          series.disabled = !state.active[i];\n        });\n      };\n    };\n\n    var percentFormatter = d3.format('%');\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(stacked);\n      if (showXAxis) renderWatch.models(xAxis);\n      if (showYAxis) renderWatch.models(yAxis);\n      selection.each(function (data) {\n        var container = d3.select(this),\n            that = this;\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin),\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n\n        chart.update = function () {\n          container.transition().duration(duration).call(chart);\n        };\n\n        chart.container = this;\n        state.setter(stateSetter(data), chart.update).getter(stateGetter(data)).update(); // DEPRECATED set state.disabled\n\n        state.disabled = data.map(function (d) {\n          return !!d.disabled;\n        });\n\n        if (!defaultState) {\n          var key;\n          defaultState = {};\n\n          for (key in state) {\n            if (state[key] instanceof Array) defaultState[key] = state[key].slice(0);else defaultState[key] = state[key];\n          }\n        } // Display No Data message if there's nothing to show.\n\n\n        if (!data || !data.length || !data.filter(function (d) {\n          return d.values.length;\n        }).length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        } // Setup Scales\n\n\n        x = stacked.xScale();\n        y = stacked.yScale(); // Setup containers and skeleton of chart\n\n        var wrap = container.selectAll('g.nv-wrap.nv-stackedAreaChart').data([data]);\n        var gEnter = wrap.enter().append('g').attr('class', 'nvd3 nv-wrap nv-stackedAreaChart').append('g');\n        var g = wrap.select('g');\n        gEnter.append('g').attr('class', 'nv-legendWrap');\n        gEnter.append('g').attr('class', 'nv-controlsWrap');\n        var focusEnter = gEnter.append('g').attr('class', 'nv-focus');\n        focusEnter.append('g').attr('class', 'nv-background').append('rect');\n        focusEnter.append('g').attr('class', 'nv-x nv-axis');\n        focusEnter.append('g').attr('class', 'nv-y nv-axis');\n        focusEnter.append('g').attr('class', 'nv-stackedWrap');\n        focusEnter.append('g').attr('class', 'nv-interactive'); // g.select(\"rect\").attr(\"width\",availableWidth).attr(\"height\",availableHeight);\n\n        var contextEnter = gEnter.append('g').attr('class', 'nv-focusWrap'); // Legend\n\n        if (!showLegend) {\n          g.select('.nv-legendWrap').selectAll('*').remove();\n        } else {\n          var legendWidth = showControls && legendPosition === 'top' ? availableWidth - controlWidth : availableWidth;\n          legend.width(legendWidth);\n          g.select('.nv-legendWrap').datum(data).call(legend);\n\n          if (legendPosition === 'bottom') {\n            // constant from axis.js, plus some margin for better layout\n            var xAxisHeight = (showXAxis ? 12 : 0) + 10;\n            margin.bottom = Math.max(legend.height() + xAxisHeight, margin.bottom);\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            var legendTop = availableHeight + xAxisHeight;\n            g.select('.nv-legendWrap').attr('transform', 'translate(0,' + legendTop + ')');\n          } else if (legendPosition === 'top') {\n            if (!marginTop && margin.top != legend.height()) {\n              margin.top = legend.height();\n              availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n            }\n\n            g.select('.nv-legendWrap').attr('transform', 'translate(' + (availableWidth - legendWidth) + ',' + -margin.top + ')');\n          }\n        } // Controls\n\n\n        if (!showControls) {\n          g.select('.nv-controlsWrap').selectAll('*').remove();\n        } else {\n          var controlsData = [{\n            key: controlLabels.stacked || 'Stacked',\n            metaKey: 'Stacked',\n            disabled: stacked.style() != 'stack',\n            style: 'stack'\n          }, {\n            key: controlLabels.stream || 'Stream',\n            metaKey: 'Stream',\n            disabled: stacked.style() != 'stream',\n            style: 'stream'\n          }, {\n            key: controlLabels.expanded || 'Expanded',\n            metaKey: 'Expanded',\n            disabled: stacked.style() != 'expand',\n            style: 'expand'\n          }, {\n            key: controlLabels.stack_percent || 'Stack %',\n            metaKey: 'Stack_Percent',\n            disabled: stacked.style() != 'stack_percent',\n            style: 'stack_percent'\n          }];\n          controlWidth = controlOptions.length / 3 * 260;\n          controlsData = controlsData.filter(function (d) {\n            return controlOptions.indexOf(d.metaKey) !== -1;\n          });\n          controls.width(controlWidth).color(['#444', '#444', '#444']);\n          g.select('.nv-controlsWrap').datum(controlsData).call(controls);\n          var requiredTop = Math.max(controls.height(), showLegend && legendPosition === 'top' ? legend.height() : 0);\n\n          if (margin.top != requiredTop) {\n            margin.top = requiredTop;\n            availableHeight = nv.utils.availableHeight(height, container, margin) - (focusEnable ? focus.height() : 0);\n          }\n\n          g.select('.nv-controlsWrap').attr('transform', 'translate(0,' + -margin.top + ')');\n        }\n\n        wrap.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n        if (rightAlignYAxis) {\n          g.select(\".nv-y.nv-axis\").attr(\"transform\", \"translate(\" + availableWidth + \",0)\");\n        } //Set up interactive layer\n\n\n        if (useInteractiveGuideline) {\n          interactiveLayer.width(availableWidth).height(availableHeight).margin({\n            left: margin.left,\n            top: margin.top\n          }).svgContainer(container).xScale(x);\n          wrap.select(\".nv-interactive\").call(interactiveLayer);\n        }\n\n        g.select('.nv-focus .nv-background rect').attr('width', availableWidth).attr('height', availableHeight);\n        stacked.width(availableWidth).height(availableHeight).color(data.map(function (d, i) {\n          return d.color || color(d, i);\n        }).filter(function (d, i) {\n          return !data[i].disabled;\n        }));\n        var stackedWrap = g.select('.nv-focus .nv-stackedWrap').datum(data.filter(function (d) {\n          return !d.disabled;\n        })); // Setup Axes\n\n        if (showXAxis) {\n          xAxis.scale(x)._ticks(nv.utils.calcTicksX(availableWidth / 100, data)).tickSize(-availableHeight, 0);\n        }\n\n        if (showYAxis) {\n          var ticks;\n\n          if (stacked.offset() === 'wiggle') {\n            ticks = 0;\n          } else {\n            ticks = nv.utils.calcTicksY(availableHeight / 36, data);\n          }\n\n          yAxis.scale(y)._ticks(ticks).tickSize(-availableWidth, 0);\n        } //============================================================\n        // Update Axes\n        //============================================================\n\n\n        function updateXAxis() {\n          if (showXAxis) {\n            g.select('.nv-focus .nv-x.nv-axis').attr('transform', 'translate(0,' + availableHeight + ')').transition().duration(duration).call(xAxis);\n          }\n        }\n\n        function updateYAxis() {\n          if (showYAxis) {\n            if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n              var currentFormat = yAxis.tickFormat();\n              if (!oldYTickFormat || currentFormat !== percentFormatter) oldYTickFormat = currentFormat; //Forces the yAxis to use percentage in 'expand' mode.\n\n              yAxis.tickFormat(percentFormatter);\n            } else {\n              if (oldYTickFormat) {\n                yAxis.tickFormat(oldYTickFormat);\n                oldYTickFormat = null;\n              }\n            }\n\n            g.select('.nv-focus .nv-y.nv-axis').transition().duration(0).call(yAxis);\n          }\n        } //============================================================\n        // Update Focus\n        //============================================================\n\n\n        if (!focusEnable) {\n          stackedWrap.transition().call(stacked);\n          updateXAxis();\n          updateYAxis();\n        } else {\n          focus.width(availableWidth);\n          g.select('.nv-focusWrap').attr('transform', 'translate(0,' + (availableHeight + margin.bottom + focus.margin().top) + ')').datum(data.filter(function (d) {\n            return !d.disabled;\n          })).call(focus);\n          var extent = focus.brush.empty() ? focus.xDomain() : focus.brush.extent();\n\n          if (extent !== null) {\n            onBrush(extent);\n          }\n        } //============================================================\n        // Event Handling/Dispatching (in chart's scope)\n        //------------------------------------------------------------\n\n\n        stacked.dispatch.on('areaClick.toggle', function (e) {\n          if (data.filter(function (d) {\n            return !d.disabled;\n          }).length === 1) data.forEach(function (d) {\n            d.disabled = false;\n          });else data.forEach(function (d, i) {\n            d.disabled = i != e.seriesIndex;\n          });\n          state.disabled = data.map(function (d) {\n            return !!d.disabled;\n          });\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        legend.dispatch.on('stateChange', function (newState) {\n          for (var key in newState) {\n            state[key] = newState[key];\n          }\n\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        controls.dispatch.on('legendClick', function (d, i) {\n          if (!d.disabled) return;\n          controlsData = controlsData.map(function (s) {\n            s.disabled = true;\n            return s;\n          });\n          d.disabled = false;\n          stacked.style(d.style);\n          state.style = stacked.style();\n          dispatch.stateChange(state);\n          chart.update();\n        });\n        interactiveLayer.dispatch.on('elementMousemove', function (e) {\n          stacked.clearHighlights();\n          var singlePoint,\n              pointIndex,\n              pointXLocation,\n              allData = [],\n              valueSum = 0,\n              allNullValues = true,\n              atleastOnePoint = false;\n          data.filter(function (series, i) {\n            series.seriesIndex = i;\n            return !series.disabled;\n          }).forEach(function (series, i) {\n            pointIndex = nv.interactiveBisect(series.values, e.pointXValue, chart.x());\n            var point = series.values[pointIndex];\n            var pointYValue = chart.y()(point, pointIndex);\n\n            if (pointYValue != null && pointYValue > 0) {\n              stacked.highlightPoint(i, pointIndex, true);\n              atleastOnePoint = true;\n            } // Draw at least one point if all values are zero.\n\n\n            if (i === data.length - 1 && !atleastOnePoint) {\n              stacked.highlightPoint(i, pointIndex, true);\n            }\n\n            if (typeof point === 'undefined') return;\n            if (typeof singlePoint === 'undefined') singlePoint = point;\n            if (typeof pointXLocation === 'undefined') pointXLocation = chart.xScale()(chart.x()(point, pointIndex)); //If we are in 'expand' mode, use the stacked percent value instead of raw value.\n\n            var tooltipValue = stacked.style() == 'expand' ? point.display.y : chart.y()(point, pointIndex);\n            allData.push({\n              key: series.key,\n              value: tooltipValue,\n              color: color(series, series.seriesIndex),\n              point: point\n            });\n\n            if (showTotalInTooltip && stacked.style() != 'expand' && tooltipValue != null) {\n              valueSum += tooltipValue;\n              allNullValues = false;\n            }\n\n            ;\n          });\n          allData.reverse(); //Highlight the tooltip entry based on which stack the mouse is closest to.\n\n          if (allData.length > 2) {\n            var yValue = chart.yScale().invert(e.mouseY);\n            var yDistMax = Infinity,\n                indexToHighlight = null;\n            allData.forEach(function (series, i) {\n              //To handle situation where the stacked area chart is negative, we need to use absolute values\n              //when checking if the mouse Y value is within the stack area.\n              yValue = Math.abs(yValue);\n              var stackedY0 = Math.abs(series.point.display.y0);\n              var stackedY = Math.abs(series.point.display.y);\n\n              if (yValue >= stackedY0 && yValue <= stackedY + stackedY0) {\n                indexToHighlight = i;\n                return;\n              }\n            });\n            if (indexToHighlight != null) allData[indexToHighlight].highlight = true;\n          } //If we are not in 'expand' mode, add a 'Total' row to the tooltip.\n\n\n          if (showTotalInTooltip && stacked.style() != 'expand' && allData.length >= 2 && !allNullValues) {\n            allData.push({\n              key: totalLabel,\n              value: valueSum,\n              total: true\n            });\n          }\n\n          var xValue = chart.x()(singlePoint, pointIndex);\n          var valueFormatter = interactiveLayer.tooltip.valueFormatter(); // Keeps track of the tooltip valueFormatter if the chart changes to expanded view\n\n          if (stacked.style() === 'expand' || stacked.style() === 'stack_percent') {\n            if (!oldValueFormatter) {\n              oldValueFormatter = valueFormatter;\n            } //Forces the tooltip to use percentage in 'expand' mode.\n\n\n            valueFormatter = d3.format(\".1%\");\n          } else {\n            if (oldValueFormatter) {\n              valueFormatter = oldValueFormatter;\n              oldValueFormatter = null;\n            }\n          }\n\n          interactiveLayer.tooltip.valueFormatter(valueFormatter).data({\n            value: xValue,\n            series: allData\n          })();\n          interactiveLayer.renderGuideLine(pointXLocation);\n        });\n        interactiveLayer.dispatch.on(\"elementMouseout\", function (e) {\n          stacked.clearHighlights();\n        });\n        /* Update `main' graph on brush update. */\n\n        focus.dispatch.on(\"onBrush\", function (extent) {\n          onBrush(extent);\n        }); // Update chart from a state object passed to event handler\n\n        dispatch.on('changeState', function (e) {\n          if (typeof e.disabled !== 'undefined' && data.length === e.disabled.length) {\n            data.forEach(function (series, i) {\n              series.disabled = e.disabled[i];\n            });\n            state.disabled = e.disabled;\n          }\n\n          if (typeof e.style !== 'undefined') {\n            stacked.style(e.style);\n            style = e.style;\n          }\n\n          chart.update();\n        }); //============================================================\n        // Functions\n        //------------------------------------------------------------\n\n        function onBrush(extent) {\n          // Update Main (Focus)\n          var stackedWrap = g.select('.nv-focus .nv-stackedWrap').datum(data.filter(function (d) {\n            return !d.disabled;\n          }).map(function (d, i) {\n            return {\n              key: d.key,\n              area: d.area,\n              classed: d.classed,\n              values: d.values.filter(function (d, i) {\n                return stacked.x()(d, i) >= extent[0] && stacked.x()(d, i) <= extent[1];\n              }),\n              disableTooltip: d.disableTooltip\n            };\n          }));\n          stackedWrap.transition().duration(duration).call(stacked); // Update Main (Focus) Axes\n\n          updateXAxis();\n          updateYAxis();\n        }\n      });\n      renderWatch.renderEnd('stacked Area chart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    stacked.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.point['x'] = stacked.x()(evt.point);\n      evt.point['y'] = stacked.y()(evt.point);\n      tooltip.data(evt).hidden(false);\n    });\n    stacked.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.stacked = stacked;\n    chart.legend = legend;\n    chart.controls = controls;\n    chart.xAxis = xAxis;\n    chart.x2Axis = focus.xAxis;\n    chart.yAxis = yAxis;\n    chart.y2Axis = focus.yAxis;\n    chart.interactiveLayer = interactiveLayer;\n    chart.tooltip = tooltip;\n    chart.focus = focus;\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      showLegend: {\n        get: function get() {\n          return showLegend;\n        },\n        set: function set(_) {\n          showLegend = _;\n        }\n      },\n      legendPosition: {\n        get: function get() {\n          return legendPosition;\n        },\n        set: function set(_) {\n          legendPosition = _;\n        }\n      },\n      showXAxis: {\n        get: function get() {\n          return showXAxis;\n        },\n        set: function set(_) {\n          showXAxis = _;\n        }\n      },\n      showYAxis: {\n        get: function get() {\n          return showYAxis;\n        },\n        set: function set(_) {\n          showYAxis = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      showControls: {\n        get: function get() {\n          return showControls;\n        },\n        set: function set(_) {\n          showControls = _;\n        }\n      },\n      controlLabels: {\n        get: function get() {\n          return controlLabels;\n        },\n        set: function set(_) {\n          controlLabels = _;\n        }\n      },\n      controlOptions: {\n        get: function get() {\n          return controlOptions;\n        },\n        set: function set(_) {\n          controlOptions = _;\n        }\n      },\n      showTotalInTooltip: {\n        get: function get() {\n          return showTotalInTooltip;\n        },\n        set: function set(_) {\n          showTotalInTooltip = _;\n        }\n      },\n      totalLabel: {\n        get: function get() {\n          return totalLabel;\n        },\n        set: function set(_) {\n          totalLabel = _;\n        }\n      },\n      focusEnable: {\n        get: function get() {\n          return focusEnable;\n        },\n        set: function set(_) {\n          focusEnable = _;\n        }\n      },\n      focusHeight: {\n        get: function get() {\n          return focus.height();\n        },\n        set: function set(_) {\n          focus.height(_);\n        }\n      },\n      brushExtent: {\n        get: function get() {\n          return focus.brushExtent();\n        },\n        set: function set(_) {\n          focus.brushExtent(_);\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          if (_.top !== undefined) {\n            margin.top = _.top;\n            marginTop = _.top;\n          }\n\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n        }\n      },\n      focusMargin: {\n        get: function get() {\n          return focus.margin;\n        },\n        set: function set(_) {\n          focus.margin.top = _.top !== undefined ? _.top : focus.margin.top;\n          focus.margin.right = _.right !== undefined ? _.right : focus.margin.right;\n          focus.margin.bottom = _.bottom !== undefined ? _.bottom : focus.margin.bottom;\n          focus.margin.left = _.left !== undefined ? _.left : focus.margin.left;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          stacked.duration(duration);\n          xAxis.duration(duration);\n          yAxis.duration(duration);\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n          legend.color(color);\n          stacked.color(color);\n          focus.color(color);\n        }\n      },\n      x: {\n        get: function get() {\n          return stacked.x();\n        },\n        set: function set(_) {\n          stacked.x(_);\n          focus.x(_);\n        }\n      },\n      y: {\n        get: function get() {\n          return stacked.y();\n        },\n        set: function set(_) {\n          stacked.y(_);\n          focus.y(_);\n        }\n      },\n      rightAlignYAxis: {\n        get: function get() {\n          return rightAlignYAxis;\n        },\n        set: function set(_) {\n          rightAlignYAxis = _;\n          yAxis.orient(rightAlignYAxis ? 'right' : 'left');\n        }\n      },\n      useInteractiveGuideline: {\n        get: function get() {\n          return useInteractiveGuideline;\n        },\n        set: function set(_) {\n          useInteractiveGuideline = !!_;\n          chart.interactive(!_);\n          chart.useVoronoi(!_);\n          stacked.scatter.interactive(!_);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, stacked);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.stackedAreaWithFocusChart = function () {\n    return nv.models.stackedAreaChart().margin({\n      bottom: 30\n    }).focusEnable(true);\n  }; // based on http://bl.ocks.org/kerryrodden/477c1bfb081b783f80ad\n\n\n  nv.models.sunburst = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var margin = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    },\n        width = 600,\n        height = 600,\n        mode = \"count\",\n        modes = {\n      count: function count(d) {\n        return 1;\n      },\n      value: function value(d) {\n        return d.value || d.size;\n      },\n      size: function size(d) {\n        return d.value || d.size;\n      }\n    },\n        id = Math.floor(Math.random() * 10000) //Create semi-unique ID in case user doesn't select one\n    ,\n        container = null,\n        color = nv.utils.defaultColor(),\n        showLabels = false,\n        labelFormat = function labelFormat(d) {\n      if (mode === 'count') {\n        return d.name + ' #' + d.value;\n      } else {\n        return d.name + ' ' + (d.value || d.size);\n      }\n    },\n        labelThreshold = 0.02,\n        sort = function sort(d1, d2) {\n      return d1.name > d2.name;\n    },\n        key = function key(d, i) {\n      if (d.parent !== undefined) {\n        return d.name + '-' + d.parent.name + '-' + i;\n      } else {\n        return d.name;\n      }\n    },\n        groupColorByParent = true,\n        duration = 500,\n        dispatch = d3.dispatch('chartClick', 'elementClick', 'elementDblClick', 'elementMousemove', 'elementMouseover', 'elementMouseout', 'renderEnd'); //============================================================\n    // aux functions and setup\n    //------------------------------------------------------------\n\n\n    var x = d3.scale.linear().range([0, 2 * Math.PI]);\n    var y = d3.scale.sqrt();\n    var partition = d3.layout.partition().sort(sort);\n    var node, availableWidth, availableHeight, radius;\n    var prevPositions = {};\n    var arc = d3.svg.arc().startAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n    }).endAngle(function (d) {\n      return Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n    }).innerRadius(function (d) {\n      return Math.max(0, y(d.y));\n    }).outerRadius(function (d) {\n      return Math.max(0, y(d.y + d.dy));\n    });\n\n    function rotationToAvoidUpsideDown(d) {\n      var centerAngle = computeCenterAngle(d);\n\n      if (centerAngle > 90) {\n        return 180;\n      } else {\n        return 0;\n      }\n    }\n\n    function computeCenterAngle(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      var centerAngle = (startAngle + endAngle) / 2 * (180 / Math.PI) - 90;\n      return centerAngle;\n    }\n\n    function computeNodePercentage(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      return (endAngle - startAngle) / (2 * Math.PI);\n    }\n\n    function labelThresholdMatched(d) {\n      var startAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x)));\n      var endAngle = Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx)));\n      var size = endAngle - startAngle;\n      return size > labelThreshold;\n    } // When zooming: interpolate the scales.\n\n\n    function arcTweenZoom(e, i) {\n      var xd = d3.interpolate(x.domain(), [node.x, node.x + node.dx]),\n          yd = d3.interpolate(y.domain(), [node.y, 1]),\n          yr = d3.interpolate(y.range(), [node.y ? 20 : 0, radius]);\n\n      if (i === 0) {\n        return function () {\n          return arc(e);\n        };\n      } else {\n        return function (t) {\n          x.domain(xd(t));\n          y.domain(yd(t)).range(yr(t));\n          return arc(e);\n        };\n      }\n\n      ;\n    }\n\n    function arcTweenUpdate(d) {\n      var ipo = d3.interpolate({\n        x: d.x0,\n        dx: d.dx0,\n        y: d.y0,\n        dy: d.dy0\n      }, d);\n      return function (t) {\n        var b = ipo(t);\n        d.x0 = b.x;\n        d.dx0 = b.dx;\n        d.y0 = b.y;\n        d.dy0 = b.dy;\n        return arc(b);\n      };\n    }\n\n    function updatePrevPosition(node) {\n      var k = key(node);\n      if (!prevPositions[k]) prevPositions[k] = {};\n      var pP = prevPositions[k];\n      pP.dx = node.dx;\n      pP.x = node.x;\n      pP.dy = node.dy;\n      pP.y = node.y;\n    }\n\n    function storeRetrievePrevPositions(nodes) {\n      nodes.forEach(function (n) {\n        var k = key(n);\n        var pP = prevPositions[k]; //console.log(k,n,pP);\n\n        if (pP) {\n          n.dx0 = pP.dx;\n          n.x0 = pP.x;\n          n.dy0 = pP.dy;\n          n.y0 = pP.y;\n        } else {\n          n.dx0 = n.dx;\n          n.x0 = n.x;\n          n.dy0 = n.dy;\n          n.y0 = n.y;\n        }\n\n        updatePrevPosition(n);\n      });\n    }\n\n    function zoomClick(d) {\n      var labels = container.selectAll('text');\n      var path = container.selectAll('path'); // fade out all text elements\n\n      labels.transition().attr(\"opacity\", 0); // to allow reference to the new center node\n\n      node = d;\n      path.transition().duration(duration).attrTween(\"d\", arcTweenZoom).each('end', function (e) {\n        // partially taken from here: http://bl.ocks.org/metmajer/5480307\n        // check if the animated element's data e lies within the visible angle span given in d\n        if (e.x >= d.x && e.x < d.x + d.dx) {\n          if (e.depth >= d.depth) {\n            // get a selection of the associated text element\n            var parentNode = d3.select(this.parentNode);\n            var arcText = parentNode.select('text'); // fade in the text element and recalculate positions\n\n            arcText.transition().duration(duration).text(function (e) {\n              return labelFormat(e);\n            }).attr(\"opacity\", function (d) {\n              if (labelThresholdMatched(d)) {\n                return 1;\n              } else {\n                return 0;\n              }\n            }).attr(\"transform\", function () {\n              var width = this.getBBox().width;\n              if (e.depth === 0) return \"translate(\" + width / 2 * -1 + \",0)\";else if (e.depth === d.depth) {\n                return \"translate(\" + (y(e.y) + 5) + \",0)\";\n              } else {\n                var centerAngle = computeCenterAngle(e);\n                var rotation = rotationToAvoidUpsideDown(e);\n\n                if (rotation === 0) {\n                  return 'rotate(' + centerAngle + ')translate(' + (y(e.y) + 5) + ',0)';\n                } else {\n                  return 'rotate(' + centerAngle + ')translate(' + (y(e.y) + width + 5) + ',0)rotate(' + rotation + ')';\n                }\n              }\n            });\n          }\n        }\n      });\n    } //============================================================\n    // chart function\n    //------------------------------------------------------------\n\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n\n    function chart(selection) {\n      renderWatch.reset();\n      selection.each(function (data) {\n        container = d3.select(this);\n        availableWidth = nv.utils.availableWidth(width, container, margin);\n        availableHeight = nv.utils.availableHeight(height, container, margin);\n        radius = Math.min(availableWidth, availableHeight) / 2;\n        y.range([0, radius]); // Setup containers and skeleton of chart\n\n        var wrap = container.select('g.nvd3.nv-wrap.nv-sunburst');\n\n        if (!wrap[0][0]) {\n          wrap = container.append('g').attr('class', 'nvd3 nv-wrap nv-sunburst nv-chart-' + id).attr('transform', 'translate(' + (availableWidth / 2 + margin.left + margin.right) + ',' + (availableHeight / 2 + margin.top + margin.bottom) + ')');\n        } else {\n          wrap.attr('transform', 'translate(' + (availableWidth / 2 + margin.left + margin.right) + ',' + (availableHeight / 2 + margin.top + margin.bottom) + ')');\n        }\n\n        container.on('click', function (d, i) {\n          dispatch.chartClick({\n            data: d,\n            index: i,\n            pos: d3.event,\n            id: id\n          });\n        });\n        partition.value(modes[mode] || modes[\"count\"]); //reverse the drawing order so that the labels of inner\n        //arcs are drawn on top of the outer arcs.\n\n        var nodes = partition.nodes(data[0]).reverse();\n        storeRetrievePrevPositions(nodes);\n        var cG = wrap.selectAll('.arc-container').data(nodes, key); //handle new datapoints\n\n        var cGE = cG.enter().append(\"g\").attr(\"class\", 'arc-container');\n        cGE.append(\"path\").attr(\"d\", arc).style(\"fill\", function (d) {\n          if (d.color) {\n            return d.color;\n          } else if (groupColorByParent) {\n            return color((d.children ? d : d.parent).name);\n          } else {\n            return color(d.name);\n          }\n        }).style(\"stroke\", \"#FFF\").on(\"click\", function (d, i) {\n          zoomClick(d);\n          dispatch.elementClick({\n            data: d,\n            index: i\n          });\n        }).on('mouseover', function (d, i) {\n          d3.select(this).classed('hover', true).style('opacity', 0.8);\n          dispatch.elementMouseover({\n            data: d,\n            color: d3.select(this).style(\"fill\"),\n            percent: computeNodePercentage(d)\n          });\n        }).on('mouseout', function (d, i) {\n          d3.select(this).classed('hover', false).style('opacity', 1);\n          dispatch.elementMouseout({\n            data: d\n          });\n        }).on('mousemove', function (d, i) {\n          dispatch.elementMousemove({\n            data: d\n          });\n        }); ///Iterating via each and selecting based on the this\n        ///makes it work ... a cG.selectAll('path') doesn't.\n        ///Without iteration the data (in the element) didn't update.\n\n        cG.each(function (d) {\n          d3.select(this).select('path').transition().duration(duration).attrTween('d', arcTweenUpdate);\n        });\n\n        if (showLabels) {\n          //remove labels first and add them back\n          cG.selectAll('text').remove(); //this way labels are on top of newly added arcs\n\n          cG.append('text').text(function (e) {\n            return labelFormat(e);\n          }).transition().duration(duration).attr(\"opacity\", function (d) {\n            if (labelThresholdMatched(d)) {\n              return 1;\n            } else {\n              return 0;\n            }\n          }).attr(\"transform\", function (d) {\n            var width = this.getBBox().width;\n\n            if (d.depth === 0) {\n              return \"rotate(0)translate(\" + width / 2 * -1 + \",0)\";\n            } else {\n              var centerAngle = computeCenterAngle(d);\n              var rotation = rotationToAvoidUpsideDown(d);\n\n              if (rotation === 0) {\n                return 'rotate(' + centerAngle + ')translate(' + (y(d.y) + 5) + ',0)';\n              } else {\n                return 'rotate(' + centerAngle + ')translate(' + (y(d.y) + width + 5) + ',0)rotate(' + rotation + ')';\n              }\n            }\n          });\n        } //zoom out to the center when the data is updated.\n\n\n        zoomClick(nodes[nodes.length - 1]); //remove unmatched elements ...\n\n        cG.exit().transition().duration(duration).attr('opacity', 0).each('end', function (d) {\n          var k = key(d);\n          prevPositions[k] = undefined;\n        }).remove();\n      });\n      renderWatch.renderEnd('sunburst immediate');\n      return chart;\n    } //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n\n\n    chart.dispatch = dispatch;\n    chart.options = nv.utils.optionsFunc.bind(chart);\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      width: {\n        get: function get() {\n          return width;\n        },\n        set: function set(_) {\n          width = _;\n        }\n      },\n      height: {\n        get: function get() {\n          return height;\n        },\n        set: function set(_) {\n          height = _;\n        }\n      },\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(_) {\n          mode = _;\n        }\n      },\n      id: {\n        get: function get() {\n          return id;\n        },\n        set: function set(_) {\n          id = _;\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n        }\n      },\n      groupColorByParent: {\n        get: function get() {\n          return groupColorByParent;\n        },\n        set: function set(_) {\n          groupColorByParent = !!_;\n        }\n      },\n      showLabels: {\n        get: function get() {\n          return showLabels;\n        },\n        set: function set(_) {\n          showLabels = !!_;\n        }\n      },\n      labelFormat: {\n        get: function get() {\n          return labelFormat;\n        },\n        set: function set(_) {\n          labelFormat = _;\n        }\n      },\n      labelThreshold: {\n        get: function get() {\n          return labelThreshold;\n        },\n        set: function set(_) {\n          labelThreshold = _;\n        }\n      },\n      sort: {\n        get: function get() {\n          return sort;\n        },\n        set: function set(_) {\n          sort = _;\n        }\n      },\n      key: {\n        get: function get() {\n          return key;\n        },\n        set: function set(_) {\n          key = _;\n        }\n      },\n      // options that require extra logic in the setter\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top != undefined ? _.top : margin.top;\n          margin.right = _.right != undefined ? _.right : margin.right;\n          margin.bottom = _.bottom != undefined ? _.bottom : margin.bottom;\n          margin.left = _.left != undefined ? _.left : margin.left;\n        }\n      },\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = nv.utils.getColor(_);\n        }\n      }\n    });\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.models.sunburstChart = function () {\n    \"use strict\"; //============================================================\n    // Public Variables with Default Settings\n    //------------------------------------------------------------\n\n    var sunburst = nv.models.sunburst();\n    var tooltip = nv.models.tooltip();\n    var margin = {\n      top: 30,\n      right: 20,\n      bottom: 20,\n      left: 20\n    },\n        width = null,\n        height = null,\n        color = nv.utils.defaultColor(),\n        showTooltipPercent = false,\n        id = Math.round(Math.random() * 100000),\n        defaultState = null,\n        noData = null,\n        duration = 250,\n        dispatch = d3.dispatch('stateChange', 'changeState', 'renderEnd'); //============================================================\n    // Private Variables\n    //------------------------------------------------------------\n\n    var renderWatch = nv.utils.renderWatch(dispatch);\n    tooltip.duration(0).headerEnabled(false).valueFormatter(function (d) {\n      return d;\n    }); //============================================================\n    // Chart function\n    //------------------------------------------------------------\n\n    function chart(selection) {\n      renderWatch.reset();\n      renderWatch.models(sunburst);\n      selection.each(function (data) {\n        var container = d3.select(this);\n        nv.utils.initSVG(container);\n        var availableWidth = nv.utils.availableWidth(width, container, margin);\n        var availableHeight = nv.utils.availableHeight(height, container, margin);\n\n        chart.update = function () {\n          if (duration === 0) {\n            container.call(chart);\n          } else {\n            container.transition().duration(duration).call(chart);\n          }\n        };\n\n        chart.container = container; // Display No Data message if there's nothing to show.\n\n        if (!data || !data.length) {\n          nv.utils.noData(chart, container);\n          return chart;\n        } else {\n          container.selectAll('.nv-noData').remove();\n        }\n\n        sunburst.width(availableWidth).height(availableHeight).margin(margin);\n        container.call(sunburst);\n      });\n      renderWatch.renderEnd('sunburstChart immediate');\n      return chart;\n    } //============================================================\n    // Event Handling/Dispatching (out of chart's scope)\n    //------------------------------------------------------------\n\n\n    sunburst.dispatch.on('elementMouseover.tooltip', function (evt) {\n      evt.series = {\n        key: evt.data.name,\n        value: evt.data.value || evt.data.size,\n        color: evt.color,\n        percent: evt.percent\n      };\n\n      if (!showTooltipPercent) {\n        delete evt.percent;\n        delete evt.series.percent;\n      }\n\n      tooltip.data(evt).hidden(false);\n    });\n    sunburst.dispatch.on('elementMouseout.tooltip', function (evt) {\n      tooltip.hidden(true);\n    });\n    sunburst.dispatch.on('elementMousemove.tooltip', function (evt) {\n      tooltip();\n    }); //============================================================\n    // Expose Public Variables\n    //------------------------------------------------------------\n    // expose chart's sub-components\n\n    chart.dispatch = dispatch;\n    chart.sunburst = sunburst;\n    chart.tooltip = tooltip;\n    chart.options = nv.utils.optionsFunc.bind(chart); // use Object get/set functionality to map between vars and chart functions\n\n    chart._options = Object.create({}, {\n      // simple options, just get/set the necessary values\n      noData: {\n        get: function get() {\n          return noData;\n        },\n        set: function set(_) {\n          noData = _;\n        }\n      },\n      defaultState: {\n        get: function get() {\n          return defaultState;\n        },\n        set: function set(_) {\n          defaultState = _;\n        }\n      },\n      showTooltipPercent: {\n        get: function get() {\n          return showTooltipPercent;\n        },\n        set: function set(_) {\n          showTooltipPercent = _;\n        }\n      },\n      // options that require extra logic in the setter\n      color: {\n        get: function get() {\n          return color;\n        },\n        set: function set(_) {\n          color = _;\n          sunburst.color(color);\n        }\n      },\n      duration: {\n        get: function get() {\n          return duration;\n        },\n        set: function set(_) {\n          duration = _;\n          renderWatch.reset(duration);\n          sunburst.duration(duration);\n        }\n      },\n      margin: {\n        get: function get() {\n          return margin;\n        },\n        set: function set(_) {\n          margin.top = _.top !== undefined ? _.top : margin.top;\n          margin.right = _.right !== undefined ? _.right : margin.right;\n          margin.bottom = _.bottom !== undefined ? _.bottom : margin.bottom;\n          margin.left = _.left !== undefined ? _.left : margin.left;\n          sunburst.margin(margin);\n        }\n      }\n    });\n    nv.utils.inheritOptions(chart, sunburst);\n    nv.utils.initOptions(chart);\n    return chart;\n  };\n\n  nv.version = \"1.8.6\";\n})();","import React from 'react';\nexport default React.createContext(null);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return React.forwardRef(function (p, ref) {\n    return React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar CardImg =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CardImg, _React$Component);\n\n  function CardImg() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = CardImg.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        variant = _this$props.variant,\n        Component = _this$props.as,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n    var baseClass = variant ? bsPrefix + \"-\" + variant : bsPrefix;\n    return React.createElement(Component, _extends({\n      className: classNames(baseClass, className)\n    }, props));\n  };\n\n  return CardImg;\n}(React.Component);\n\nCardImg.defaultProps = {\n  as: 'img',\n  variant: null\n};\nexport default createBootstrapComponent(CardImg, 'card-img');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\nimport createWithBsPrefix from './utils/createWithBsPrefix';\nimport divWithClassName from './utils/divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar CardBody = createWithBsPrefix('card-body');\n\nvar Card =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Card, _React$Component);\n\n  function Card() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {};\n    return _this;\n  }\n\n  Card.getDerivedStateFromProps = function getDerivedStateFromProps(_ref) {\n    var bsPrefix = _ref.bsPrefix;\n    return {\n      cardContext: {\n        cardHeaderBsPrefix: bsPrefix + \"-header\"\n      }\n    };\n  };\n\n  var _proto = Card.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        Component = _this$props.as,\n        bg = _this$props.bg,\n        text = _this$props.text,\n        border = _this$props.border,\n        body = _this$props.body,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"as\", \"bg\", \"text\", \"border\", \"body\", \"children\"]);\n\n    var classes = classNames(className, bsPrefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border);\n    return React.createElement(CardContext.Provider, {\n      value: this.state.cardContext\n    }, React.createElement(Component, _extends({\n      className: classes\n    }, props), body ? React.createElement(CardBody, null, children) : children));\n  };\n\n  return Card;\n}(React.Component);\n\nCard.defaultProps = {\n  as: 'div',\n  body: false\n};\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar DecoratedCard = createBootstrapComponent(Card, 'card');\nDecoratedCard.Img = CardImg;\nDecoratedCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nDecoratedCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nDecoratedCard.Body = CardBody;\nDecoratedCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nDecoratedCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nDecoratedCard.Header = createWithBsPrefix('card-header');\nDecoratedCard.Footer = createWithBsPrefix('card-footer');\nDecoratedCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default DecoratedCard;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\n\nvar Col =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Col, _React$Component);\n\n  function Col() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Col.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        className = _this$props.className,\n        Component = _this$props.as,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"className\", \"as\"]);\n\n    var spans = [];\n    var classes = [];\n    DEVICE_SIZES.forEach(function (brkPoint) {\n      var propValue = props[brkPoint];\n      delete props[brkPoint];\n      var span, offset, order;\n\n      if (propValue != null && typeof propValue === 'object') {\n        var _propValue$span = propValue.span;\n        span = _propValue$span === void 0 ? true : _propValue$span;\n        offset = propValue.offset;\n        order = propValue.order;\n      } else {\n        span = propValue;\n      }\n\n      var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n      if (span != null) spans.push(span === true ? \"\" + bsPrefix + infix : \"\" + bsPrefix + infix + \"-\" + span);\n      if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n      if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n    });\n\n    if (!spans.length) {\n      spans.push(bsPrefix); // plain 'col'\n    }\n\n    return React.createElement(Component, _extends({}, props, {\n      className: classNames.apply(void 0, [className].concat(spans, classes))\n    }));\n  };\n\n  return Col;\n}(React.Component);\n\nCol.defaultProps = {\n  as: 'div'\n};\nexport default createBootstrapComponent(Col, 'col');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar Row =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Row, _React$Component);\n\n  function Row() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Row.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        noGutters = _this$props.noGutters,\n        Component = _this$props.as,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"noGutters\", \"as\", \"className\"]);\n\n    return React.createElement(Component, _extends({}, props, {\n      className: classNames(className, bsPrefix, noGutters && 'no-gutters')\n    }));\n  };\n\n  return Row;\n}(React.Component);\n\nRow.defaultProps = {\n  as: 'div',\n  noGutters: false\n};\nexport default createBootstrapComponent(Row, 'row');","!function (t, e) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = e(require(\"react\"), require(\"d3\"), require(\"nvd3\")) : \"function\" == typeof define && define.amd ? define([\"react\", \"d3\", \"nvd3\"], e) : \"object\" == typeof exports ? exports.NVD3Chart = e(require(\"react\"), require(\"d3\"), require(\"nvd3\")) : t.NVD3Chart = e(t.React, t.d3, t.nv);\n}(this, function (t, e, n) {\n  return function (t) {\n    function e(r) {\n      if (n[r]) return n[r].exports;\n      var o = n[r] = {\n        exports: {},\n        id: r,\n        loaded: !1\n      };\n      return t[r].call(o.exports, o, o.exports, e), o.loaded = !0, o.exports;\n    }\n\n    var n = {};\n    return e.m = t, e.c = n, e.p = \"\", e(0);\n  }([function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n\n    var o = n(1),\n        i = r(o),\n        u = n(2),\n        c = r(u),\n        s = n(17),\n        a = r(s),\n        f = n(21),\n        p = r(f),\n        l = n(22),\n        d = r(l),\n        h = n(25),\n        y = r(h),\n        v = n(48),\n        b = r(v),\n        g = n(55),\n        m = r(g),\n        _ = n(56),\n        x = r(_),\n        O = n(57),\n        j = r(O),\n        w = n(58),\n        S = [\"x\", \"y\", \"type\", \"datum\", \"configure\"],\n        P = [\"width\", \"height\"],\n        E = \"margin\",\n        M = \"containerStyle\",\n        k = \"renderStart\",\n        C = \"renderEnd\",\n        D = \"ready\",\n        F = function (t) {\n      function e() {\n        return (0, p[\"default\"])(this, e), (0, y[\"default\"])(this, (0, a[\"default\"])(e).apply(this, arguments));\n      }\n\n      return (0, b[\"default\"])(e, t), (0, d[\"default\"])(e, [{\n        key: \"componentDidMount\",\n        value: function value() {\n          var t = this;\n          j[\"default\"].addGraph(this.renderChart.bind(this), function (e) {\n            (0, w.isCallable)(t.props.ready) && t.props.ready(e, D);\n          });\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function value() {\n          this.renderChart();\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function value() {\n          this.resizeHandler && this.resizeHandler.clear();\n        }\n      }, {\n        key: \"renderChart\",\n        value: function value() {\n          var t = void 0;\n\n          switch (this.chart = this.chart && !this.rendering ? this.chart : j[\"default\"].models[this.props.type](), (0, w.isCallable)(this.props.renderStart) && this.props.renderStart(this.chart, k), this.parsedProps = (0, w.bindFunctions)(this.props, this.props.context), this.chart.x && this.chart.x((0, w.getValueFunction)(this.parsedProps.x, \"x\")), this.chart.y && this.chart.y((0, w.getValueFunction)(this.parsedProps.y, \"y\")), this.props.margin && this.chart.margin(this.options(E, w.pick).margin || (0, w.propsByPrefix)(\"margin\", this.props) || {}), this.configureComponents(this.chart, this.options(S.concat(M), w.without)), !this.props.configure || this.props.configure(this.chart), this.selection = x[\"default\"].select(this.refs.svg).datum(this.props.datum).call(this.chart), this.resizeHandler || (this.resizeHandler = j[\"default\"].utils.windowResize(this.chart.update)), this.props.type) {\n            case \"pieChart\":\n              t = this.chart.pie.dispatch;\n              break;\n\n            case \"lineChart\":\n              t = this.chart.lines.dispatch;\n              break;\n\n            default:\n              t = this.chart.dispatch;\n          }\n\n          return t.renderEnd && t.on(\"renderEnd\", this.renderEnd.bind(this)), this.rendering = !0, this.chart;\n        }\n      }, {\n        key: \"renderEnd\",\n        value: function value(t) {\n          (0, w.isCallable)(this.props.renderEnd) && this.props.renderEnd(this.chart, C), this.rendering = !1;\n        }\n      }, {\n        key: \"configureComponents\",\n        value: function value(t, e) {\n          for (var n in e) {\n            var r = e[n];\n            t && ((0, w.isPlainObject)(r) ? this.configureComponents(t[n], r) : \"function\" == typeof t[n] && t[n](r));\n          }\n        }\n      }, {\n        key: \"options\",\n        value: function value(t, e) {\n          var n = this.parsedProps.options || this.parsedProps || this.props.chartOptions;\n          return (e = e || w.pick)(n, t);\n        }\n      }, {\n        key: \"render\",\n        value: function value() {\n          var t = (0, w.pick)(this.props, P),\n              e = (0, c[\"default\"])({}, t, this.props.containerStyle);\n          return m[\"default\"].createElement(\"div\", {\n            ref: \"root\",\n            className: \"nv-chart\",\n            style: e\n          }, m[\"default\"].createElement(\"svg\", (0, i[\"default\"])({\n            ref: \"svg\"\n          }, t)));\n        }\n      }]), e;\n    }(m[\"default\"].Component);\n\n    e[\"default\"] = F, t.exports = F;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(2)[\"default\"];\n    e[\"default\"] = r || function (t) {\n      for (var e = 1; e < arguments.length; e++) {\n        var n = arguments[e];\n\n        for (var r in n) {\n          Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]);\n        }\n      }\n\n      return t;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(3),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(4), t.exports = n(7).Object.assign;\n  }, function (t, e, n) {\n    var r = n(5);\n    r(r.S + r.F, \"Object\", {\n      assign: n(10)\n    });\n  }, function (t, e, n) {\n    var r = n(6),\n        o = n(7),\n        i = n(8),\n        u = \"prototype\",\n        c = function c(t, e, n) {\n      var s,\n          a,\n          f,\n          p = t & c.F,\n          l = t & c.G,\n          d = t & c.S,\n          h = t & c.P,\n          y = t & c.B,\n          v = t & c.W,\n          b = l ? o : o[e] || (o[e] = {}),\n          g = l ? r : d ? r[e] : (r[e] || {})[u];\n      l && (n = e);\n\n      for (s in n) {\n        a = !p && g && s in g, a && s in b || (f = a ? g[s] : n[s], b[s] = l && \"function\" != typeof g[s] ? n[s] : y && a ? i(f, r) : v && g[s] == f ? function (t) {\n          var e = function e(_e) {\n            return this instanceof t ? new t(_e) : t(_e);\n          };\n\n          return e[u] = t[u], e;\n        }(f) : h && \"function\" == typeof f ? i(Function.call, f) : f, h && ((b[u] || (b[u] = {}))[s] = f));\n      }\n    };\n\n    c.F = 1, c.G = 2, c.S = 4, c.P = 8, c.B = 16, c.W = 32, t.exports = c;\n  }, function (t, e) {\n    var n = t.exports = \"undefined\" != typeof window && window.Math == Math ? window : \"undefined\" != typeof self && self.Math == Math ? self : Function(\"return this\")();\n    \"number\" == typeof __g && (__g = n);\n  }, function (t, e) {\n    var n = t.exports = {\n      version: \"1.2.6\"\n    };\n    \"number\" == typeof __e && (__e = n);\n  }, function (t, e, n) {\n    var r = n(9);\n\n    t.exports = function (t, e, n) {\n      if (r(t), void 0 === e) return t;\n\n      switch (n) {\n        case 1:\n          return function (n) {\n            return t.call(e, n);\n          };\n\n        case 2:\n          return function (n, r) {\n            return t.call(e, n, r);\n          };\n\n        case 3:\n          return function (n, r, o) {\n            return t.call(e, n, r, o);\n          };\n      }\n\n      return function () {\n        return t.apply(e, arguments);\n      };\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (\"function\" != typeof t) throw TypeError(t + \" is not a function!\");\n      return t;\n    };\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(12),\n        i = n(14);\n    t.exports = n(16)(function () {\n      var t = Object.assign,\n          e = {},\n          n = {},\n          r = Symbol(),\n          o = \"abcdefghijklmnopqrst\";\n      return e[r] = 7, o.split(\"\").forEach(function (t) {\n        n[t] = t;\n      }), 7 != t({}, e)[r] || Object.keys(t({}, n)).join(\"\") != o;\n    }) ? function (t, e) {\n      for (var n = o(t), u = arguments, c = u.length, s = 1, a = r.getKeys, f = r.getSymbols, p = r.isEnum; c > s;) {\n        for (var l, d = i(u[s++]), h = f ? a(d).concat(f(d)) : a(d), y = h.length, v = 0; y > v;) {\n          p.call(d, l = h[v++]) && (n[l] = d[l]);\n        }\n      }\n\n      return n;\n    } : Object.assign;\n  }, function (t, e) {\n    var n = Object;\n    t.exports = {\n      create: n.create,\n      getProto: n.getPrototypeOf,\n      isEnum: {}.propertyIsEnumerable,\n      getDesc: n.getOwnPropertyDescriptor,\n      setDesc: n.defineProperty,\n      setDescs: n.defineProperties,\n      getKeys: n.keys,\n      getNames: n.getOwnPropertyNames,\n      getSymbols: n.getOwnPropertySymbols,\n      each: [].forEach\n    };\n  }, function (t, e, n) {\n    var r = n(13);\n\n    t.exports = function (t) {\n      return Object(r(t));\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      if (void 0 == t) throw TypeError(\"Can't call method on  \" + t);\n      return t;\n    };\n  }, function (t, e, n) {\n    var r = n(15);\n    t.exports = Object(\"z\").propertyIsEnumerable(0) ? Object : function (t) {\n      return \"String\" == r(t) ? t.split(\"\") : Object(t);\n    };\n  }, function (t, e) {\n    var n = {}.toString;\n\n    t.exports = function (t) {\n      return n.call(t).slice(8, -1);\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      try {\n        return !!t();\n      } catch (e) {\n        return !0;\n      }\n    };\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(18),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(19), t.exports = n(7).Object.getPrototypeOf;\n  }, function (t, e, n) {\n    var r = n(12);\n    n(20)(\"getPrototypeOf\", function (t) {\n      return function (e) {\n        return t(r(e));\n      };\n    });\n  }, function (t, e, n) {\n    var r = n(5),\n        o = n(7),\n        i = n(16);\n\n    t.exports = function (t, e) {\n      var n = (o.Object || {})[t] || Object[t],\n          u = {};\n      u[t] = e(n), r(r.S + r.F * i(function () {\n        n(1);\n      }), \"Object\", u);\n    };\n  }, function (t, e) {\n    \"use strict\";\n\n    e[\"default\"] = function (t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    var o = n(23),\n        i = r(o);\n    e[\"default\"] = function () {\n      function t(t, e) {\n        for (var n = 0; n < e.length; n++) {\n          var r = e[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), (0, i[\"default\"])(t, r.key, r);\n        }\n      }\n\n      return function (e, n, r) {\n        return n && t(e.prototype, n), r && t(e, r), e;\n      };\n    }(), e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(24),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t, e, n) {\n      return r.setDesc(t, e, n);\n    };\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    var o = n(26),\n        i = r(o);\n    e[\"default\"] = function (t, e) {\n      if (!t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return !e || \"object\" !== (\"undefined\" == typeof e ? \"undefined\" : (0, i[\"default\"])(e)) && \"function\" != typeof e ? t : e;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(27)[\"default\"];\n    e[\"default\"] = function (t) {\n      return t && t.constructor === r ? \"symbol\" : typeof t;\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(28),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(29), n(47), t.exports = n(7).Symbol;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(11),\n        o = n(6),\n        i = n(30),\n        u = n(31),\n        c = n(5),\n        s = n(32),\n        a = n(16),\n        f = n(35),\n        p = n(36),\n        l = n(38),\n        d = n(37),\n        h = n(39),\n        y = n(41),\n        v = n(42),\n        b = n(43),\n        g = n(44),\n        m = n(40),\n        _ = n(34),\n        x = r.getDesc,\n        O = r.setDesc,\n        j = r.create,\n        w = y.get,\n        S = o.Symbol,\n        P = o.JSON,\n        E = P && P.stringify,\n        M = !1,\n        k = d(\"_hidden\"),\n        C = r.isEnum,\n        D = f(\"symbol-registry\"),\n        F = f(\"symbols\"),\n        N = \"function\" == typeof S,\n        T = Object.prototype,\n        q = u && a(function () {\n      return 7 != j(O({}, \"a\", {\n        get: function get() {\n          return O(this, \"a\", {\n            value: 7\n          }).a;\n        }\n      })).a;\n    }) ? function (t, e, n) {\n      var r = x(T, e);\n      r && delete T[e], O(t, e, n), r && t !== T && O(T, e, r);\n    } : O,\n        z = function z(t) {\n      var e = F[t] = j(S.prototype);\n      return e._k = t, u && M && q(T, t, {\n        configurable: !0,\n        set: function set(e) {\n          i(this, k) && i(this[k], t) && (this[k][t] = !1), q(this, t, _(1, e));\n        }\n      }), e;\n    },\n        A = function A(t) {\n      return \"symbol\" == typeof t;\n    },\n        V = function V(t, e, n) {\n      return n && i(F, e) ? (n.enumerable ? (i(t, k) && t[k][e] && (t[k][e] = !1), n = j(n, {\n        enumerable: _(0, !1)\n      })) : (i(t, k) || O(t, k, _(1, {})), t[k][e] = !0), q(t, e, n)) : O(t, e, n);\n    },\n        W = function W(t, e) {\n      g(t);\n\n      for (var n, r = v(e = m(e)), o = 0, i = r.length; i > o;) {\n        V(t, n = r[o++], e[n]);\n      }\n\n      return t;\n    },\n        B = function B(t, e) {\n      return void 0 === e ? j(t) : W(j(t), e);\n    },\n        G = function G(t) {\n      var e = C.call(this, t);\n      return e || !i(this, t) || !i(F, t) || i(this, k) && this[k][t] ? e : !0;\n    },\n        H = function H(t, e) {\n      var n = x(t = m(t), e);\n      return !n || !i(F, e) || i(t, k) && t[k][e] || (n.enumerable = !0), n;\n    },\n        I = function I(t) {\n      for (var e, n = w(m(t)), r = [], o = 0; n.length > o;) {\n        i(F, e = n[o++]) || e == k || r.push(e);\n      }\n\n      return r;\n    },\n        J = function J(t) {\n      for (var e, n = w(m(t)), r = [], o = 0; n.length > o;) {\n        i(F, e = n[o++]) && r.push(F[e]);\n      }\n\n      return r;\n    },\n        K = function K(t) {\n      if (void 0 !== t && !A(t)) {\n        for (var e, n, r = [t], o = 1, i = arguments; i.length > o;) {\n          r.push(i[o++]);\n        }\n\n        return e = r[1], \"function\" == typeof e && (n = e), (n || !b(e)) && (e = function e(t, _e2) {\n          return n && (_e2 = n.call(this, t, _e2)), A(_e2) ? void 0 : _e2;\n        }), r[1] = e, E.apply(P, r);\n      }\n    },\n        R = a(function () {\n      var t = S();\n      return \"[null]\" != E([t]) || \"{}\" != E({\n        a: t\n      }) || \"{}\" != E(Object(t));\n    });\n\n    N || (S = function S() {\n      if (A(this)) throw TypeError(\"Symbol is not a constructor\");\n      return z(l(arguments.length > 0 ? arguments[0] : void 0));\n    }, s(S.prototype, \"toString\", function () {\n      return this._k;\n    }), A = function A(t) {\n      return t instanceof S;\n    }, r.create = B, r.isEnum = G, r.getDesc = H, r.setDesc = V, r.setDescs = W, r.getNames = y.get = I, r.getSymbols = J, u && !n(46) && s(T, \"propertyIsEnumerable\", G, !0));\n    var U = {\n      \"for\": function _for(t) {\n        return i(D, t += \"\") ? D[t] : D[t] = S(t);\n      },\n      keyFor: function keyFor(t) {\n        return h(D, t);\n      },\n      useSetter: function useSetter() {\n        M = !0;\n      },\n      useSimple: function useSimple() {\n        M = !1;\n      }\n    };\n    r.each.call(\"hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables\".split(\",\"), function (t) {\n      var e = d(t);\n      U[t] = N ? e : z(e);\n    }), M = !0, c(c.G + c.W, {\n      Symbol: S\n    }), c(c.S, \"Symbol\", U), c(c.S + c.F * !N, \"Object\", {\n      create: B,\n      defineProperty: V,\n      defineProperties: W,\n      getOwnPropertyDescriptor: H,\n      getOwnPropertyNames: I,\n      getOwnPropertySymbols: J\n    }), P && c(c.S + c.F * (!N || R), \"JSON\", {\n      stringify: K\n    }), p(S, \"Symbol\"), p(Math, \"Math\", !0), p(o.JSON, \"JSON\", !0);\n  }, function (t, e) {\n    var n = {}.hasOwnProperty;\n\n    t.exports = function (t, e) {\n      return n.call(t, e);\n    };\n  }, function (t, e, n) {\n    t.exports = !n(16)(function () {\n      return 7 != Object.defineProperty({}, \"a\", {\n        get: function get() {\n          return 7;\n        }\n      }).a;\n    });\n  }, function (t, e, n) {\n    t.exports = n(33);\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(34);\n    t.exports = n(31) ? function (t, e, n) {\n      return r.setDesc(t, e, o(1, n));\n    } : function (t, e, n) {\n      return t[e] = n, t;\n    };\n  }, function (t, e) {\n    t.exports = function (t, e) {\n      return {\n        enumerable: !(1 & t),\n        configurable: !(2 & t),\n        writable: !(4 & t),\n        value: e\n      };\n    };\n  }, function (t, e, n) {\n    var r = n(6),\n        o = \"__core-js_shared__\",\n        i = r[o] || (r[o] = {});\n\n    t.exports = function (t) {\n      return i[t] || (i[t] = {});\n    };\n  }, function (t, e, n) {\n    var r = n(11).setDesc,\n        o = n(30),\n        i = n(37)(\"toStringTag\");\n\n    t.exports = function (t, e, n) {\n      t && !o(t = n ? t : t.prototype, i) && r(t, i, {\n        configurable: !0,\n        value: e\n      });\n    };\n  }, function (t, e, n) {\n    var r = n(35)(\"wks\"),\n        o = n(38),\n        i = n(6).Symbol;\n\n    t.exports = function (t) {\n      return r[t] || (r[t] = i && i[t] || (i || o)(\"Symbol.\" + t));\n    };\n  }, function (t, e) {\n    var n = 0,\n        r = Math.random();\n\n    t.exports = function (t) {\n      return \"Symbol(\".concat(void 0 === t ? \"\" : t, \")_\", (++n + r).toString(36));\n    };\n  }, function (t, e, n) {\n    var r = n(11),\n        o = n(40);\n\n    t.exports = function (t, e) {\n      for (var n, i = o(t), u = r.getKeys(i), c = u.length, s = 0; c > s;) {\n        if (i[n = u[s++]] === e) return n;\n      }\n    };\n  }, function (t, e, n) {\n    var r = n(14),\n        o = n(13);\n\n    t.exports = function (t) {\n      return r(o(t));\n    };\n  }, function (t, e, n) {\n    var r = n(40),\n        o = n(11).getNames,\n        i = {}.toString,\n        u = \"object\" == typeof window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [],\n        c = function c(t) {\n      try {\n        return o(t);\n      } catch (e) {\n        return u.slice();\n      }\n    };\n\n    t.exports.get = function (t) {\n      return u && \"[object Window]\" == i.call(t) ? c(t) : o(r(t));\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t) {\n      var e = r.getKeys(t),\n          n = r.getSymbols;\n      if (n) for (var o, i = n(t), u = r.isEnum, c = 0; i.length > c;) {\n        u.call(t, o = i[c++]) && e.push(o);\n      }\n      return e;\n    };\n  }, function (t, e, n) {\n    var r = n(15);\n\n    t.exports = Array.isArray || function (t) {\n      return \"Array\" == r(t);\n    };\n  }, function (t, e, n) {\n    var r = n(45);\n\n    t.exports = function (t) {\n      if (!r(t)) throw TypeError(t + \" is not an object!\");\n      return t;\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      return \"object\" == typeof t ? null !== t : \"function\" == typeof t;\n    };\n  }, function (t, e) {\n    t.exports = !0;\n  }, function (t, e) {}, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(49)[\"default\"],\n        o = n(51)[\"default\"];\n    e[\"default\"] = function (t, e) {\n      if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof e);\n      t.prototype = r(e && e.prototype, {\n        constructor: {\n          value: t,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      }), e && (o ? o(t, e) : t.__proto__ = e);\n    }, e.__esModule = !0;\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(50),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    var r = n(11);\n\n    t.exports = function (t, e) {\n      return r.create(t, e);\n    };\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(52),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(53), t.exports = n(7).Object.setPrototypeOf;\n  }, function (t, e, n) {\n    var r = n(5);\n    r(r.S, \"Object\", {\n      setPrototypeOf: n(54).set\n    });\n  }, function (t, e, n) {\n    var r = n(11).getDesc,\n        o = n(45),\n        i = n(44),\n        u = function u(t, e) {\n      if (i(t), !o(e) && null !== e) throw TypeError(e + \": can't set as prototype!\");\n    };\n\n    t.exports = {\n      set: Object.setPrototypeOf || (\"__proto__\" in {} ? function (t, e, o) {\n        try {\n          o = n(8)(Function.call, r(Object.prototype, \"__proto__\").set, 2), o(t, []), e = !(t instanceof Array);\n        } catch (i) {\n          e = !0;\n        }\n\n        return function (t, n) {\n          return u(t, n), e ? t.__proto__ = n : o(t, n), t;\n        };\n      }({}, !1) : void 0),\n      check: u\n    };\n  }, function (e, n) {\n    e.exports = t;\n  }, function (t, n) {\n    t.exports = e;\n  }, function (t, e) {\n    t.exports = n;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return t && t.__esModule ? t : {\n        \"default\": t\n      };\n    }\n\n    function o(t, e) {\n      return t.indexOf(e) >= 0;\n    }\n\n    function i(t) {\n      return function () {\n        return !t.apply(this, arguments);\n      };\n    }\n\n    function u(t, e, n) {\n      for (var r = {}, o = (0, m[\"default\"])(t), i = 0, u = o.length; u > i; i++) {\n        var c = o[i],\n            s = t[c];\n        n(e, c) && (r[c] = s);\n      }\n\n      return r;\n    }\n\n    function c(t, e) {\n      return u(t, e, o);\n    }\n\n    function s(t, e) {\n      return u(t, e, i(o));\n    }\n\n    function a(t) {\n      if (\"object\" == (\"undefined\" == typeof t ? \"undefined\" : (0, b[\"default\"])(t)) && null !== t) {\n        if (\"function\" == typeof y[\"default\"]) {\n          var e = (0, y[\"default\"])(t);\n          return e === Object.prototype || null === e;\n        }\n\n        return \"[object Object]\" == Object.prototype.toString.call(t);\n      }\n\n      return !1;\n    }\n\n    function f(t, e) {\n      var n, r, o;\n      n = Array.isArray(t) ? [] : {};\n\n      for (o in t) {\n        r = t[o], null != r && (\"object\" === (\"undefined\" == typeof r ? \"undefined\" : (0, b[\"default\"])(r)) && null !== r && \"function\" !== r.type ? n[o] = f(r, e) : \"function\" === r.type ? n[o] = e[r.name] : n[o] = r);\n      }\n\n      return n;\n    }\n\n    function p(t, e) {\n      return \"function\" == typeof t ? t : function (n) {\n        return \"undefined\" != typeof n[t] ? n[t] : n[e];\n      };\n    }\n\n    function l(t, e) {\n      return console.warn(\"Set margin with prefixes is deprecated use an object instead\"), t += \"-\", (0, m[\"default\"])(e).reduce(function (n, r) {\n        return r.substr(0, t.length) === t && (n[r.replace(t, \"\")] = e[r]), n;\n      }, {});\n    }\n\n    function d(t) {\n      return t && \"function\" == typeof t;\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    }), e.includes = o, e.negate = i, e.filterObject = u, e.pick = c, e.without = s, e.isPlainObject = a, e.bindFunctions = f, e.getValueFunction = p, e.propsByPrefix = l, e.isCallable = d;\n    var h = n(17),\n        y = r(h),\n        v = n(26),\n        b = r(v),\n        g = n(59),\n        m = r(g);\n  }, function (t, e, n) {\n    t.exports = {\n      \"default\": n(60),\n      __esModule: !0\n    };\n  }, function (t, e, n) {\n    n(61), t.exports = n(7).Object.keys;\n  }, function (t, e, n) {\n    var r = n(12);\n    n(20)(\"keys\", function (t) {\n      return function (e) {\n        return t(r(e));\n      };\n    });\n  }]);\n});"],"sourceRoot":""}