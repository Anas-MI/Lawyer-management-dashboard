{"version":3,"sources":["App/components/UcFirst.js","Demo/UIElements/Basic/Button.js","App/components/MainCard.js"],"names":["UcFirst","string","this","props","text","charAt","toUpperCase","slice","React","Component","BasicButton","buttonVariants","buttonOptions","variant","icon","basicButtons","map","idx","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","key","overlay","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","_App_components_UcFirst__WEBPACK_IMPORTED_MODULE_17__","outlineButtons","squareButtons","className","basicDropdownButton","button","title","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","id","concat","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","Item","eventKey","splitDropdownButton","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","Divider","_hoc_Aux__WEBPACK_IMPORTED_MODULE_15__","react_bootstrap__WEBPACK_IMPORTED_MODULE_12__","react_bootstrap__WEBPACK_IMPORTED_MODULE_13__","_App_components_MainCard__WEBPACK_IMPORTED_MODULE_16__","react_bootstrap__WEBPACK_IMPORTED_MODULE_14__","MainCard","state","isOption","_this","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","_this2","cardClass","react__WEBPACK_IMPORTED_MODULE_6___default","alignRight","Toggle","Menu","as","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","Object","_Users_apple_Downloads_lawyerManagement_backend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","children","_hoc_Aux__WEBPACK_IMPORTED_MODULE_11__","windowSize"],"mappings":"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","file":"static/js/19.b1549750.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass UcFirst extends React.Component {\r\n    render() {\r\n        const string = this.props.text;\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n}\r\n\r\nexport default UcFirst;","import React from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button,\r\n    OverlayTrigger,\r\n    Tooltip,\r\n    ButtonToolbar,\r\n    Dropdown,\r\n    DropdownButton,\r\n    SplitButton\r\n} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Card from \"../../../App/components/MainCard\";\r\nimport UcFirst from \"../../../App/components/UcFirst\";\r\n\r\nclass BasicButton extends React.Component {\r\n    render() {\r\n        const buttonVariants = [\r\n            'primary',\r\n            'secondary',\r\n            'success',\r\n            'danger',\r\n            'warning',\r\n            'info',\r\n            'light',\r\n            'dark',\r\n        ];\r\n\r\n        const buttonOptions = [\r\n            {variant: 'primary', icon:'feather icon-thumbs-up'},\r\n            {variant: 'secondary', icon:'feather icon-camera'},\r\n            {variant: 'success', icon:'feather icon-check-circle'},\r\n            {variant: 'danger', icon:'feather icon-slash'},\r\n            {variant: 'warning', icon:'feather icon-alert-triangle'},\r\n            {variant: 'info', icon:'feather icon-info'}\r\n        ];\r\n\r\n        const basicButtons = buttonVariants.map((variant, idx) => (\r\n            <OverlayTrigger key={idx} overlay={<Tooltip>{variant}</Tooltip>}>\r\n                <Button variant={variant}><UcFirst text={variant} /></Button>\r\n            </OverlayTrigger>\r\n        ));\r\n\r\n        const outlineButtons = buttonVariants.map((variant, idx) => (\r\n            <OverlayTrigger key={idx} overlay={<Tooltip>{'outline-'+variant}</Tooltip>}>\r\n                <Button variant={'outline-'+variant}><UcFirst text={variant} /></Button>\r\n            </OverlayTrigger>\r\n        ));\r\n\r\n        const squareButtons = buttonVariants.map((variant, idx) => <Button key={idx} className='btn-square' variant={variant}><UcFirst text={variant} /></Button>);\r\n\r\n\r\n        const basicDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <DropdownButton\r\n                    title={title}\r\n                    variant={button.variant}\r\n                    id={`dropdown-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                </DropdownButton>\r\n            );\r\n        });\r\n\r\n        const splitDropdownButton = buttonOptions.map(\r\n            button => {\r\n                const title = <UcFirst text={button.variant} />;\r\n                return (\r\n                <SplitButton\r\n                    title={title}\r\n                    variant={button.variant}\r\n                    id={`dropdown-split-variants-${button.variant}`}\r\n                    key={button.variant}\r\n                    className=\"mr-2 mb-2\"\r\n                >\r\n                    <Dropdown.Item eventKey=\"1\">Action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"2\">Another action</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"3\">Something else hear</Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item eventKey=\"4\">Separated link</Dropdown.Item>\r\n                </SplitButton>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card title=\"Default\">\r\n                            <p>use <code>variant=\"*\"</code> props in component <code>Button</code> to get various button</p>\r\n                            {basicButtons}\r\n                            <OverlayTrigger overlay={<Tooltip>link</Tooltip>}>\r\n                                <Button variant=\"link\">Link</Button>\r\n                            </OverlayTrigger>\r\n                        </Card>\r\n                        <Card title=\"Outline\">\r\n                            <p>use <code>variant=\"outline-*\"</code> props in component <code>Button</code> to get various outline button</p>\r\n                            {outlineButtons}\r\n                        </Card>\r\n                        <Card title=\"Square Button\">\r\n                            <p>use <code>className=\"btn-square\"</code> props in component <code>Button</code> to get square button</p>\r\n                            {squareButtons}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Card title=\"Basic Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {basicDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                        <Card title=\"Split Dropdown Button\">\r\n                            <ButtonToolbar>\r\n                                {splitDropdownButton}\r\n                            </ButtonToolbar>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BasicButton;\r\n","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: false,\r\n        cardRemove: false\r\n    };\r\n\r\n    cardReloadHandler = () => {\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [];\r\n\r\n        if (this.state.isOption) {\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n"],"sourceRoot":""}